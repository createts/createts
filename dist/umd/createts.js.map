{"version":3,"sources":["webpack://createts/webpack/universalModuleDefinition","webpack://createts/webpack/bootstrap","webpack://createts/./src/Ticker.ts","webpack://createts/./src/animation/AlgorithmFactory.ts","webpack://createts/./src/animation/Animation.ts","webpack://createts/./src/animation/AnimationFactory.ts","webpack://createts/./src/animation/index.ts","webpack://createts/./src/base/BaseValue.ts","webpack://createts/./src/base/Color.ts","webpack://createts/./src/base/Event.ts","webpack://createts/./src/base/Matrix2D.ts","webpack://createts/./src/base/Point.ts","webpack://createts/./src/base/Rect.ts","webpack://createts/./src/base/RoundRect.ts","webpack://createts/./src/base/index.ts","webpack://createts/./src/components/Apng.ts","webpack://createts/./src/components/BitmapText.ts","webpack://createts/./src/components/Container.ts","webpack://createts/./src/components/Img.ts","webpack://createts/./src/components/Scrollable.ts","webpack://createts/./src/components/Sprite.ts","webpack://createts/./src/components/Stage.ts","webpack://createts/./src/components/Text.ts","webpack://createts/./src/components/TouchItem.ts","webpack://createts/./src/components/XObject.ts","webpack://createts/./src/components/index.ts","webpack://createts/./src/index.ts","webpack://createts/./src/parser/ApngParser.ts","webpack://createts/./src/parser/CSSTokenizer.ts","webpack://createts/./src/parser/FunctionParser.ts","webpack://createts/./src/parser/HtmlParser.ts","webpack://createts/./src/parser/index.ts","webpack://createts/./src/resource/ResourceRegistry.ts","webpack://createts/./src/resource/index.ts","webpack://createts/./src/runtime/Runtime.ts","webpack://createts/./src/runtime/WebpageRuntime.ts","webpack://createts/./src/runtime/WechatMiniGameRuntime.ts","webpack://createts/./src/runtime/WechatMiniProgramRuntime.ts","webpack://createts/./src/runtime/index.ts","webpack://createts/./src/style/Background.ts","webpack://createts/./src/style/Border.ts","webpack://createts/./src/style/BorderRadius.ts","webpack://createts/./src/style/Font.ts","webpack://createts/./src/style/LineHeight.ts","webpack://createts/./src/style/Shadow.ts","webpack://createts/./src/style/Style.ts","webpack://createts/./src/style/index.ts","webpack://createts/./src/utils/Base64.ts","webpack://createts/./src/utils/CRC32.ts","webpack://createts/./src/utils/ContainerUtils.ts","webpack://createts/./src/utils/Delay.ts","webpack://createts/./src/utils/DrawUtils.ts","webpack://createts/./src/utils/EnumUtils.ts","webpack://createts/./src/utils/LatestList.ts","webpack://createts/./src/utils/LayoutUtils.ts","webpack://createts/./src/utils/StringUtils.ts","webpack://createts/./src/utils/URLUtils.ts","webpack://createts/./src/utils/index.ts"],"names":[],"mappings":"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","file":"createts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"createts\"] = factory();\n\telse\n\t\troot[\"createts\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Event, EventDispatcher } from './base/Event';\nimport { Runtime } from './runtime/Runtime';\n\n/**\n * Event for ticker.\n */\nexport class TickerEvent extends Event {\n  /**\n   * The current timestamp of this event.\n   */\n  readonly now: number;\n  /**\n   * The delay to previous ticker event.\n   */\n  readonly delay: number;\n  /**\n   * Create a TickerEvent object with type, current timestamp and delay.\n   * @param type Type of this event, can be 'tick', 'start', or 'stop'.\n   * @param now The current timestamp.\n   * @param delay The delay from previous event.\n   */\n  constructor(type: string, now: number, delay: number) {\n    super(type);\n    this.now = now;\n    this.delay = delay;\n  }\n}\n\n/**\n * A Ticker instance provides a tick or heartbeat broadcast at a set interval, listeners of this\n * Ticker instance can listen to the 'tick' event to be notified when a set time interval has\n * elapsed.\n *\n * Code example, create a ticker instance with fps=10\n * ```typescript\n * const ticker = new Ticker(10);  // fps = 10\n * ticker.on('tick', e => {\n *   console.log(e);\n * });\n * ```\n *\n * For most cases, you may not need to create a ticker instance but use the one from Stage\n * instance.\n */\nexport class Ticker extends EventDispatcher<TickerEvent> {\n  /**\n   * The duration between 2 tick events.\n   */\n  private duration: number = 1000 / 60;\n  /**\n   * The previous ticker happen time.\n   */\n  private lastTickTime: number;\n  /**\n   * Indicate this ticker instance is stopped or not.\n   */\n  private stopped: boolean = true;\n\n  /**\n   * Create a Ticker object with specified fps.\n   * @param fps Frames per second, indicates how many ticker events in 1 second, default value is 60.\n   */\n  constructor(fps: number = 60) {\n    super();\n    if (fps <= 0) {\n      console.warn('invalid fps:' + fps + ', reset to 60');\n      fps = 60;\n    }\n    this.setFps(fps);\n    this.lastTickTime = 0;\n    this.start();\n  }\n\n  /**\n   * Set the fps of this ticker object.\n   * @param fps The new fps value.\n   */\n  public setFps(fps: number) {\n    this.duration = 1000 / fps;\n  }\n\n  /**\n   * Start ticking if the current ticker is stopped, a 'start' event will be broadcasted to\n   * listeners.\n   */\n  public start() {\n    if (this.stopped) {\n      this.stopped = false;\n      Runtime.get().requestAnimationFrame(this.onAnimationFrame.bind(this));\n      const now = Date.now();\n      this.dispatchEvent(new TickerEvent('start', now, now - this.lastTickTime));\n    }\n  }\n\n  /**\n   * Stop ticking if the current ticker is started, a 'stop' event will be broadcasted to\n   * listeners.\n   */\n  public stop() {\n    this.stopped = true;\n    const now = Date.now();\n    this.dispatchEvent(new TickerEvent('stop', now, now - this.lastTickTime));\n  }\n\n  /**\n   * Callback of requestAnimationFrame function, check the duration of previous callback to\n   * determine whether broadcast tick event.\n   * @param time current timestamp.\n   */\n  private onAnimationFrame(time: number) {\n    if (this.stopped) {\n      return;\n    }\n    if (time - this.lastTickTime >= this.duration) {\n      this.dispatchEvent(\n        new TickerEvent('tick', time, this.lastTickTime === 0 ? 0 : time - this.lastTickTime)\n      );\n      this.lastTickTime = time;\n    }\n    Runtime.get().requestAnimationFrame(this.onAnimationFrame.bind(this));\n  }\n}\n","export interface IAlgorithm {\n  calculate(percent: number): number;\n}\n\nexport class Linear implements IAlgorithm {\n  public calculate(percent: number): number {\n    return percent;\n  }\n}\n\nexport class PowIn implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calculate(percent: number): number {\n    return Math.pow(percent, this.pow);\n  }\n}\n\nexport class PowOut implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calculate(percent: number): number {\n    return 1 - Math.pow(1 - percent, this.pow);\n  }\n}\n\nexport class PowInOut implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calculate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return 0.5 * Math.pow(percent, this.pow);\n    } else {\n      return 1 - 0.5 * Math.abs(Math.pow(2 - percent, this.pow));\n    }\n  }\n}\n\nexport class SineIn implements IAlgorithm {\n  public calculate(percent: number): number {\n    return 1 - Math.cos((percent * Math.PI) / 2);\n  }\n}\n\nexport class SineOut implements IAlgorithm {\n  public calculate(percent: number): number {\n    return Math.sin((percent * Math.PI) / 2);\n  }\n}\n\nexport class SineInOut implements IAlgorithm {\n  public calculate(percent: number): number {\n    return -0.5 * (Math.cos(Math.PI * percent) - 1);\n  }\n}\n\nexport class BackIn implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calculate(percent: number): number {\n    return percent * percent * ((this.amount + 1) * percent - this.amount);\n  }\n}\n\nexport class BackOut implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calculate(percent: number): number {\n    return --percent * percent * ((this.amount + 1) * percent + this.amount) + 1;\n  }\n}\n\nexport class BackInOut implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calculate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return 0.5 * (percent * percent * ((this.amount + 1) * percent - this.amount));\n    } else {\n      return 0.5 * ((percent -= 2) * percent * ((this.amount + 1) * percent + this.amount) + 2);\n    }\n  }\n}\n\nexport class CircIn implements IAlgorithm {\n  public calculate(percent: number): number {\n    return -(Math.sqrt(1 - percent * percent) - 1);\n  }\n}\n\nexport class CircOut implements IAlgorithm {\n  public calculate(percent: number): number {\n    return Math.sqrt(1 - --percent * percent);\n  }\n}\n\nexport class CircInOut implements IAlgorithm {\n  public calculate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return -0.5 * (Math.sqrt(1 - percent * percent) - 1);\n    } else {\n      return 0.5 * (Math.sqrt(1 - (percent -= 2) * percent) + 1);\n    }\n  }\n}\n\nclass Bounce {\n  public calculateOut(percent: number): number {\n    if (percent < 1 / 2.75) {\n      return 7.5625 * percent * percent;\n    } else if (percent < 2 / 2.75) {\n      return 7.5625 * (percent -= 1.5 / 2.75) * percent + 0.75;\n    } else if (percent < 2.5 / 2.75) {\n      return 7.5625 * (percent -= 2.25 / 2.75) * percent + 0.9375;\n    } else {\n      return 7.5625 * (percent -= 2.625 / 2.75) * percent + 0.984375;\n    }\n  }\n}\n\nexport class BounceOut extends Bounce implements IAlgorithm {\n  public calculate(percent: number): number {\n    return super.calculateOut(percent);\n  }\n}\n\nexport class BounceIn extends Bounce {\n  public calculate(percent: number): number {\n    return 1 - super.calculateOut(1 - percent);\n  }\n}\n\nexport class BounceInOut extends BounceIn {\n  public calculate(percent: number): number {\n    if (percent < 0.5) {\n      return super.calculate(percent * 2) * 0.5;\n    } else {\n      return super.calculateOut(percent * 2 - 1) * 0.5 + 0.5;\n    }\n  }\n}\n\nconst PI2 = Math.PI * 2;\n\nexport class ElasticIn implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calculate(percent: number): number {\n    if (percent === 0 || percent === 1) {\n      return percent;\n    }\n    return -(\n      this.amplitude *\n      Math.pow(2, 10 * (percent -= 1)) *\n      Math.sin(((percent - this.s) * PI2) / this.period)\n    );\n  }\n}\n\nexport class ElasticOut implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calculate(percent: number): number {\n    if (percent === 0 || percent === 1) {\n      return percent;\n    }\n    return (\n      this.amplitude *\n        Math.pow(2, -10 * percent) *\n        Math.sin(((percent - this.s) * PI2) / this.period) +\n      1\n    );\n  }\n}\n\nexport class ElasticInOut implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calculate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return (\n        -0.5 *\n        (this.amplitude *\n          Math.pow(2, 10 * (percent -= 1)) *\n          Math.sin(((percent - this.s) * PI2) / this.period))\n      );\n    } else {\n      return (\n        this.amplitude *\n          Math.pow(2, -10 * (percent -= 1)) *\n          Math.sin(((percent - this.s) * PI2) / this.period) *\n          0.5 +\n        1\n      );\n    }\n  }\n}\n\n/**\n * The AlgorithmFactory provides a collection of easing algorithms for animation.\n *\n * Here is an example:\n *\n * ```typescript\n * // use the registered algorithm name.\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), \"quadInOut\");\n * // use the algorithm instance.\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), new BackOut(2));\n * ```\n *\n * Developer can also register customized algorithm, code example:\n * ```\n * class MyAlgo implements IAlgorithm {\n *   public calculate(percent: number): number {\n *     return percent; // change it with your own algorithm.\n *   }\n * }\n * AlgorithmFactory.register('myalgo', new MyAlgo());\n *\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), \"quadInOut\");\n */\nexport class AlgorithmFactory {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Registers algorithm with a specified name.\n   * @param name name of algorithm\n   * @param algorithm the implementation instance of the algorithm\n   */\n  public static register(name: string, algorithm: IAlgorithm) {\n    this.algorithms.set(name, algorithm);\n  }\n\n  /**\n   * Registers algorithm with a specified name.\n   * @param data A name to IAlgorithm instance map to be registered.\n   */\n  public static registerAll(data: { [key: string]: IAlgorithm }) {\n    for (const name in data) {\n      this.algorithms.set(name, data[name]);\n    }\n  }\n\n  /**\n   * Gets algorithm instance by a specified name.\n   * @param name the name of algorithm, registered by AlgorithmFactory.register\n   * @returns instance of algorithm, undefined for non-existed name\n   */\n  public static get(name: string): IAlgorithm | undefined {\n    return this.algorithms.get(name);\n  }\n\n  /**\n   * Algorithm instances collection, keyed by name;\n   */\n  private static algorithms: Map<string, IAlgorithm> = new Map();\n}\n\nAlgorithmFactory.registerAll({\n  linear: new Linear(),\n  quadIn: new PowIn(2),\n  quadOut: new PowOut(2),\n  quadInOut: new PowInOut(2),\n  cubicIn: new PowIn(3),\n  cubicOut: new PowOut(3),\n  cubicInOut: new PowInOut(3),\n  quartIn: new PowIn(4),\n  quartOut: new PowOut(4),\n  quartInOut: new PowInOut(4),\n  quintIn: new PowIn(5),\n  quintOut: new PowOut(5),\n  quintInOut: new PowInOut(5),\n  sineIn: new SineIn(),\n  sineOut: new SineOut(),\n  sineInOut: new SineInOut(),\n  backIn: new BackIn(1.7),\n  backOut: new BackOut(1.7),\n  backInOut: new BackInOut(1.7),\n  circIn: new CircIn(),\n  circOut: new CircOut(),\n  circInOut: new CircInOut(),\n  bounceIn: new BounceIn(),\n  bounceOut: new BounceOut(),\n  bounceInOut: new BounceInOut(),\n  elasticIn: new ElasticIn(1, 0.3),\n  elasticOut: new ElasticOut(1, 0.3),\n  elasticInOut: new ElasticInOut(1, 0.3)\n});\n","import { Event, EventDispatcher } from '../base/Event';\nimport { XObject, XObjectEvent } from '../components/XObject';\nimport { ContainerUtils } from '../utils/ContainerUtils';\nimport { AlgorithmFactory, IAlgorithm } from './AlgorithmFactory';\n\nexport enum AnimationValueType {\n  NUMBER = 1,\n  ANIMATABLE = 2\n}\n\nexport enum AnimateEventType {\n  UPDATE = 'update',\n  COMPLETE = 'complete'\n}\n\nexport class AnimateEvent extends Event {\n  public readonly step: number;\n  public readonly progress: number;\n  public readonly value: AnimationValues | IAnimatable<any> | number | undefined;\n\n  constructor(\n    type: string,\n    step: number,\n    progress: number,\n    value?: AnimationValues | number | IAnimatable<any>\n  ) {\n    super(type, false, true);\n    this.step = step;\n    this.progress = progress;\n    this.value = value;\n  }\n\n  toString() {\n    return '[AnimateEvent (type=' + this.type + ')]';\n  }\n}\n\nexport interface IAnimatable<T> {\n  update(target: T, progress: number): T;\n  convertFrom(src: any): T;\n  isAnimatable(): boolean;\n}\n\nexport function isIAnimatable(obj: any): boolean {\n  return obj && obj.isAnimatable && obj.isAnimatable();\n}\n\nfunction isNumber(obj: any): boolean {\n  return typeof obj === 'number';\n}\n\nexport type AnimationValues = {\n  [key: string]: number | string | IAnimatable<any>;\n};\n\nexport type AnimationProps = {\n  [key: string]: {\n    type: AnimationValueType;\n    from: number | IAnimatable<any>;\n    to: number | IAnimatable<any>;\n    current?: number | IAnimatable<any>;\n  };\n};\n\nexport type AnimationTarget = number | IAnimatable<any> | AnimationValues | XObject;\n\nexport abstract class AnimationStep {\n  readonly duration: number;\n  readonly target: AnimationTarget;\n  public endTime: number = 0;\n\n  constructor(target: AnimationTarget, duration: number) {\n    this.target = target;\n    this.duration = duration;\n  }\n\n  onStart() {\n    return;\n  }\n\n  onUpdate(percent: number): AnimationValues | number | IAnimatable<any> | undefined {\n    return undefined;\n  }\n\n  onEnd() {\n    return;\n  }\n}\n\nclass WaitStep extends AnimationStep {}\n\nclass ToStep extends AnimationStep {\n  algorithm: IAlgorithm;\n  values: number | IAnimatable<any> | AnimationValues;\n  computed?: AnimationProps;\n\n  constructor(\n    target: AnimationTarget,\n    value: number | IAnimatable<any> | AnimationValues,\n    algorithm: string | IAlgorithm,\n    duration: number\n  ) {\n    super(target, duration);\n    if (typeof algorithm === 'string') {\n      const algo = AlgorithmFactory.get(algorithm);\n      if (!algo) {\n        throw new Error('unknown algorithm:' + algorithm);\n      }\n      this.algorithm = algo;\n    } else {\n      this.algorithm = algorithm;\n    }\n    this.values = value;\n  }\n\n  onStart() {\n    this.computed = {};\n    if (isNumber(this.target)) {\n      this.computed.value = {\n        type: AnimationValueType.NUMBER,\n        from: this.target as number,\n        to: this.values as number\n      };\n    } else if (isIAnimatable(this.target)) {\n      const target = this.target as IAnimatable<any>;\n      this.computed.value = {\n        type: AnimationValueType.ANIMATABLE,\n        from: target,\n        to: target.convertFrom(this.values)\n      };\n    } else {\n      const values = this.values as AnimationValues;\n      for (const key in values) {\n        const dest = values[key];\n        const src = (this.target as any)[key];\n\n        if (isIAnimatable(dest)) {\n          const to = dest as IAnimatable<any>;\n          this.computed[key] = {\n            type: AnimationValueType.ANIMATABLE,\n            from: to.convertFrom(src),\n            to\n          };\n        } else if (isIAnimatable(src)) {\n          const from = src as IAnimatable<any>;\n          this.computed[key] = {\n            type: AnimationValueType.ANIMATABLE,\n            from,\n            to: from.convertFrom(dest)\n          };\n        } else if (typeof dest === 'number') {\n          let from = src;\n          if (isNaN(from)) {\n            from = parseFloat(src + '');\n            if (isNaN(from)) {\n              from = 0;\n            }\n          }\n          this.computed[key] = {\n            type: AnimationValueType.NUMBER,\n            from,\n            to: dest\n          };\n        }\n      }\n    }\n  }\n\n  onUpdate(percent: number): AnimationValues | number | IAnimatable<any> | undefined {\n    if (ContainerUtils.isEmpty(this.computed)) {\n      return undefined;\n    }\n\n    if (isNumber(this.target)) {\n      const from = this.computed.value.from as number;\n      const to = this.computed.value.to as number;\n      this.computed.value.current = from + (to - from) * this.algorithm.calculate(percent);\n      return this.computed.value.current;\n    } else if (isIAnimatable(this.target)) {\n      const from = this.computed.value.from as IAnimatable<any>;\n      const to = this.computed.value.to as IAnimatable<any>;\n      this.computed.value.current = from.update(to, this.algorithm.calculate(percent));\n      return this.computed.value.current;\n    } else {\n      const result: AnimationValues = {};\n      let updated = false;\n      for (const name in this.computed) {\n        const attr: any = this.computed[name];\n        switch (attr.type) {\n          case AnimationValueType.NUMBER:\n            {\n              const from = attr.from as number;\n              const to = attr.to as number;\n              attr.current = from + (to - from) * this.algorithm.calculate(percent);\n            }\n            break;\n          case AnimationValueType.ANIMATABLE:\n            {\n              const from = attr.from as IAnimatable<any>;\n              const to = attr.to as IAnimatable<any>;\n              attr.current = from.update(to, this.algorithm.calculate(percent));\n            }\n            break;\n        }\n        (this.target as any)[name] = attr.current;\n        result[name] = attr.current;\n        updated = true;\n      }\n      return updated ? result : undefined;\n    }\n  }\n}\n\nclass CssStep extends AnimationStep {\n  algorithm: IAlgorithm;\n  values: AnimationValues;\n  computed?: AnimationProps;\n\n  constructor(\n    target: XObject,\n    values: AnimationValues,\n    algorithm: string | IAlgorithm,\n    duration: number\n  ) {\n    super(target, duration);\n    if (typeof algorithm === 'string') {\n      const algo = AlgorithmFactory.get(algorithm);\n      if (!algo) {\n        throw new Error('unknown algorithm:' + algorithm);\n      }\n      this.algorithm = algo;\n    } else {\n      this.algorithm = algorithm;\n    }\n    this.values = values;\n  }\n\n  onStart() {\n    this.computed = (this.target as XObject).style.getSnapshotForAnimation(\n      this.target as XObject,\n      this.values\n    );\n  }\n\n  onUpdate(percent: number): AnimationValues | undefined {\n    if (ContainerUtils.isEmpty(this.computed)) {\n      return undefined;\n    }\n    const result: AnimationValues = {};\n    let updated = false;\n    const target = this.target as XObject;\n    for (const name in this.computed) {\n      const attr: any = this.computed[name];\n      switch (attr.type) {\n        case AnimationValueType.NUMBER:\n          {\n            const from = attr.from as number;\n            const to = attr.to as number;\n            attr.current = from + (to - from) * this.algorithm.calculate(percent);\n          }\n          break;\n        case AnimationValueType.ANIMATABLE:\n          {\n            const from = attr.from as IAnimatable<any>;\n            const to = attr.to as IAnimatable<any>;\n            attr.current = from.update(to, this.algorithm.calculate(percent));\n          }\n          break;\n      }\n      result[name] = attr.current;\n      updated = true;\n    }\n    if (updated) {\n      target.style.applyAnimationResult(result);\n      target.dispatchEvent(new XObjectEvent('update', true, true, target));\n      return result;\n    } else {\n      return undefined;\n    }\n  }\n}\n\nclass CallStep extends AnimationStep {\n  call: (target: AnimationTarget) => any;\n  constructor(target: AnimationTarget, call: () => any) {\n    super(target, 0);\n    this.call = call;\n  }\n  onEnd() {\n    this.call(this.target);\n  }\n}\n\nexport enum AnimationState {\n  RUNNING = 1,\n  PAUSED = 2,\n  COMPLETED = 3,\n  CANCELLED = 4\n}\n\nexport class Animation extends EventDispatcher<AnimateEvent> {\n  public playTimes: number = 1;\n  public state: AnimationState = AnimationState.RUNNING;\n  public target: AnimationTarget;\n  private steps: AnimationStep[] = [];\n  private roundStartTime: number = 0;\n  private beginTime: number;\n  private pauseTime: number;\n  private duration: number = 0;\n\n  private currentStepIndex: number = 0;\n  private currentStepProgress: number = 0;\n\n  constructor(target: AnimationTarget, loop?: boolean) {\n    super();\n    this.target = target;\n    this.playTimes = loop ? 0 : 1;\n    this.roundStartTime = this.beginTime = Date.now();\n    this.currentStepIndex = 0;\n    this.state = AnimationState.RUNNING;\n  }\n\n  public toPromise(): Promise<AnimateEvent> {\n    return new Promise<AnimateEvent>((resolve, reject) => {\n      this.addEventListener(AnimateEventType.COMPLETE, event => {\n        resolve(event);\n      });\n    });\n  }\n\n  public pause(): boolean {\n    if (this.state === AnimationState.RUNNING) {\n      this.state = AnimationState.PAUSED;\n      this.pauseTime = Date.now();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public resume(): boolean {\n    if (this.state === AnimationState.PAUSED) {\n      const duration = Date.now() - this.pauseTime;\n      this.roundStartTime += duration;\n      this.beginTime += duration;\n      this.state = AnimationState.RUNNING;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public loop(loop: boolean): Animation {\n    this.playTimes = loop ? 0 : 1;\n    return this;\n  }\n\n  public times(times: number): Animation {\n    this.playTimes = times;\n    return this;\n  }\n\n  public to(props: any, duration: number, algorithm: string | IAlgorithm = 'linear'): Animation {\n    this.addStep(new ToStep(this.target, props, algorithm, duration));\n    return this;\n  }\n\n  public css(props: any, duration: number, algorithm: string | IAlgorithm = 'linear'): Animation {\n    this.addStep(new CssStep(this.target as XObject, props, algorithm, duration));\n    return this;\n  }\n\n  public call(call: () => any): Animation {\n    return this.addStep(new CallStep(this.target, call));\n  }\n\n  public wait(duration: number): Animation {\n    return this.addStep(new WaitStep(this.target, duration));\n  }\n\n  public onInterval(): boolean {\n    if (this.duration <= 0) {\n      // This is an empty animation without any step.\n      return false;\n    }\n    const now = Date.now();\n    if (now < this.roundStartTime) {\n      // The current time is before start time, this is usually caused by changing system time\n      // during animation playing, ignore this.\n      return false;\n    }\n\n    let passed = now - this.roundStartTime;\n    const currentStep = this.steps[this.currentStepIndex];\n\n    if (passed >= this.duration) {\n      // To end\n      this.doUpdateInternal(1);\n      currentStep.onEnd();\n      for (\n        ++this.currentStepIndex;\n        this.currentStepIndex < this.steps.length;\n        ++this.currentStepIndex\n      ) {\n        const step = this.steps[this.currentStepIndex];\n        step.onStart();\n        this.doUpdateInternal(1);\n        step.onEnd();\n      }\n\n      // Check whether to start a new round\n      let newRound = true;\n      if (this.playTimes > 0) {\n        newRound = this.playTimes * this.duration > now - this.beginTime;\n      }\n\n      if (!newRound) {\n        this.currentStepIndex = this.steps.length - 1;\n        this.state = AnimationState.COMPLETED;\n        this.dispatchEvent(\n          new AnimateEvent(\n            AnimateEventType.COMPLETE,\n            this.currentStepIndex,\n            this.currentStepProgress\n          )\n        );\n      } else {\n        // New loop\n        passed = passed % this.duration;\n        this.roundStartTime = now - passed;\n        this.currentStepIndex = 0;\n        while (true) {\n          const step = this.steps[this.currentStepIndex];\n          step.onStart();\n          if (step.endTime > passed) {\n            const progress = 1 - (step.endTime - passed) / step.duration;\n            this.doUpdateInternal(progress);\n            break;\n          } else {\n            this.doUpdateInternal(1);\n            step.onEnd();\n            ++this.currentStepIndex;\n          }\n        }\n      }\n    } else {\n      if (currentStep.endTime > passed) {\n        const progress = 1 - (currentStep.endTime - passed) / currentStep.duration;\n        this.doUpdateInternal(progress);\n      } else {\n        this.doUpdateInternal(1);\n        currentStep.onEnd();\n        ++this.currentStepIndex;\n        while (true) {\n          const step = this.steps[this.currentStepIndex];\n          step.onStart();\n          if (step.endTime > passed && step.duration > 0) {\n            const progress = 1 - (step.endTime - passed) / step.duration;\n            this.doUpdateInternal(progress);\n            break;\n          } else {\n            this.doUpdateInternal(1);\n            step.onEnd();\n            ++this.currentStepIndex;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  public cancel() {\n    this.state = AnimationState.CANCELLED;\n    this.dispatchEvent(\n      new AnimateEvent(AnimateEventType.COMPLETE, this.currentStepIndex, this.currentStepProgress)\n    );\n  }\n\n  private doUpdateInternal(progress: number) {\n    this.currentStepProgress = progress;\n    const result = this.steps[this.currentStepIndex].onUpdate(progress);\n    if (result) {\n      this.dispatchEvent(\n        new AnimateEvent(\n          AnimateEventType.UPDATE,\n          this.currentStepIndex,\n          this.currentStepProgress,\n          result\n        )\n      );\n    }\n  }\n\n  public addStep(step: AnimationStep): Animation {\n    this.steps.push(step);\n    this.duration += step.duration;\n    step.endTime = this.duration;\n    if (this.steps.length === 1) {\n      step.onStart();\n    }\n    return this;\n  }\n}\n","import { Event, EventDispatcher } from '../base/Event';\nimport { Animation, AnimationState, AnimationTarget } from './Animation';\n\nexport class AnimationFactory extends EventDispatcher<Event> {\n  public create(target: AnimationTarget, override?: boolean): Animation {\n    if (override || typeof target !== 'number') {\n      this.removeByTarget(target);\n    }\n    const animation = new Animation(target);\n    this.animations.push(animation);\n    return animation;\n  }\n\n  public removeByTarget(target: AnimationTarget) {\n    for (const animation of this.animations) {\n      if (animation.target === target && animation.state === AnimationState.RUNNING) {\n        animation.cancel();\n      }\n    }\n  }\n\n  public clear() {\n    for (const animation of this.animations) {\n      animation.cancel();\n    }\n  }\n\n  public onInterval(): boolean {\n    const size = this.animations.length;\n    if (size === 0) {\n      return false;\n    }\n\n    let updated = false;\n    for (let i = 0; i < size; ++i) {\n      if (this.animations[i].onInterval()) {\n        updated = true;\n      }\n    }\n    if (updated) {\n      this.dispatchEvent(new Event('update', false, true));\n    }\n    for (let i = this.animations.length - 1; i >= 0; --i) {\n      const animation = this.animations[i];\n      if (\n        animation.state === AnimationState.COMPLETED ||\n        animation.state === AnimationState.CANCELLED\n      ) {\n        this.animations.splice(i, 1);\n      }\n    }\n    return updated;\n  }\n\n  private animations: Animation[] = [];\n}\n","export * from './AlgorithmFactory';\nexport * from './Animation';\nexport * from './AnimationFactory';\n","import { IAnimatable } from '../animation/Animation';\n\nexport enum BaseValueUnit {\n  PX = 1,\n  PERCENTAGE = 2\n}\n\n/**\n * This class represents an immutable value object contains a number value and unit.\n *\n * There are 2 types of units:\n * 1. PX: absolute value.\n * 1. PERCENTAGE: the percentage of parent value.\n */\nexport class BaseValue implements IAnimatable<BaseValue> {\n  public static ZERO = BaseValue.of('0');\n  /**\n   * Convert a string to a BaseValue object.\n   * @param value if it is a string value and ends with '%', parse it as a percentage value, otherwise parse it as a absolute value.\n   * @returns A BaseValue object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string | number, silent: boolean = false): BaseValue | undefined {\n    if (typeof value === 'string') {\n      const num = parseFloat(value);\n      if (isNaN(num)) {\n        if (!silent) {\n          console.warn('invalid value:' + value);\n        }\n        return undefined;\n      }\n      if (value.endsWith('%')) {\n        return new BaseValue(num, BaseValueUnit.PERCENTAGE);\n      } else {\n        return new BaseValue(num, BaseValueUnit.PX);\n      }\n    } else {\n      return new BaseValue(value, BaseValueUnit.PX);\n    }\n  }\n\n  /**\n   * The number part of this object.\n   */\n  public readonly numberValue: number = 0;\n  /**\n   * The unit of this object.\n   */\n  public readonly unit: BaseValueUnit;\n\n  /**\n   * Constructs a new BaseValue object whose value and unit are specified by the arguments of the same name.\n   * @param value the specified number value\n   * @param unit the specified unit\n   */\n  constructor(value: number, unit: BaseValueUnit = BaseValueUnit.PX) {\n    this.unit = unit;\n    this.numberValue = value;\n  }\n\n  /**\n   * Calculate the absolute value by the arguments.\n   * @param base the base value for percentage unit.\n   * @returns current object's number value if the unit is absolute, or base * number / 100 for percentage unit.\n   */\n  public getValue(base: number): number {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return (this.numberValue * base) / 100;\n      case BaseValueUnit.PX:\n        return this.numberValue;\n    }\n  }\n\n  /**\n   * Creates a new BaseValue object with absolute unit by current object and a specified base value.\n   * @param base the base value for percentage unit.\n   * @returns a new BaseValue object with absolute unit.\n   */\n  public toAbsolute(base: number): BaseValue {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return new BaseValue((this.numberValue * base) / 100, BaseValueUnit.PX);\n      case BaseValueUnit.PX:\n        return this;\n    }\n  }\n\n  /**\n   * Creates a new BaseValue object with percentage unit by current object and a specified base value.\n   * @param base the base value for percentage unit.\n   * @returns a new BaseValue object with percentage unit.\n   */\n  public toPercentage(base: number): BaseValue {\n    switch (this.unit) {\n      case BaseValueUnit.PX:\n        return new BaseValue((this.numberValue / base) * 100, BaseValueUnit.PERCENTAGE);\n      case BaseValueUnit.PERCENTAGE:\n        return this;\n    }\n  }\n\n  /**\n   * Returns a string representation of this BaseValue object.\n   * @returns a string representation of this object\n   */\n  public toString(): string {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return this.numberValue + '%';\n      case BaseValueUnit.PX:\n        return this.numberValue + '';\n    }\n  }\n\n  /**\n   * Checks whether two BaseValue objects are equal.\n   * The result is true if and only if the argument is a BaseValue object that has the same number value and unit as this Rect.\n   * @param that the Object to compare with this BaseValue object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: BaseValue): boolean {\n    return this.numberValue === that.numberValue && this.unit === this.unit;\n  }\n\n  /**\n   * Creates a new Rect with the same upper-left corner, width, and height as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): BaseValue {\n    return new BaseValue(this.numberValue, this.unit);\n  }\n\n  update(target: BaseValue, progress: number): BaseValue {\n    return new BaseValue(\n      this.numberValue + (target.numberValue - this.numberValue) * progress,\n      target.unit\n    );\n  }\n\n  convertFrom(src: any): BaseValue {\n    const result = BaseValue.of(src);\n    if (result === undefined) {\n      return new BaseValue(0);\n    } else {\n      return result;\n    }\n  }\n\n  isAnimatable(): boolean {\n    return true;\n  }\n}\n","import { IAnimatable } from '../animation/Animation';\nimport { FunctionParser } from '../parser/FunctionParser';\n\nconst REG_VALUE = /^([0-9]+|[0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)%?$/;\nconst REG_HEX = /^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/i;\n\n/**\n * This class represents an immutable color value. It uses the sRGB (standard Red-Green-Blue) system, along with an\n * alpha value ranging from transparent (0.0f) and opaque (1.0f). Further information about sRGB can be found at\n * <a href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html</a>.\n *\n * Static method Color.of can be used to parse a string to a Color object, and it supports 4 types of format:\n * 1. hex value starts from '#'\n *    1. Hexadecimal notation: ```#RRGGBB[AA]```: R (red), G (green), B (blue), and A (alpha) are hexadecimal characters (0–9, A–F). A is optional. For example, ```#ff0000``` is equivalent to ```#ff0000ff```.\n *    1. Hexadecimal notation: ```#RGB[A]```: R (red), G (green), B (blue), and A (alpha) are hexadecimal characters (0–9, A–F). A is optional. The three-digit notation (#RGB) is a shorter version of the six-digit form (#RRGGBB). For example, #f09 is the same color as #ff0099. Likewise, the four-digit RGB notation (#RGBA) is a shorter version of the eight-digit form (#RRGGBBAA). For example, ```#0f38``` is the same color as ```#00ff3388```.\n * ```typescript\n * const white = Color.of('#fff');\n * const black = Color.of('#000000ff');\n * ```\n * 1. named color: there are 150 pre-defined named colors, also see <a href='https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords'>https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords</a>.\n * ```typescript\n * const white1 = Color.WHITE;\n * const white2 = Color.of('white');\n * ```\n * 1. Functional notation: rgb[a](R, G, B[, A]), R (red), G (green), and B (blue) can be either <number>s or <percentage>s, where the number 255 corresponds to 100%. A (alpha) can be a <number> between 0 and 1, or a <percentage>, where the number 1 corresponds to 100% (full opacity).\n * ```typescript\n * const white1 = Color.of('rgb(255, 255, 255)');\n * const white2 = Color.of('rgba(100%, 255, 255, 1)');\n * ```\n */\nexport class Color implements IAnimatable<Color> {\n  public static readonly TRANSPARENT = Color.of('#0000');\n  public static readonly ALICEBLUE = Color.of('#F0F8FF')!;\n  public static readonly ANTIQUEWHITE = Color.of('#FAEBD7')!;\n  public static readonly AQUA = Color.of('#00FFFF')!;\n  public static readonly AQUAMARINE = Color.of('#7FFFD4')!;\n  public static readonly AZURE = Color.of('#F0FFFF')!;\n  public static readonly BEIGE = Color.of('#F5F5DC')!;\n  public static readonly BISQUE = Color.of('#FFE4C4')!;\n  public static readonly BLACK = Color.of('#000000')!;\n  public static readonly BLANCHEDALMOND = Color.of('#FFEBCD')!;\n  public static readonly BLUE = Color.of('#0000FF')!;\n  public static readonly BLUEVIOLET = Color.of('#8A2BE2')!;\n  public static readonly BROWN = Color.of('#A52A2A')!;\n  public static readonly BURLYWOOD = Color.of('#DEB887')!;\n  public static readonly CADETBLUE = Color.of('#5F9EA0')!;\n  public static readonly CHARTREUSE = Color.of('#7FFF00')!;\n  public static readonly CHOCOLATE = Color.of('#D2691E')!;\n  public static readonly CORAL = Color.of('#FF7F50')!;\n  public static readonly CORNFLOWERBLUE = Color.of('#6495ED')!;\n  public static readonly CORNSILK = Color.of('#FFF8DC')!;\n  public static readonly CRIMSON = Color.of('#DC143C')!;\n  public static readonly CYAN = Color.of('#00FFFF')!;\n  public static readonly DARKBLUE = Color.of('#00008B')!;\n  public static readonly DARKCYAN = Color.of('#008B8B')!;\n  public static readonly DARKGOLDENROD = Color.of('#B8860B')!;\n  public static readonly DARKGRAY = Color.of('#A9A9A9')!;\n  public static readonly DARKGREY = Color.of('#A9A9A9')!;\n  public static readonly DARKGREEN = Color.of('#006400')!;\n  public static readonly DARKKHAKI = Color.of('#BDB76B')!;\n  public static readonly DARKMAGENTA = Color.of('#8B008B')!;\n  public static readonly DARKOLIVEGREEN = Color.of('#556B2F')!;\n  public static readonly DARKORANGE = Color.of('#FF8C00')!;\n  public static readonly DARKORCHID = Color.of('#9932CC')!;\n  public static readonly DARKRED = Color.of('#8B0000')!;\n  public static readonly DARKSALMON = Color.of('#E9967A')!;\n  public static readonly DARKSEAGREEN = Color.of('#8FBC8F')!;\n  public static readonly DARKSLATEBLUE = Color.of('#483D8B')!;\n  public static readonly DARKSLATEGRAY = Color.of('#2F4F4F')!;\n  public static readonly DARKSLATEGREY = Color.of('#2F4F4F')!;\n  public static readonly DARKTURQUOISE = Color.of('#00CED1')!;\n  public static readonly DARKVIOLET = Color.of('#9400D3')!;\n  public static readonly DEEPPINK = Color.of('#FF1493')!;\n  public static readonly DEEPSKYBLUE = Color.of('#00BFFF')!;\n  public static readonly DIMGRAY = Color.of('#696969')!;\n  public static readonly DIMGREY = Color.of('#696969')!;\n  public static readonly DODGERBLUE = Color.of('#1E90FF')!;\n  public static readonly FIREBRICK = Color.of('#B22222')!;\n  public static readonly FLORALWHITE = Color.of('#FFFAF0')!;\n  public static readonly FORESTGREEN = Color.of('#228B22')!;\n  public static readonly FUCHSIA = Color.of('#FF00FF')!;\n  public static readonly GAINSBORO = Color.of('#DCDCDC')!;\n  public static readonly GHOSTWHITE = Color.of('#F8F8FF')!;\n  public static readonly GOLD = Color.of('#FFD700')!;\n  public static readonly GOLDENROD = Color.of('#DAA520')!;\n  public static readonly GRAY = Color.of('#808080')!;\n  public static readonly GREY = Color.of('#808080')!;\n  public static readonly GREEN = Color.of('#008000')!;\n  public static readonly GREENYELLOW = Color.of('#ADFF2F')!;\n  public static readonly HONEYDEW = Color.of('#F0FFF0')!;\n  public static readonly HOTPINK = Color.of('#FF69B4')!;\n  public static readonly INDIANRED = Color.of('#CD5C5C')!;\n  public static readonly INDIGO = Color.of('#4B0082')!;\n  public static readonly IVORY = Color.of('#FFFFF0')!;\n  public static readonly KHAKI = Color.of('#F0E68C')!;\n  public static readonly LAVENDER = Color.of('#E6E6FA')!;\n  public static readonly LAVENDERBLUSH = Color.of('#FFF0F5')!;\n  public static readonly LAWNGREEN = Color.of('#7CFC00')!;\n  public static readonly LEMONCHIFFON = Color.of('#FFFACD')!;\n  public static readonly LIGHTBLUE = Color.of('#ADD8E6')!;\n  public static readonly LIGHTCORAL = Color.of('#F08080')!;\n  public static readonly LIGHTCYAN = Color.of('#E0FFFF')!;\n  public static readonly LIGHTGOLDENRODYELLOW = Color.of('#FAFAD2')!;\n  public static readonly LIGHTGRAY = Color.of('#D3D3D3')!;\n  public static readonly LIGHTGREY = Color.of('#D3D3D3')!;\n  public static readonly LIGHTGREEN = Color.of('#90EE90')!;\n  public static readonly LIGHTPINK = Color.of('#FFB6C1')!;\n  public static readonly LIGHTSALMON = Color.of('#FFA07A')!;\n  public static readonly LIGHTSEAGREEN = Color.of('#20B2AA')!;\n  public static readonly LIGHTSKYBLUE = Color.of('#87CEFA')!;\n  public static readonly LIGHTSLATEGRAY = Color.of('#778899')!;\n  public static readonly LIGHTSLATEGREY = Color.of('#778899')!;\n  public static readonly LIGHTSTEELBLUE = Color.of('#B0C4DE')!;\n  public static readonly LIGHTYELLOW = Color.of('#FFFFE0')!;\n  public static readonly LIME = Color.of('#00FF00')!;\n  public static readonly LIMEGREEN = Color.of('#32CD32')!;\n  public static readonly LINEN = Color.of('#FAF0E6')!;\n  public static readonly MAGENTA = Color.of('#FF00FF')!;\n  public static readonly MAROON = Color.of('#800000')!;\n  public static readonly MEDIUMAQUAMARINE = Color.of('#66CDAA')!;\n  public static readonly MEDIUMBLUE = Color.of('#0000CD')!;\n  public static readonly MEDIUMORCHID = Color.of('#BA55D3')!;\n  public static readonly MEDIUMPURPLE = Color.of('#9370DB')!;\n  public static readonly MEDIUMSEAGREEN = Color.of('#3CB371')!;\n  public static readonly MEDIUMSLATEBLUE = Color.of('#7B68EE')!;\n  public static readonly MEDIUMSPRINGGREEN = Color.of('#00FA9A')!;\n  public static readonly MEDIUMTURQUOISE = Color.of('#48D1CC')!;\n  public static readonly MEDIUMVIOLETRED = Color.of('#C71585')!;\n  public static readonly MIDNIGHTBLUE = Color.of('#191970')!;\n  public static readonly MINTCREAM = Color.of('#F5FFFA')!;\n  public static readonly MISTYROSE = Color.of('#FFE4E1')!;\n  public static readonly MOCCASIN = Color.of('#FFE4B5')!;\n  public static readonly NAVAJOWHITE = Color.of('#FFDEAD')!;\n  public static readonly NAVY = Color.of('#000080')!;\n  public static readonly OLDLACE = Color.of('#FDF5E6')!;\n  public static readonly OLIVE = Color.of('#808000')!;\n  public static readonly OLIVEDRAB = Color.of('#6B8E23')!;\n  public static readonly ORANGE = Color.of('#FFA500')!;\n  public static readonly ORANGERED = Color.of('#FF4500')!;\n  public static readonly ORCHID = Color.of('#DA70D6')!;\n  public static readonly PALEGOLDENROD = Color.of('#EEE8AA')!;\n  public static readonly PALEGREEN = Color.of('#98FB98')!;\n  public static readonly PALETURQUOISE = Color.of('#AFEEEE')!;\n  public static readonly PALEVIOLETRED = Color.of('#DB7093')!;\n  public static readonly PAPAYAWHIP = Color.of('#FFEFD5')!;\n  public static readonly PEACHPUFF = Color.of('#FFDAB9')!;\n  public static readonly PERU = Color.of('#CD853F')!;\n  public static readonly PINK = Color.of('#FFC0CB')!;\n  public static readonly PLUM = Color.of('#DDA0DD')!;\n  public static readonly POWDERBLUE = Color.of('#B0E0E6')!;\n  public static readonly PURPLE = Color.of('#800080')!;\n  public static readonly REBECCAPURPLE = Color.of('#663399')!;\n  public static readonly RED = Color.of('#FF0000')!;\n  public static readonly ROSYBROWN = Color.of('#BC8F8F')!;\n  public static readonly ROYALBLUE = Color.of('#4169E1')!;\n  public static readonly SADDLEBROWN = Color.of('#8B4513')!;\n  public static readonly SALMON = Color.of('#FA8072')!;\n  public static readonly SANDYBROWN = Color.of('#F4A460')!;\n  public static readonly SEAGREEN = Color.of('#2E8B57')!;\n  public static readonly SEASHELL = Color.of('#FFF5EE')!;\n  public static readonly SIENNA = Color.of('#A0522D')!;\n  public static readonly SILVER = Color.of('#C0C0C0')!;\n  public static readonly SKYBLUE = Color.of('#87CEEB')!;\n  public static readonly SLATEBLUE = Color.of('#6A5ACD')!;\n  public static readonly SLATEGRAY = Color.of('#708090')!;\n  public static readonly SLATEGREY = Color.of('#708090')!;\n  public static readonly SNOW = Color.of('#FFFAFA')!;\n  public static readonly SPRINGGREEN = Color.of('#00FF7F')!;\n  public static readonly STEELBLUE = Color.of('#4682B4')!;\n  public static readonly TAN = Color.of('#D2B48C')!;\n  public static readonly TEAL = Color.of('#008080')!;\n  public static readonly THISTLE = Color.of('#D8BFD8')!;\n  public static readonly TOMATO = Color.of('#FF6347')!;\n  public static readonly TURQUOISE = Color.of('#40E0D0')!;\n  public static readonly VIOLET = Color.of('#EE82EE')!;\n  public static readonly WHEAT = Color.of('#F5DEB3')!;\n  public static readonly WHITE = Color.of('#FFFFFF')!;\n  public static readonly WHITESMOKE = Color.of('#F5F5F5')!;\n  public static readonly YELLOW = Color.of('#FFFF00')!;\n  public static readonly YELLOWGREEN = Color.of('#9ACD32')!;\n  public static readonly NONE = Color.of('#FFFF00')!;\n\n  /**\n   * Convert a string to a Color object.\n   * @param value a string present a color, see the spec above for format.\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns A color object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Color | undefined {\n    // Hex value.\n    if (REG_HEX.test(value)) {\n      return this.fromHex(value, silent);\n    }\n\n    // Checks pre-defined color name.\n    const colorName = value.toUpperCase();\n    if ((this as any)[colorName]) {\n      return (this as any)[colorName];\n    }\n\n    const func = FunctionParser.parse(value, silent);\n    if (!func) {\n      if (!silent) {\n        console.warn('invalid color value:' + value);\n      }\n      return undefined;\n    }\n\n    const funcName = func.name.toLowerCase();\n    if (funcName === 'rgb' && func.arguments.length === 3) {\n      const r = this.parseColorValue(func.arguments[0], 255);\n      const g = this.parseColorValue(func.arguments[1], 255);\n      const b = this.parseColorValue(func.arguments[2], 255);\n      if (r === undefined || g === undefined || b === undefined) {\n        console.warn('invalid color value:' + value);\n        return undefined;\n      }\n      return new Color(r, g, b, 1);\n    } else if (funcName === 'rgba' && func.arguments.length === 4) {\n      const r = this.parseColorValue(func.arguments[0], 255);\n      const g = this.parseColorValue(func.arguments[1], 255);\n      const b = this.parseColorValue(func.arguments[2], 255);\n      const a = this.parseColorValue(func.arguments[3], 1);\n      if (r === undefined || g === undefined || b === undefined || a === undefined) {\n        console.warn('invalid color value:' + value);\n        return undefined;\n      }\n      return new Color(r, g, b, a);\n    }\n\n    if (!silent) {\n      console.warn('invalid color value:' + value);\n    }\n    return undefined;\n  }\n\n  /**\n   * Create a random color.\n   * @param includeAlpha Indecate whether include alpha as well.\n   * @returns a random color instance.\n   */\n  public static random(includeAlpha: boolean): Color {\n    return new Color(\n      Math.random() * 255,\n      Math.random() * 255,\n      Math.random() * 255,\n      includeAlpha ? Math.random() * 1 : 1\n    );\n  }\n\n  private static parseColorValue(value: string, base: number): number | undefined {\n    if (!REG_VALUE.test(value)) {\n      return undefined;\n    }\n    if (value.endsWith('%')) {\n      return (parseFloat(value) * base) / 100;\n    } else {\n      return parseFloat(value);\n    }\n  }\n\n  private static fromHex(hex: string, silent: boolean): Color {\n    if (hex.length === 4) {\n      return new Color(\n        parseInt(hex[1], 16) * 16 + parseInt(hex[1], 16),\n        parseInt(hex[2], 16) * 16 + parseInt(hex[2], 16),\n        parseInt(hex[3], 16) * 16 + parseInt(hex[3], 16),\n        1\n      );\n    } else if (hex.length === 5) {\n      return new Color(\n        parseInt(hex[1], 16) * 16 + parseInt(hex[1], 16),\n        parseInt(hex[2], 16) * 16 + parseInt(hex[2], 16),\n        parseInt(hex[3], 16) * 16 + parseInt(hex[3], 16),\n        (parseInt(hex[4], 16) * 16 + parseInt(hex[4], 16)) / 255\n      );\n    } else if (hex.length === 7) {\n      return new Color(\n        parseInt(hex.substring(1, 3), 16),\n        parseInt(hex.substring(3, 5), 16),\n        parseInt(hex.substring(5, 7), 16),\n        1\n      );\n    } else if (hex.length === 9) {\n      return new Color(\n        parseInt(hex.substring(1, 3), 16),\n        parseInt(hex.substring(3, 5), 16),\n        parseInt(hex.substring(5, 7), 16),\n        parseInt(hex.substring(7, 9), 16) / 255\n      );\n    }\n    if (!silent) {\n      console.warn('invalid color value:' + hex);\n    }\n    return undefined;\n  }\n\n  /**\n   *  The color red. In the default sRGB space.\n   */\n  public readonly r: number = 0;\n  /**\n   *  The color green. In the default sRGB space.\n   */\n  public readonly g: number = 0;\n  /**\n   *  The color blue. In the default sRGB space.\n   */\n  public readonly b: number = 0;\n  /**\n   * The alpha value. This is in the range 0.0f - 1.0f, and the default value is 1.\n   */\n  public readonly a: number = 1;\n\n  /**\n   * Constructs and initializes a color object with given arguments of sRGB and alpha.\n   * @param r The color red, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param g The color green, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param b The color blue, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param a The alpha value, normalizes to 0 if it is smaller than 0, 1 if it is bigger than 1.\n   */\n  constructor(r: number, g: number, b: number, a: number = 1) {\n    this.r = Math.min(255, Math.max(0, r));\n    this.g = Math.min(255, Math.max(0, g));\n    this.b = Math.min(255, Math.max(0, b));\n    this.a = Math.min(1, Math.max(0, a));\n  }\n\n  /**\n   * Compare to the other color object.\n   * @param that the object compare with\n   * @returns true if equals\n   */\n  public equals(that: Color): boolean {\n    return this.r === that.r && this.g === that.g && this.b === that.b && this.a === that.a;\n  }\n\n  /**\n   * Creates a new Color object with the same sRGB value as this object.\n   * @returns a clone of this instance\n   */\n  public clone(): Color {\n    return new Color(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Returns a string representation of this Color object.\n   * @returns a string representation of this Color object\n   */\n  public toString(): string {\n    return `rgba(${this.r},${this.g},${this.b},${this.a})`;\n  }\n\n  update(target: Color, progress: number): Color {\n    return new Color(\n      this.r + (target.r - this.r) * progress,\n      this.g + (target.g - this.g) * progress,\n      this.b + (target.b - this.b) * progress,\n      this.a + (target.a - this.a) * progress\n    );\n  }\n\n  convertFrom(src: any): Color {\n    const result = Color.of(src + '');\n    if (result === undefined) {\n      return Color.BLACK;\n    } else {\n      return result;\n    }\n  }\n\n  isAnimatable(): boolean {\n    return true;\n  }\n}\n","/**\n * This class represents an event object.\n */\nexport class Event {\n  /**\n   * True indicates that the default user agent action was prevented, and false indicates that it was\n   * not.\n   */\n  public defaultPrevented: boolean = false;\n\n  /**\n   * True indicates that the Event interface prevents further propagation of the current event in\n   * the capturing and bubbling phases, and false indicates that it was not.\n   */\n  public propagationStopped: boolean = false;\n\n  /**\n   * True indicates that prevents other listeners of the same event from being called.\n   */\n  public immediatePropagationStopped: boolean = false;\n\n  /**\n   * Type of event.\n   */\n  readonly type: string;\n\n  /**\n   * The bubbles read-only property of the Event interface indicates whether the event bubbles up\n   * through its parents or not.\n   */\n  readonly bubbles: boolean = false;\n\n  /**\n   * The cancelable read-only property of the Event interface indicates whether the event can be\n   * canceled, and therefore prevented as if the event never happened. If the event is not\n   * cancelable, then its cancelable property will be false and the event listener cannot stop\n   * the event from occurring.\n   */\n  readonly cancelable: boolean = false;\n\n  /**\n   * Time stamp of eventThe timeStamp read-only property of the Event interface returns the time\n   * (in milliseconds) at which the event was created.\n   */\n  readonly timeStamp: number;\n\n  /**\n   * Creates an instance of event.\n   * @param type event type\n   * @param [bubbles] indicates this event bubbles up through its parents or not\n   * @param [cancelable] indicates this event is cancelable or not\n   */\n  constructor(type: string, bubbles: boolean = true, cancelable: boolean = true) {\n    this.type = type;\n    this.bubbles = bubbles;\n    this.cancelable = cancelable;\n    this.timeStamp = Date.now();\n  }\n\n  /**\n   * The Event interface's preventDefault() method tells the user agent that if the event does not\n   * get explicitly handled, its default action should not be taken as it normally would be. The\n   * event continues to propagate as usual, unless one of its event listeners calls\n   * stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at\n   * once.\n   *\n   * As noted below, calling preventDefault() for a non-cancelable event, such as one dispatched\n   * via EventTarget.dispatchEvent(), without specifying cancelable: true has no effect.\n   */\n  preventDefault() {\n    this.defaultPrevented = this.cancelable && true;\n  }\n\n  /**\n   * Stops propagationThe stopPropagation() method of the Event interface prevents further\n   * propagation of the current event in the capturing and bubbling phases.\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * The stopImmediatePropagation() method of the Event interface prevents other listeners of the\n   * same event from being called.\n   *\n   * If several listeners are attached to the same element for the same event type, they are called\n   * in the order in which they were added. If stopImmediatePropagation() is invoked during one\n   * such call, no remaining listeners will be called.\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  /**\n   * Returns a string representation of this Event object.\n   * @returns a string representation of this Event object.\n   */\n  toString() {\n    return '[Event (type=' + this.type + ')]';\n  }\n}\n\ntype IEventListener<T extends Event> = (event: T) => void;\n\ninterface IListeners<T extends Event> {\n  [key: string]: IEventListener<T>[];\n}\n\n/**\n * This class represents an class which can dispatch specified type of event to its listeners.\n */\nexport class EventDispatcher<T extends Event> {\n  private listeners: IListeners<T> = {};\n\n  /**\n   * Adds event listener of specified type.\n   * @param type event type to listen, it can be one type or a list of type.\n   * @param listener a listener which be invoked if an event with this specified type is\n   * dispatching.\n   * @returns current object itself for chain calls.\n   */\n  public addEventListener(\n    type: string | string[],\n    listener: IEventListener<T>\n  ): EventDispatcher<T> {\n    const types = typeof type === 'string' ? [type] : type;\n    for (const t of types) {\n      let listeners = this.listeners[t];\n      if (listeners) {\n        this.removeEventListener(t, listener);\n      }\n      listeners = this.listeners[t]; // 'removeEventListener' may have deleted the array\n      if (!listeners) {\n        this.listeners[t] = [listener];\n      } else {\n        listeners.push(listener);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Alias of 'addEventListener' method.\n   */\n  public on(type: string | string[], listener: IEventListener<T>): EventDispatcher<T> {\n    return this.addEventListener(type, listener);\n  }\n\n  /**\n   * Removes a event listener with specified type.\n   * @param type event type to remove, it can be one type or a list of type.\n   * @param listener a listener which te be removed.\n   * @returns current object itself for chain calls.\n   */\n  public removeEventListener(\n    type: string | string[],\n    listener: IEventListener<T>\n  ): EventDispatcher<T> {\n    const types = typeof type === 'string' ? [type] : type;\n    for (const t of types) {\n      const arr = this.listeners[t];\n      if (!arr) {\n        return;\n      }\n      for (let i = 0, l = arr.length; i < l; i++) {\n        if (arr[i] === listener) {\n          if (l === 1) {\n            delete this.listeners[t];\n          } else {\n            arr.splice(i, 1);\n          }\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Alias of 'removeEventListener' method.\n   */\n  public off(type: string | string[], listener: IEventListener<T>) {\n    this.removeEventListener(type, listener);\n  }\n\n  /**\n   * Removes all event listeners of a specified type, if the type is not specified, remove all\n   * listeners of all types.\n   * @param type event type to remove, if it is not specified, remove all listeners of all types.\n   */\n  public removeAllEventListeners(type?: string) {\n    if (!type) {\n      this.listeners = {};\n    } else if (this.listeners) {\n      delete this.listeners[type];\n    }\n  }\n\n  /**\n   * Determines whether current object has any event listener of specified type.\n   * @param type event type to check.\n   * @returns true if there is any event listener of specified type.\n   */\n  public hasEventListener(type: string): boolean {\n    return !!this.listeners[type];\n  }\n\n  /**\n   * Alias of 'hasEventListener' method.\n   */\n  public willTrigger(type: string): boolean {\n    return this.hasEventListener(type);\n  }\n\n  /**\n   * Dispatches event to each listeners.\n   * @param event event to be dispatched\n   * @returns true if the event is not prevented by any listener.\n   */\n  public dispatchEvent(event: T): boolean {\n    let listeners = this.listeners[event.type];\n    if (listeners) {\n      // To avoid issues with items being removed or added during the dispatch\n      listeners = listeners.slice();\n      for (let i = 0; i < listeners.length && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n    return !event.defaultPrevented;\n  }\n}\n","import { Point } from './Point';\n\nconst DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n */\nexport class Matrix2D {\n  /**\n   * Position (0, 0) in a 3x3 affine transformation matrix.\n   */\n  public a: number = 1;\n  /**\n   * Position (0, 1) in a 3x3 affine transformation matrix.\n   */\n  public b: number = 0;\n  /**\n   * Position (1, 0) in a 3x3 affine transformation matrix.\n   */\n  public c: number = 0;\n  /**\n   * Position (1, 1) in a 3x3 affine transformation matrix.\n   */\n  public d: number = 1;\n  /**\n   * Position (2, 0) in a 3x3 affine transformation matrix.\n   */\n  public tx: number = 0;\n  /**\n   * Position (2, 1) in a 3x3 affine transformation matrix.\n   */\n  public ty: number = 0;\n\n  /**\n   * Creates an instance of Matrix2D.\n   * @param [a] Specifies the a property for the new matrix\n   * @param [b] Specifies the b property for the new matrix\n   * @param [c] Specifies the c property for the new matrix\n   * @param [d] Specifies the d property for the new matrix\n   * @param [tx] Specifies the tx property for the new matrix\n   * @param [ty] Specifies the ty property for the new matrix\n   */\n  constructor(\n    a: number = 1,\n    b: number = 0,\n    c: number = 0,\n    d: number = 1,\n    tx: number = 0,\n    ty: number = 0\n  ) {\n    this.setValues(a, b, c, d, tx, ty);\n  }\n\n  /**\n   * Sets the specified values on this instance.\n   * @param [a] Specifies the a property for the new matrix\n   * @param [b] Specifies the b property for the new matrix\n   * @param [c] Specifies the c property for the new matrix\n   * @param [d] Specifies the d property for the new matrix\n   * @param [tx] Specifies the tx property for the new matrix\n   * @param [ty] Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public setValues(\n    a: number = 1,\n    b: number = 0,\n    c: number = 0,\n    d: number = 1,\n    tx: number = 0,\n    ty: number = 0\n  ): Matrix2D {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n\n  /**\n   * Appends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param a Specifies the a property for the new matrix\n   * @param b Specifies the b property for the new matrix\n   * @param c Specifies the c property for the new matrix\n   * @param d Specifies the d property for the new matrix\n   * @param tx Specifies the tx property for the new matrix\n   * @param ty Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public append(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix2D {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    if (a !== 1 || b !== 0 || c !== 0 || d !== 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  }\n\n  /**\n   * Prepends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * @param a Specifies the a property for the new matrix\n   * @param b Specifies the b property for the new matrix\n   * @param c Specifies the c property for the new matrix\n   * @param d Specifies the d property for the new matrix\n   * @param tx Specifies the tx property for the new matrix\n   * @param ty Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prepend(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix2D {\n    const a1 = this.a;\n    const c1 = this.c;\n    const tx1 = this.tx;\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  }\n\n  /**\n   * Appends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public appendMatrix(matrix: Matrix2D): Matrix2D {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Prepends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * @param matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prependMatrix(matrix: Matrix2D): Matrix2D {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   * @param x\n   * @param y\n   * @param scaleX\n   * @param scaleY\n   * @param rotation\n   * @param skewX\n   * @param skewY\n   * @param transformX\n   * @param transformY\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public appendTransform(\n    x: number,\n    y: number,\n    scaleX: number,\n    scaleY: number,\n    rotation: number,\n    skewX: number,\n    skewY: number,\n    transformX: number,\n    transformY: number\n  ): Matrix2D {\n    let cos: number;\n    let sin: number;\n    if (rotation % 360) {\n      const r = rotation * DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (skewX || skewY) {\n      skewX *= DEG_TO_RAD;\n      skewY *= DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    if (transformX || transformY) {\n      // Appends the registration offset.\n      this.tx -= transformX * this.a + transformY * this.c;\n      this.ty -= transformX * this.b + transformY * this.d;\n    }\n    return this;\n  }\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n   * @param x\n   * @param y\n   * @param scaleX\n   * @param scaleY\n   * @param rotation\n   * @param skewX\n   * @param skewY\n   * @param transformX\n   * @param transformY\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prependTransform(\n    x: number,\n    y: number,\n    scaleX: number,\n    scaleY: number,\n    rotation: number,\n    skewX: number,\n    skewY: number,\n    transformX: number,\n    transformY: number\n  ): Matrix2D {\n    let cos: number;\n    let sin: number;\n    if (rotation % 360) {\n      const r = rotation * DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (transformX || transformY) {\n      this.tx -= transformX;\n      this.ty -= transformY;\n    }\n    if (skewX || skewY) {\n      skewX *= DEG_TO_RAD;\n      skewY *= DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n    return this;\n  }\n\n  /**\n   * Applies a clockwise rotation transformation to the matrix.\n   * @param angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public rotate(angle: number): Matrix2D {\n    angle = angle * DEG_TO_RAD;\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n\n    const a1 = this.a;\n    const b1 = this.b;\n\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  }\n\n  /**\n   * Applies a skew transformation to the matrix.\n   * @param skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`\n   * @param skewY The amount to skew vertically in degrees\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public skew(skewX: number, skewY: number): Matrix2D {\n    skewX = skewX * DEG_TO_RAD;\n    skewY = skewY * DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  }\n\n  /**\n   * Applies a scale transformation to the matrix.\n   * @param x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it\n   * @param y The amount to scale vertically\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public scale(x: number, y: number): Matrix2D {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y;\n    return this;\n  }\n\n  /**\n   * Translates the matrix on the x and y axes.\n   * @param x\n   * @param y\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public translate(x: number, y: number): Matrix2D {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  }\n\n  /**\n   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation)\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public identity(): Matrix2D {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  }\n\n  /**\n   * Inverts the matrix, causing it to perform the opposite transformation.\n   * @returns The current instance. Useful for chaining method calls\n   */\n  invert(): Matrix2D {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    const tx1 = this.tx;\n    const n = a1 * d1 - b1 * c1;\n\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  }\n\n  /**\n   * Returns true if the matrix is an identity matrix.\n   * @returns true if the matrix is an identity matrix\n   */\n  isIdentity(): boolean {\n    return (\n      this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1\n    );\n  }\n\n  /**\n   * Checks whether two matrixes are equal.\n   * The result is true if and only if the argument is a Matrix2D object that has the same values.\n   * @param matrix the Object to compare with this Matrix2D object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  equals(matrix: Matrix2D): boolean {\n    return (\n      this.tx === matrix.tx &&\n      this.ty === matrix.ty &&\n      this.a === matrix.a &&\n      this.b === matrix.b &&\n      this.c === matrix.c &&\n      this.d === matrix.d\n    );\n  }\n\n  /**\n   * Transforms a point according to this matrix.\n   * @param x The x component of the point to transform\n   * @param y The y component of the point to transform\n   * @return the transformed point\n   */\n  public transformPoint(x: number, y: number): Point {\n    const pt = new Point(0, 0);\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  }\n\n  /**\n   * Copies all properties from the specified matrix to this matrix.\n   * @param matrix The matrix to copy properties from\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public copy(matrix: Matrix2D): Matrix2D {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Returns a clone of the Matrix2D instance.\n   * @returns a clone of the Matrix2D instance.\n   */\n  public clone(): Matrix2D {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  }\n\n  /**\n   * Returns a string representation of this Matrix2D object.\n   * @returns a string representation of this Matrix2D object\n   */\n  public toString() {\n    return `[Matrix2D (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n  }\n}\n","/**\n * A point representing a location in (x,y) coordinate space, specified in integer precision.\n */\nexport class Point {\n  /**\n   * The X coordinate of this Point.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of this Point.\n   */\n  public y: number;\n\n  /**\n   * Constructs and initializes a point at the specified (x,y) location in the coordinate space.\n   * @param x the X coordinate of the newly constructed Point\n   * @param y the Y coordinate of the newly constructed Point\n   */\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Checks whether two points are equal.\n   * The result is true if and only if the argument is a Point object that has the same location.\n   * @param that the Object to compare with this Point.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Point): boolean {\n    return this.x === that.x && this.y === this.y;\n  }\n\n  /**\n   * Creates a new Point with the same location as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Point {\n    return new Point(this.x, this.y);\n  }\n}\n","const REG_RECT = /^\\s*[0-9]+\\s+[0-9]+\\s+[0-9]+\\s+[0-9]+\\s*$/;\n\n/**\n * This class represents an rectangle object which contains start point (x, y) and size (width, height).\n *\n * Static method Rect.of can be used to parse a string to a Rect object, the string must contains 4 numbers joint with space.\n * ```typescript\n * const rect = Rect.of('100 100 200 300');\n * ```\n */\nexport class Rect {\n  /**\n   * Convert a string to a Rect object.\n   * @param value a string present a rectangle, see the spec above for format.\n   * @returns A rect object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string): Rect | undefined {\n    if (!REG_RECT.test(value)) {\n      return undefined;\n    }\n    const pieces = value.split(/\\s+/);\n    const x = parseFloat(pieces[0]);\n    if (isNaN(x)) {\n      return undefined;\n    }\n    const y = parseFloat(pieces[1]);\n    if (isNaN(y)) {\n      return undefined;\n    }\n    const width = parseFloat(pieces[2]);\n    if (isNaN(width)) {\n      return undefined;\n    }\n    const height = parseFloat(pieces[3]);\n    if (isNaN(height)) {\n      return undefined;\n    }\n    return new Rect(x, y, width, height);\n  }\n\n  /**\n   * The X coordinate of the upper-left corner of the Rect.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of the upper-left corner of the Rect.\n   */\n  public y: number;\n  /**\n   * The width of the Rect.\n   */\n  public width: number;\n  /**\n   * The height of the Rect.\n   */\n  public height: number;\n\n  /**\n   * Constructs a new Rect whose upper-left corner is specified as (x,y) and whose width and height are specified by the arguments of the same name.\n   * @param x the specified X coordinate\n   * @param y the specified Y coordinate\n   * @param width the width of the Rect\n   * @param height the height of the Rect\n   */\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Checks whether or not this Rect object contains the point at the specified location (x,y).\n   * @param x the specified X coordinate\n   * @param y the specified Y coordinate\n   * @returns true if the point (x,y) is inside this Rect; false otherwise.\n   */\n  public in(x: number, y: number): boolean {\n    return x >= this.x && y >= this.y && x < this.x + this.width && y < this.y + this.height;\n  }\n\n  /**\n   * Checks whether two Rect objects are equal.\n   * The result is true if and only if the argument is a Rect object that has the same upper-left corner, width, and height as this Rect.\n   * @param that the Object to compare with this Rect.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Rect): boolean {\n    return (\n      this.x === that.x &&\n      this.y === this.y &&\n      this.width === that.width &&\n      this.height === that.height\n    );\n  }\n\n  /**\n   * Creates a new Rect object with the same upper-left corner, width, and height as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Rect {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n}\n","import { BaseValue } from '../base/BaseValue';\nimport { Rect } from '../base/Rect';\nimport { BorderRadius } from '../style/BorderRadius';\n\n/**\n * This class represents an rectangle object which contains start point (x, y) and size (width, height) with radius in\n * four corners.\n */\nexport class RoundRect {\n  /**\n   * The X coordinate of the left-top corner of the Rect.\n   */\n  x1: number = 0;\n  /**\n   * The Y coordinate of the left-top corner of the Rect.\n   */\n  y1: number = 0;\n  /**\n   * The X coordinate of the right-bottom corner of the Rect.\n   */\n  x2: number = 0;\n  /**\n   * The Y coordinate of the right-bottom corner of the Rect.\n   */\n  y2: number = 0;\n\n  /**\n   * The X radius of the left-top corner of the Rect.\n   */\n  leftTopRadiusX: number = 0;\n  /**\n   * The Y radius of the left-top corner of the Rect.\n   */\n  leftTopRadiusY: number = 0;\n  /**\n   * The X radius of the right-top corner of the Rect.\n   */\n  rightTopRadiusX: number = 0;\n  /**\n   * The Y radius of the right-top corner of the Rect.\n   */\n  rightTopRadiusY: number = 0;\n  /**\n   * The X radius of the right-bottom corner of the Rect.\n   */\n  rightBottomRadiusX: number = 0;\n  /**\n   * The Y radius of the right-bottom corner of the Rect.\n   */\n  rightBottomRadiusY: number = 0;\n  /**\n   * The X radius of the left-bottom corner of the Rect.\n   */\n  leftBottomRadiusX: number = 0;\n  /**\n   * The Y radius of the left-bottom corner of the Rect.\n   */\n  leftBottomRadiusY: number = 0;\n\n  constructor(x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n  }\n\n  /**\n   * Convert current RoundRect object to a Rect object by dropping radius.\n   *\n   * @returns a Rect object with same position and size.\n   */\n  toRect(): Rect {\n    return new Rect(this.x1, this.y1, this.x2 - this.x1 + 1, this.y2 - this.y1 + 1);\n  }\n\n  /**\n   * Apply the given size.\n   * @param width width of new size.\n   * @param height height of new size.\n   * @returns The current instance. Useful for chaining method calls\n   */\n  applySize(width: number, height: number): RoundRect {\n    this.x2 = this.x1 + width - 1;\n    this.y2 = this.y1 + height - 1;\n    return this;\n  }\n\n  /**\n   * Apply the given radius of 4 corners.\n   * @param borderTopLeftRadius radius in top-left corner.\n   * @param borderTopRightRadius height in top-right corner.\n   * @param borderBottomLeftRadius radius in bottom-right corner.\n   * @param borderBottomRightRadius radius in bottom-left corner.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  applyRadius(\n    borderTopLeftRadius?: BorderRadius,\n    borderTopRightRadius?: BorderRadius,\n    borderBottomLeftRadius?: BorderRadius,\n    borderBottomRightRadius?: BorderRadius\n  ): RoundRect {\n    const width = this.x2 - this.x1 + 1;\n    const height = this.y2 - this.y1 + 1;\n    if (borderTopLeftRadius) {\n      this.leftTopRadiusX = borderTopLeftRadius.value1.getValue(width);\n      this.leftTopRadiusY = borderTopLeftRadius.value2.getValue(height);\n    }\n    if (borderTopRightRadius) {\n      this.rightTopRadiusX = borderTopRightRadius.value1.getValue(width);\n      this.rightTopRadiusY = borderTopRightRadius.value2.getValue(height);\n    }\n    if (borderBottomLeftRadius) {\n      this.leftBottomRadiusX = borderBottomLeftRadius.value1.getValue(width);\n      this.leftBottomRadiusY = borderBottomLeftRadius.value2.getValue(height);\n    }\n    if (borderBottomRightRadius) {\n      this.rightBottomRadiusX = borderBottomRightRadius.value1.getValue(width);\n      this.rightBottomRadiusY = borderBottomRightRadius.value2.getValue(height);\n    }\n    if (this.leftTopRadiusX + this.rightTopRadiusX > width) {\n      const scale = width / (this.leftTopRadiusX + this.rightTopRadiusX);\n      this.leftTopRadiusX *= scale;\n      this.rightTopRadiusX *= scale;\n    }\n    if (this.leftBottomRadiusX + this.rightBottomRadiusX > width) {\n      const scale = width / (this.leftBottomRadiusX + this.rightBottomRadiusX);\n      this.leftBottomRadiusX *= scale;\n      this.rightBottomRadiusX *= scale;\n    }\n    if (this.leftTopRadiusY + this.leftBottomRadiusY > height) {\n      const scale = height / (this.leftTopRadiusY + this.leftBottomRadiusY);\n      this.leftTopRadiusY *= scale;\n      this.leftBottomRadiusY *= scale;\n    }\n    if (this.rightTopRadiusY + this.rightBottomRadiusY > height) {\n      const scale = height / (this.rightTopRadiusY + this.rightBottomRadiusY);\n      this.rightTopRadiusY *= scale;\n      this.rightBottomRadiusY *= scale;\n    }\n    return this;\n  }\n\n  /**\n   * Calculate the inner RoundRect by current instance and give borders in 4 directions.\n   * @param top top border.\n   * @param right right border.\n   * @param bottom bottom border.\n   * @param left left border.\n   * @returns The current instance if all borders are 0, or a new RoundRect object which presents the result of current\n   * instance applies the borders.\n   */\n  applyBorder(top: number, right: number, bottom: number, left: number): RoundRect {\n    if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n      return this;\n    }\n\n    const rect = new RoundRect();\n    rect.x1 = this.x1 + left;\n    rect.y1 = this.y1 + top;\n    rect.x2 = this.x2 - right;\n    rect.y2 = this.y2 - bottom;\n\n    rect.leftTopRadiusX = Math.max(0, this.leftTopRadiusX - left);\n    rect.leftTopRadiusY = Math.max(0, this.leftTopRadiusY - top);\n    if (rect.leftTopRadiusX === 0 || rect.leftTopRadiusY === 0) {\n      rect.leftTopRadiusX = rect.leftTopRadiusY = 0;\n    }\n    rect.rightTopRadiusX = Math.max(0, this.rightTopRadiusX - right);\n    rect.rightTopRadiusY = Math.max(0, this.rightTopRadiusY - top);\n    if (rect.rightTopRadiusX === 0 || rect.rightTopRadiusY === 0) {\n      rect.rightTopRadiusX = rect.rightTopRadiusY = 0;\n    }\n    rect.rightBottomRadiusX = Math.max(0, this.rightBottomRadiusX - right);\n    rect.rightBottomRadiusY = Math.max(0, this.rightBottomRadiusY - bottom);\n    if (rect.rightBottomRadiusX === 0 || rect.rightBottomRadiusY === 0) {\n      rect.rightBottomRadiusX = rect.rightBottomRadiusY = 0;\n    }\n    rect.leftBottomRadiusX = Math.max(0, this.leftBottomRadiusX - left);\n    rect.leftBottomRadiusY = Math.max(0, this.leftBottomRadiusY - bottom);\n    if (rect.leftBottomRadiusX === 0 || rect.leftBottomRadiusY === 0) {\n      rect.leftBottomRadiusX = rect.leftBottomRadiusY = 0;\n    }\n    return rect;\n  }\n\n  /**\n   * Makes a path of current RouncRect object.\n   * @param ctx The rendering context of target canvas.\n   * @param newPath If true, start a new path, otherwise continue the previous path.\n   * @param clockwise The directions of the path.\n   */\n  makePath(ctx: CanvasRenderingContext2D, newPath: boolean, clockwise: boolean) {\n    const x1 = this.x1;\n    const y1 = this.y1;\n    const x2 = this.x2 + 1;\n    const y2 = this.y2 + 1;\n\n    if (clockwise) {\n      if (newPath) {\n        ctx.moveTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      }\n      this.arcTo(x1, y1 + this.leftTopRadiusY, x1 + this.leftTopRadiusX, y1, clockwise, ctx);\n      this.arcTo(x2 - this.rightTopRadiusX, y1, x2, y1 + this.rightTopRadiusY, clockwise, ctx);\n      this.arcTo(\n        x2,\n        y2 - this.rightBottomRadiusY,\n        x2 - this.rightBottomRadiusX,\n        y2,\n        clockwise,\n        ctx\n      );\n      this.arcTo(x1 + this.leftBottomRadiusX, y2, x1, y2 - this.leftBottomRadiusY, clockwise, ctx);\n\n      if (this.leftTopRadiusX !== 0 && this.leftTopRadiusY !== 0) {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1);\n      }\n    } else {\n      if (newPath) {\n        ctx.moveTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      }\n      this.arcTo(x1, y2 - this.leftBottomRadiusY, x1 + this.leftBottomRadiusX, y2, clockwise, ctx);\n      this.arcTo(\n        x2 - this.rightBottomRadiusX,\n        y2,\n        x2,\n        y2 - this.rightBottomRadiusY,\n        clockwise,\n        ctx\n      );\n      this.arcTo(x2, y1 + this.rightTopRadiusY, x2 - this.rightTopRadiusX, y1, clockwise, ctx);\n      this.arcTo(x1 + this.leftTopRadiusX, y1, x1, y1 + this.leftTopRadiusY, clockwise, ctx);\n    }\n  }\n\n  /**\n   * Make a clip of current RoundRect object to a canvas.\n   * @param ctx The rendering context of target canvas.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  clip(ctx: CanvasRenderingContext2D): RoundRect {\n    ctx.beginPath();\n    this.makePath(ctx, true, true);\n    ctx.closePath();\n    ctx.clip();\n    return this;\n  }\n\n  /**\n   * Adds a circular arc to the current sub-path, using the given control points and radius.\n   * @param x1 The X coordinate of the source point.\n   * @param y1 The Y coordinate of the source point.\n   * @param x2 The X coordinate of the destination point.\n   * @param y2 The Y coordinate of the destination point.\n   * @param ctx The rendering context of target canvas.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  private arcTo(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    clockwise: boolean,\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.lineTo(x1, y1);\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n    const min = 0.000001;\n    if (dx < min && dy < min) {\n      return;\n    } else if (dx < min || dy < min) {\n      ctx.lineTo(x2, y2);\n    } else {\n      let startAngle;\n      let cx;\n      let cy;\n      if (clockwise) {\n        if (x1 < x2 && y1 < y2) {\n          startAngle = -Math.PI / 2;\n          cx = x1;\n          cy = y2;\n        } else if (x1 > x2 && y1 < y2) {\n          startAngle = 0;\n          cx = x2;\n          cy = y1;\n        } else if (x1 > x2 && y1 > y2) {\n          startAngle = Math.PI / 2;\n          cx = x1;\n          cy = y2;\n        } else {\n          startAngle = Math.PI;\n          cx = x2;\n          cy = y1;\n        }\n      } else {\n        if (x1 < x2 && y1 < y2) {\n          startAngle = Math.PI;\n          cx = x2;\n          cy = y1;\n        } else if (x1 > x2 && y1 < y2) {\n          startAngle = -Math.PI / 2;\n          cx = x1;\n          cy = y2;\n        } else if (x1 > x2 && y1 > y2) {\n          startAngle = 0;\n          cx = x2;\n          cy = y1;\n        } else {\n          startAngle = Math.PI / 2;\n          cx = x1;\n          cy = y2;\n        }\n      }\n      ctx.ellipse(\n        cx,\n        cy,\n        dx,\n        dy,\n        0,\n        startAngle,\n        startAngle + (clockwise ? Math.PI / 2 : -Math.PI / 2),\n        !clockwise\n      );\n    }\n  }\n}\n","export * from './BaseValue';\nexport * from './Color';\nexport * from './Event';\nexport * from './Matrix2D';\nexport * from './Point';\nexport * from './Rect';\nexport * from './RoundRect';\n","import { HtmlParser } from '../parser/HtmlParser';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { Sprite, SpriteSheet } from './Sprite';\nimport { IXObjectOptions } from './XObject';\n\nexport class Apng extends Sprite {\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options && options.attributes) {\n      if (options.attributes.src) {\n        ResourceRegistry.DefaultInstance.add(options.attributes.src, ResourceType.APNG)\n          .then((opt: SpriteSheet) => {\n            this.setSpriteSheet(opt).play();\n          })\n          .catch(e => {\n            console.warn('failed to load:' + options.attributes.src, e);\n          });\n      }\n    }\n  }\n}\n\nHtmlParser.registerTag('apng', Apng);\n","import { Rect } from '../base/Rect';\nimport { HtmlParser } from '../parser/HtmlParser';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { TextAlign, TextBorderPosition } from '../style/Style';\nimport { DrawUtils } from '../utils/DrawUtils';\nimport { SpriteFrame } from './Sprite';\nimport { IXObjectOptions, XObject, XObjectEvent } from './XObject';\n\n/**\n * The definition of BitmapTextSheet, a BitmapTextSheet contains the mapping between characters and\n * images, including character size, image position, render target, etc.\n */\nexport type BitmapTextSheet = {\n  /**\n   * If set, it means width of each character.\n   */\n  width?: number;\n  /**\n   * If set, it means height of each character.\n   */\n  height?: number;\n  /**\n   * The source of image which contains pictures of each text, it is optional, the image can be\n   * defined at each text instead of have one big image contains all.\n   */\n  url?: string;\n  /**\n   * The image to draw into the context.\n   */\n  image?: HTMLImageElement;\n  /**\n   * A list of texts definitions.\n   */\n  texts: { [key: string]: SpriteFrame };\n  /**\n   * The gap between characters.\n   */\n  gapX?: number;\n  /**\n   * The gap between lines.\n   */\n  gapY?: number;\n};\n\n/**\n * A BitmapText object is used to display text with specified image, it is used to render the text\n * by a pre-rendered picture, and no font needed.\n *\n * Before using BitmapText, you need to create a JSON file contains the information of each\n * character.\n *\n * Code example:\n *\n * ```json\n * {\n *   \"url\": \"./numbers.png\",\n *   \"texts\": {\n *     \"0\": { \"srcX\": 0, \"srcY\": 0, \"srcWidth\": 28, \"srcHeight\": 34 },\n *     \"1\": { \"srcX\": 28, \"srcY\": 0, \"srcWidth\": 15, \"srcHeight\": 34 },\n *     \"2\": { \"srcX\": 43, \"srcY\": 0, \"srcWidth\": 21, \"srcHeight\": 34 },\n *     \"3\": { \"srcX\": 64, \"srcY\": 0, \"srcWidth\": 18, \"srcHeight\": 34 },\n *     \"4\": { \"srcX\": 82, \"srcY\": 0, \"srcWidth\": 23, \"srcHeight\": 34 },\n *     \"5\": { \"srcX\": 105, \"srcY\": 0, \"srcWidth\": 20, \"srcHeight\": 34 },\n *     \"6\": { \"srcX\": 125, \"srcY\": 0, \"srcWidth\": 26, \"srcHeight\": 34 },\n *     \"7\": { \"srcX\": 151, \"srcY\": 0, \"srcWidth\": 21, \"srcHeight\": 34 },\n *     \"8\": { \"srcX\": 172, \"srcY\": 0, \"srcWidth\": 24, \"srcHeight\": 34 },\n *     \"9\": { \"srcX\": 196, \"srcY\": 0, \"srcWidth\": 24, \"srcHeight\": 34 },\n *     \".\": { \"srcX\": 220, \"srcY\": 0, \"srcWidth\": 10, \"srcHeight\": 34 }\n *   }\n * }\n * ```\n *\n * ```typescript\n * const html = \"<bitmaptext src='numbers.json'>12.34</bitmaptext>\";\n * container.load(html);\n * ```\n */\nexport class BitmapText extends XObject {\n  /**\n   * The text of this element.\n   */\n  private text: string = '';\n\n  private bitmapTextSheet?: BitmapTextSheet;\n\n  /**\n   * Create a BitmapText element with given options.\n   * @param options 'text' attribute of this option will be the 'text' of this element; if there is\n   * a 'src' attribute in the option, the bitmapTextSheet attribute will be loaded from here.\n   */\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options) {\n      this.text = options.text || '';\n      if (options.attributes && options.attributes.src) {\n        ResourceRegistry.DefaultInstance.add(options.attributes.src, ResourceType.JSON).then(\n          (json) => {\n            this.setBitmapTextSheet(json);\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * Update the bitmapTextSheet of this element, and any image url in this bitmapTextSheet will be\n   * loaded automatically.\n   * @param bitmapTextSheet the new BitmapTextSheet.\n   */\n  public setBitmapTextSheet(bitmapTextSheet?: BitmapTextSheet) {\n    this.bitmapTextSheet = bitmapTextSheet;\n    if (this.bitmapTextSheet) {\n      if (this.bitmapTextSheet.url) {\n        ResourceRegistry.DefaultInstance.add(this.bitmapTextSheet.url, ResourceType.IMAGE).then(\n          () => {\n            this.dispatchEvent(new XObjectEvent('update', true, true, this));\n          }\n        );\n      }\n      for (const text in this.bitmapTextSheet.texts) {\n        const frame = this.bitmapTextSheet.texts[text];\n        if (frame.url) {\n          ResourceRegistry.DefaultInstance.add(frame.url, ResourceType.IMAGE).then(() => {\n            this.dispatchEvent(new XObjectEvent('update', true, true, this));\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the text of this element, if the new text is different with current text, update the\n   * text and dispatch an 'update' event.\n   * @param text the new text.\n   */\n  public setText(text: string) {\n    if (this.text !== text) {\n      this.text = text;\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    }\n  }\n\n  /**\n   * Returns the text of this element.\n   * @returns Text of this element.\n   */\n  public getText(): string {\n    return this.text;\n  }\n\n  /**\n   * Draw the text into given canvas context.\n   * @param ctx The canvas rendering context of stage canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (\n      this.text === '' ||\n      !this.bitmapTextSheet ||\n      this.rect.width <= 0 ||\n      this.rect.height <= 0\n    ) {\n      return;\n    }\n\n    const contentRect = this.getContentRect();\n    const lines = this.text.split('\\n');\n\n    ctx.save();\n    for (const line of lines) {\n      let height = this.bitmapTextSheet.height || 0;\n      let w = 0;\n      for (const ch of line) {\n        const text = this.bitmapTextSheet.texts[ch];\n        if (text) {\n          const size = DrawUtils.getFrameSize(text, this.bitmapTextSheet);\n          w += size.width + (this.bitmapTextSheet.gapX || 0);\n        }\n      }\n      let x = contentRect.x;\n      switch (this.style.textAlign) {\n        case TextAlign.CENTER:\n          x += Math.max(0, (contentRect.width - w) / 2);\n          break;\n        case TextAlign.RIGHT:\n          x += contentRect.width - w;\n      }\n      let y = contentRect.y;\n      for (const ch of line) {\n        const text = this.bitmapTextSheet.texts[ch];\n        if (text) {\n          const size = DrawUtils.getFrameSize(text, this.bitmapTextSheet);\n          const rect = new Rect(x, y, size.width, size.height);\n          DrawUtils.drawFrame(ctx, rect, text, this.bitmapTextSheet);\n          x += rect.width + (this.bitmapTextSheet.gapX || 0);\n          height = Math.max(height, size.height);\n        }\n      }\n      y += height + (this.bitmapTextSheet.gapY || 0);\n    }\n    ctx.restore();\n    return true;\n  }\n\n  /**\n   * Calculates size of current object, if there is no width or height specified in element style,\n   * system will calculate the text width and height by text and font size.\n   */\n  public layout() {\n    super.layout();\n    if (this.bitmapTextSheet) {\n      const lines = this.text.split('\\n');\n      const contentRect = this.getContentRect();\n      let maxWidth = 0;\n      let maxHeight = 0;\n      for (const line of lines) {\n        let width = 0;\n        let height = this.bitmapTextSheet.height || 0;\n        for (const ch of line) {\n          const text = this.bitmapTextSheet.texts[ch];\n          const size = DrawUtils.getFrameSize(text, this.bitmapTextSheet);\n          if (width > 0 && !isNaN(this.bitmapTextSheet.gapX)) width += this.bitmapTextSheet.gapX;\n          width += size.width;\n          height = Math.max(height, size.height);\n        }\n        if (maxHeight > 0 && !isNaN(this.bitmapTextSheet.gapY)) {\n          maxHeight += this.bitmapTextSheet.gapY;\n        }\n        maxHeight += height;\n        maxWidth = Math.max(maxWidth, width);\n      }\n\n      if (maxWidth > contentRect.width) {\n        this.rect.width += maxWidth - contentRect.width;\n      }\n      if (maxHeight > contentRect.height) {\n        this.rect.height += maxHeight - contentRect.height;\n      }\n    }\n  }\n}\n\nHtmlParser.registerTag('bitmaptext', BitmapText);\n","import { HtmlParser } from '../parser/HtmlParser';\nimport {\n    BoxSizing, Display, PointerEvents, Position, TextAlign, VerticalAlign\n} from '../style/Style';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { XObject, XObjectEvent } from './XObject';\n\n/**\n * A Container is a nestable display list that allows you to work with compound objects, it can be\n * use to build the tree structure of all the objects like DOM tree, and itself is also a XObject\n * so that it also supports style, event handling, etc.\n *\n * Code example:\n *\n * ```typescript\n * const container  = new Container();\n * container.css({width:100, height:200, display:'absolute', left:50});\n * const obj = new XObject();\n * container.addChild(obj);\n * ```\n */\nexport class Container extends XObject {\n  /**\n   * A list of children elements.\n   */\n  public readonly children: XObject[] = [];\n\n  /**\n   * Finds the first child of this Container object by id.\n   * @param id id to identify the child, undefined if not found.\n   */\n  public findById(id: string): XObject | undefined {\n    if (this.id === id) {\n      return this;\n    }\n    for (const child of this.children) {\n      if (child.id === id) {\n        return child;\n      }\n      if (child instanceof Container) {\n        const find = child.findById(id);\n        if (find) {\n          return find;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Draw content of this object and its children.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    const list = this.children.slice();\n    for (const child of list) {\n      if (!child.isVisible()) {\n        continue;\n      }\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n  }\n\n  /**\n   * Append child to this container.\n   * @param child Child element to add the this container.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public addChild(child: XObject): Container {\n    const parent = child.parent;\n    if (parent === this) {\n      if (this.children.length > 0 && this.children[this.children.length - 1] === child) {\n        return this;\n      }\n      const idx = this.children.indexOf(child);\n      this.children.splice(idx, 1);\n      this.children.push(child);\n      child.dispatchEvent(new XObjectEvent('moved', false, true, child));\n      this.dispatchEvent(new XObjectEvent('update', false, true, this));\n      return this;\n    } else {\n      if (parent) {\n        parent.removeChild(child);\n      }\n      child.parent = this;\n      this.children.push(child);\n      child.dispatchEvent(new XObjectEvent('added', false, true, child));\n      this.dispatchEvent(new XObjectEvent('update', false, true, this));\n      return this;\n    }\n  }\n\n  /**\n   * Append a list of child to this container.\n   * @param children List of child element to add the this container.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public addChildren(...children: XObject[]): Container {\n    for (const child of children) {\n      this.addChild(child);\n    }\n    return this;\n  }\n\n  /**\n   * Append a child to this container with a specified position.\n   * @param child Child element to add the this container.\n   * @param index Position of this child to be added.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public addChildAt(child: XObject, index: number): Container {\n    const parent = child.parent;\n    if (parent === this) {\n      if (this.children[index] === child) {\n        return this;\n      }\n      const current = this.children.indexOf(child);\n      if (current > index) {\n        this.children.splice(current, 1);\n        this.children.splice(index, 0, child);\n      } else {\n        this.children.splice(index, 0, child);\n        this.children.splice(current, 1);\n      }\n      child.dispatchEvent(new XObjectEvent('moved', false, true, child));\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n      return this;\n    } else {\n      if (parent) {\n        parent.removeChild(child);\n      }\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      child.dispatchEvent(new XObjectEvent('added', false, true, child));\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n      return this;\n    }\n  }\n\n  /**\n   * Remove a child from this container, this function only checks the children directly belongs\n   * to this container, not check recursively.\n   * @param child Child to be removed, or undefined for a element is not child of this container.\n   * @returns The removed child, or undefined if this element is not a child of this container.\n   */\n  public removeChild(child: XObject): XObject | undefined {\n    const idx = this.children.indexOf(child);\n    if (idx < 0) {\n      return undefined;\n    } else {\n      this.children.splice(idx, 1);\n      child.parent = undefined;\n      child.dispatchEvent(new XObjectEvent('removed', false, true, child));\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n      return child;\n    }\n  }\n\n  /**\n   * Remove a child from this container with a specified position.\n   * @param index Position of this child to be removed.\n   * @returns The removed child, or undefined for a incorrect position;\n   */\n  public removeChildAt(index: number): XObject | null {\n    if (index < 0 || index >= this.children.length) {\n      return null;\n    }\n    const child = this.children[index];\n    this.children.splice(index, 1);\n    child.dispatchEvent(new XObjectEvent('removed', false, true, child));\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return child;\n  }\n\n  /**\n   * Removes all children of this container.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public removeAllChildren(): Container {\n    if (this.children.length === 0) {\n      return this;\n    }\n    for (const child of this.children) {\n      child.dispatchEvent(new XObjectEvent('removed', false, true, child));\n    }\n    this.children.length = 0;\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return this;\n  }\n\n  /**\n   * Returns a child object by a specified position.\n   * @param index the position of returned child.\n   */\n  public getChildAt(index: number): XObject {\n    return this.children[index];\n  }\n\n  /**\n   * Sort the children with a comparison function.\n   * @param sortFunction The comparison function used to sort children.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public sortChildren(sortFunction: (a: XObject, b: XObject) => number): Container {\n    this.children.sort(sortFunction);\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return this;\n  }\n\n  /**\n   * Gets the the index of the given child in current container's children list, -1 if not found.\n   * @param child The child to be found.\n   * @returns The index of the given child in current container's children list, -1 if not found.\n   */\n  public getChildIndex(child: XObject): number {\n    return this.children.indexOf(child);\n  }\n\n  /**\n   * Swap the children at 2 specified positions.\n   * @param index1 first position of 2 children.\n   * @param index2 second position of 2 children.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public swapChildrenAt(index1: number, index2: number): Container {\n    if (index1 < 0 || index1 >= this.children.length) {\n      throw new Error('invalid index:' + index1);\n    }\n    if (index2 < 0 || index2 >= this.children.length) {\n      throw new Error('invalid index:' + index2);\n    }\n    if (index1 === index2) {\n      return this;\n    }\n    const o1 = this.children[index1];\n    const o2 = this.children[index2];\n    this.children[index1] = o2;\n    this.children[index2] = o1;\n    o1.dispatchEvent(new XObjectEvent('moved', false, true, o1));\n    o2.dispatchEvent(new XObjectEvent('moved', false, true, o2));\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return this;\n  }\n\n  /**\n   * Swaps 2 specified children.\n   * @param child1 first child to swap.\n   * @param child2 second child to swap.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public swapChildren(child1: XObject, child2: XObject): Container {\n    return this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\n  }\n\n  /**\n   * Calculates size of current container and layout its children.\n   */\n  public layout() {\n    this.calculateSize();\n    this.layoutChildren();\n  }\n\n  /**\n   * Layouts current container's children.\n   */\n  public layoutChildren() {\n    // Step1, layout all children\n    const absolutes = [];\n    const relatives = [];\n\n    const contentRect = this.getContentRect();\n    let contentWidth = contentRect.width;\n    let contentHeight = contentRect.height;\n\n    for (const child of this.children) {\n      if (!child.isVisible()) {\n        continue;\n      }\n      child.layout();\n      if (child.style.position === Position.ABSOLUTE || child.style.position === Position.FIXED) {\n        absolutes.push(child);\n      } else {\n        relatives.push(child);\n        contentWidth = Math.max(contentWidth, child.getOuterWidth());\n        contentHeight = Math.max(contentHeight, child.getOuterHeight());\n      }\n    }\n\n    // Step2, break children into lines.\n    const lineHeight = this.getLineHeight();\n    const lines: { width: number; height: number; children: XObject[] }[] = [];\n    let line: { width: number; height: number; children: XObject[] } = {\n      width: 0,\n      height: lineHeight,\n      children: []\n    };\n    for (const child of relatives) {\n      if (\n        (line.children.length > 0 && child.style.display === Display.BLOCK) ||\n        line.width + child.getOuterWidth() > contentWidth\n      ) {\n        // Break the current line\n        lines.push(line);\n        line = {\n          width: 0,\n          height: lineHeight,\n          children: []\n        };\n      }\n      line.children.push(child);\n      line.width += child.getOuterWidth();\n      line.height = Math.max(child.getOuterHeight(), line.height);\n    }\n    if (line.children.length > 0) {\n      lines.push(line);\n    }\n\n    // Step 3, arrange children\n    let x = contentRect.x;\n    let y = contentRect.y;\n\n    for (const l of lines) {\n      switch (this.style.textAlign) {\n        case TextAlign.RIGHT:\n          x = contentRect.x + contentWidth - l.width;\n          break;\n        case TextAlign.CENTER:\n          x = contentRect.x + (contentWidth - l.width) / 2;\n          break;\n        default:\n          x = contentRect.x;\n      }\n      for (const child of l.children) {\n        // Calculates x position.\n        child.rect.x =\n          x + (child.style.marginLeft ? child.style.marginLeft.getValue(this.rect.width) : 0);\n        x += child.getOuterWidth();\n        // Calculates y position.\n        switch (child.style.verticalAlign) {\n          case VerticalAlign.BOTTOM:\n            child.rect.y =\n              y +\n              l.height -\n              (child.style.marginBottom ? child.style.marginBottom.getValue(this.rect.height) : 0) -\n              child.getHeight();\n            break;\n          case VerticalAlign.MIDDLE:\n            child.rect.y =\n              y +\n              (l.height - child.getOuterHeight()) / 2 +\n              (child.style.marginTop ? child.style.marginTop.getValue(this.rect.height) : 0);\n            break;\n          default:\n            child.rect.y =\n              y + (child.style.marginTop ? child.style.marginTop.getValue(this.rect.height) : 0);\n        }\n      }\n      y += l.height;\n    }\n    contentHeight = Math.max(contentHeight, y - contentRect.y);\n\n    // Update width/height\n    // TODO: add css (min/max width) support.\n    if (!this.style.width && contentWidth > contentRect.width) {\n      this.rect.width += contentWidth - contentRect.width;\n    }\n    if (!this.style.height && contentHeight > contentRect.height) {\n      this.rect.height += contentHeight - contentRect.height;\n    }\n\n    if (this.parent) {\n      const parentWidth = this.parent.getContentWidth();\n      const parentHeight = this.parent.getContentWidth();\n\n      if (this.style.minWidth) {\n        let minWidth = this.style.minWidth.getValue(parentWidth);\n        const cw = this.getContentWidth();\n        if (this.style.boxSizing === BoxSizing.BORDER_BOX) {\n          minWidth -= this.rect.width - cw;\n        }\n        if (cw < minWidth) {\n          this.rect.width += minWidth - cw;\n        }\n      }\n      if (this.style.maxWidth) {\n        let maxWidth = this.style.maxWidth.getValue(parentWidth);\n        const cw = this.getContentWidth();\n        if (this.style.boxSizing === BoxSizing.BORDER_BOX) {\n          maxWidth -= this.rect.width - cw;\n        }\n        if (cw > maxWidth) {\n          this.rect.width -= cw - maxWidth;\n        }\n      }\n      if (this.style.minHeight) {\n        let minHeight = this.style.minHeight.getValue(parentHeight);\n        const ch = this.getContentHeight();\n        if (this.style.boxSizing === BoxSizing.BORDER_BOX) {\n          minHeight -= this.rect.height - ch;\n        }\n        if (ch < minHeight) {\n          this.rect.width += minHeight - ch;\n        }\n      }\n      if (this.style.maxHeight) {\n        let maxHeight = this.style.maxHeight.getValue(parentHeight);\n        const ch = this.getContentHeight();\n        if (this.style.boxSizing === BoxSizing.BORDER_BOX) {\n          maxHeight -= this.rect.height - ch;\n        }\n        if (ch > maxHeight) {\n          this.rect.width -= maxHeight - ch;\n        }\n      }\n    }\n\n    // Step 4, arrange absolutes\n    for (const child of absolutes) {\n      LayoutUtils.updatePositionForAbsoluteElement(child, this.rect.width, this.rect.height);\n    }\n  }\n\n  /**\n   * Find a child at the specified position.\n   * @param {Number} x The x position in the container to test.\n   * @param {Number} y The y position in the container to test.\n   * @param eventEnabled Whether to ignore the child who is disabling for pointer events.\n   * @returns The child object in the specified position, undefined if there is no any child at that position.\n   */\n  public getObjectUnderPoint(x: number, y: number, eventEnabled: boolean): XObject | undefined {\n    if (!this.isVisible()) {\n      return undefined;\n    }\n\n    if (eventEnabled) {\n      switch (this.style.pointerEvents) {\n        case PointerEvents.NONE:\n          return undefined;\n        case PointerEvents.BLOCK:\n          return this.hitTest(x, y) ? this : undefined;\n      }\n      const children = this.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        if (!child.isVisible()) {\n          continue;\n        }\n        const pt = this.localToLocal(x, y, child);\n        if (child instanceof Container) {\n          const result = child.getObjectUnderPoint(pt.x, pt.y, eventEnabled);\n          if (result) {\n            return result;\n          }\n        } else {\n          if (child.style.pointerEvents !== PointerEvents.NONE &&\n            child.style.pointerEvents !== PointerEvents.CROSS &&\n            child.hitTest(pt.x, pt.y)) {\n            return child;\n          }\n        }\n      }\n\n      // No child match, try self\n      if (this.style.pointerEvents !== PointerEvents.CROSS && this.hitTest(x, y)) {\n        return this;\n      }\n      return undefined;\n    } else {\n      const children = this.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        if (!child.isVisible()) {\n          continue;\n        }\n        const pt = this.localToLocal(x, y, child);\n        if (child instanceof Container) {\n          const result = child.getObjectUnderPoint(pt.x, pt.y, eventEnabled);\n          if (result) {\n            return result;\n          }\n        } else if (child.hitTest(pt.x, pt.y)) {\n          return child;\n        }\n\n        // No child match, try self\n        if (this.hitTest(x, y)) {\n          return this;\n        }\n        return undefined;\n      }\n    }\n  }\n\n\n  /**\n   * Parse the input html and load as children.\n   * @param html The html to be parsed and loaded.\n   * @param clear If true, clear the existing children before loading.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public load(html: string, clear: boolean = true): Container {\n    if (clear) {\n      this.removeAllChildren();\n    }\n    this.addChildren(...new HtmlParser().parse(html));\n    return this;\n  }\n\n  /**\n   * Returns a string representation of this object.\n   * @returns a string representation of this object.\n   */\n  public toString() {\n    return `[Container (id=${this.id})]`;\n  }\n}\n\nHtmlParser.registerTag('container', Container);\nHtmlParser.registerTag('div', Container);\n","import { Rect } from '../base/Rect';\nimport { HtmlParser } from '../parser/HtmlParser';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { IXObjectOptions, XObject, XObjectEvent } from './XObject';\n\nexport class Img extends XObject {\n  private src?: string;\n  private image?: HTMLImageElement;\n  private sourceRect?: Rect;\n\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options && options.attributes) {\n      if (options.attributes.src) {\n        this.setSrc(options.attributes.src);\n      }\n      if (options.attributes.sourcerect) {\n        this.sourceRect = Rect.of(options.attributes.sourcerect);\n      }\n    }\n  }\n\n  public setSrc(src: string): Img {\n    if (this.src !== src) {\n      this.src = src;\n      ResourceRegistry.DefaultInstance.add(this.src, ResourceType.IMAGE).then(image => {\n        this.dispatchEvent(new XObjectEvent('update', true, true, this));\n      });\n    }\n    return this;\n  }\n\n  public setImage(image: HTMLImageElement): Img {\n    if (this.image !== image) {\n      this.image = image;\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    }\n    return this;\n  }\n\n  public setSourceRect(sourceRect: Rect): Img {\n    this.sourceRect = sourceRect;\n    return this;\n  }\n\n  /**\n   * Calculates size of current object.\n   */\n  public calculateSize() {\n    super.calculateSize();\n    if (!this.style.width) {\n      if (this.sourceRect) {\n        this.rect.width = this.sourceRect.width;\n      } else if (this.image) {\n        this.rect.width = this.image.width;\n      } else if (this.src) {\n        const image = ResourceRegistry.DefaultInstance.get(this.src) as HTMLImageElement;\n        if (image) {\n          this.rect.width = image.width;\n        }\n      }\n    }\n    if (!this.style.height) {\n      if (this.sourceRect) {\n        this.rect.height = this.sourceRect.height;\n      } else if (this.image) {\n        this.rect.height = this.image.height;\n      } else if (this.src) {\n        const image = ResourceRegistry.DefaultInstance.get(this.src) as HTMLImageElement;\n        if (image) {\n          this.rect.height = image.height;\n        }\n      }\n    }\n  }\n\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    let image: HTMLImageElement;\n    if (this.image) {\n      image = this.image;\n    } else if (this.src) {\n      image = ResourceRegistry.DefaultInstance.get(this.src) as HTMLImageElement;\n    }\n\n    if (!image) {\n      return;\n    }\n    const rect = this.getContentRect();\n    if (this.sourceRect) {\n      ctx.drawImage(\n        image,\n        this.sourceRect.x,\n        this.sourceRect.y,\n        this.sourceRect.width,\n        this.sourceRect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n    } else {\n      ctx.drawImage(image, rect.x, rect.y, rect.width, rect.height);\n    }\n  }\n}\n\nHtmlParser.registerTag('img', Img);\nHtmlParser.registerTag('image', Img);\n","import { AnimationValues } from '../animation/Animation';\nimport { Rect } from '../base/Rect';\nimport { HtmlParser } from '../parser/HtmlParser';\nimport { Container } from './Container';\nimport { Stage } from './Stage';\nimport { IXObjectOptions, XObjectEvent } from './XObject';\n\n/**\n * A Container is a nestable display list that allows you to work with compound objects, it can be\n * use to build the tree structure of all the objects like DOM tree, and itself is also a XObject\n * so that it also supports style, event handling, etc.\n *\n * Code example:\n *\n * ```typescript\n * const container  = new Container();\n * container.css({width:100, height:200, display:'absolute', left:50});\n * const obj  = new XObject();\n * container.addChild(obj);\n * ```\n */\nexport class Scrollable extends Container {\n  private viewRect: Rect = new Rect(0, 0, 0, 0);\n  private verticalSnappingSize: number = 0;\n  private horizontalSnappingSize: number = 200;\n\n  constructor(opt?: IXObjectOptions) {\n    super(opt);\n    this.on('pressmove', e => {\n      this.scroll(e.touchItem.getDelta());\n      e.stage.updateOnce();\n    });\n    this.on('mousewheel', e => {\n      const delta = e.touchItem.getDelta();\n      delta.x = -delta.x;\n      delta.y = -delta.y;\n      this.scroll(delta, false);\n      e.stage.updateOnce();\n    });\n    this.on('pressup', e => {\n      if (e.stage.getPressedTouchItems(this).length === 0) {\n        this.onRelease(e.stage);\n        e.stage.updateOnce();\n      }\n    });\n  }\n\n  getDefaultStyle(): { [key: string]: string | number } | undefined {\n    return {\n      overflow: 'hidden'\n    };\n  }\n\n  private fixPosition(val: number, min: number, max: number): number {\n    if (val > max) {\n      return max;\n    } else if (val < min) {\n      return min;\n    } else {\n      return val;\n    }\n  }\n\n  scroll(delta: { x: number; y: number }, enableSnapping: boolean = true) {\n    this.viewRect.x = this.fixPosition(\n      this.viewRect.x + delta.x,\n      Math.min(0, this.getContentWidth() - this.viewRect.width) -\n        (enableSnapping ? this.horizontalSnappingSize : 0),\n      enableSnapping ? this.horizontalSnappingSize : 0\n    );\n    this.viewRect.y = this.fixPosition(\n      this.viewRect.y + delta.y,\n      Math.min(0, this.getContentHeight() - this.viewRect.height) -\n        (enableSnapping ? this.verticalSnappingSize : 0),\n      enableSnapping ? this.verticalSnappingSize : 0\n    );\n  }\n\n  onRelease(stage: Stage) {\n    const back = {\n      x: this.fixPosition(\n        this.viewRect.x,\n        Math.min(0, this.getContentWidth() - this.viewRect.width),\n        0\n      ),\n      y: this.fixPosition(\n        this.viewRect.y,\n        Math.min(0, this.getContentHeight() - this.viewRect.height),\n        0\n      )\n    };\n    if (back.x === this.viewRect.x && back.y === this.viewRect.y) {\n      return;\n    }\n    stage\n      .animate({ x: this.viewRect.x, y: this.viewRect.y }, true)\n      .to(back, 200, 'quadIn')\n      .on('update', e => {\n        if (back.x !== undefined) {\n          this.viewRect.x = (e.value as AnimationValues).x as number;\n        }\n        if (back.y !== undefined) {\n          this.viewRect.y = (e.value as AnimationValues).y as number;\n        }\n        this.dispatchEvent(new XObjectEvent('update', true, true, this));\n      });\n  }\n\n  layoutChildren() {\n    super.layoutChildren();\n    this.viewRect.width = 0;\n    this.viewRect.height = 0;\n    const paddingRect = this.getPaddingRect();\n    for (const child of this.children) {\n      this.viewRect.width = Math.max(\n        this.viewRect.width,\n        child.rect.x + child.getOuterWidth() - paddingRect.x\n      );\n      this.viewRect.height = Math.max(\n        this.viewRect.height,\n        child.rect.y + child.getOuterHeight() - paddingRect.y\n      );\n      child.rect.x += this.viewRect.x;\n      child.rect.y += this.viewRect.y;\n    }\n  }\n}\n\nHtmlParser.registerTag('scrollable', Scrollable);\n","import { Animation, AnimationStep, AnimationTarget, AnimationValues } from '../animation/Animation';\nimport { HtmlParser } from '../parser/HtmlParser';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { DrawUtils } from '../utils/DrawUtils';\nimport { Stage } from './Stage';\nimport { IXObjectOptions, XObject, XObjectEvent } from './XObject';\n\n/**\n * The definition of sprite, a sprite contains size, fps, image and frames.\n */\nexport type SpriteSheet = {\n  /**\n   * The original width of this sprite.\n   */\n  width: number;\n  /**\n   * The original height of this sprite.\n   */\n  height: number;\n  /**\n   * The fps controls the playing speed of this sprite.\n   */\n  fps: number;\n  /**\n   * The source of image which contains pictures of each frame, it is optional, the image can be\n   * defined at each frame instead of have one big image contains all.\n   */\n  url?: string;\n\n  /**\n   * The image to draw into the context.\n   */\n  image?: HTMLImageElement;\n  /**\n   * A list of frame definitions.\n   */\n  frames: SpriteFrame[];\n};\n\n/**\n * The definition of sprite frame.\n */\nexport type SpriteFrame = {\n  /**\n   * The x-axis coordinate of the top left corner of the sub-rectangle of the source image to draw\n   * into the destination context.\n   * If not specified, the default value is 0.\n   */\n  srcX?: number;\n  /**\n   * The y-axis coordinate of the top left corner of the sub-rectangle of the source image to draw\n   * into the destination context.\n   * If not specified,, the default value is 0.\n   */\n  srcY?: number;\n  /**\n   * The width of the sub-rectangle of the source image to draw into the destination context.\n   * If not specified, the entire rectangle from the coordinates specified by sx and sy to the\n   * bottom-right corner of the image is used.\n   */\n  srcWidth?: number;\n  /**\n   * The height of the sub-rectangle of the source image to draw into the destination context.\n   * Same as srcWidth, if not specified, the entire rectangle from the coordinates specified by sx\n   * and sy to the bottom-right corner of the image is used.\n   */\n  srcHeight?: number;\n  /**\n   * The x-axis coordinate in the destination canvas at which to place the top-left corner of the\n   * source image.\n   * If not specified,, the default value is 0.\n   */\n  destX?: number;\n  /**\n   * The y-axis coordinate in the destination canvas at which to place the top-left corner of the\n   * source image.\n   * If not specified,, the default value is 0.\n   */\n  destY?: number;\n  /**\n   * The width to draw the image in the destination canvas. This allows scaling of the drawn image.\n   * If not specified, the image is not scaled in width when drawn.\n   */\n  destWidth?: number;\n  /**\n   * The height to draw the image in the destination canvas. This allows scaling of the drawn image.\n   * If not specified, the image is not scaled in height when drawn.\n   */\n  destHeight?: number;\n  /**\n   * The source of image of this frame.\n   * If not specified, use the image in SpriteOption.\n   */\n  url?: string;\n  /**\n   * An element to draw into the context.\n   * If not specified, use the image in SpriteOption.\n   */\n  image?: HTMLImageElement;\n};\n\n/**\n * A class defines controls when an sprite render which frame during the animation life cycle.\n * Not like a normal animation, the sprite frames are discrete, we only render the frame while goto\n * next one.\n */\nclass SpriteAnimationStep extends AnimationStep {\n  /**\n   * The targeted sprite instance.\n   */\n  private sprite: Sprite;\n  /**\n   * Create a SpriteAnimationStep instance with a sprite instance.\n   * @param sprite The targeted sprite instance.\n   */\n  constructor(sprite: Sprite) {\n    super(sprite, (sprite.spriteSheet.frames.length * 1000) / sprite.spriteSheet.fps);\n    this.sprite = sprite;\n  }\n\n  /**\n   * Calculates the current frame and decides need to update.\n   * @param percent the current process of an animation play cycle.\n   * @returns True if switch frame, false otherwise.\n   */\n  onUpdate(percent: number): AnimationValues | undefined {\n    if (!this.sprite.spriteSheet || this.sprite.spriteSheet.frames.length === 0) {\n      return undefined;\n    }\n    const index = Math.min(\n      this.sprite.spriteSheet.frames.length - 1,\n      Math.floor(this.sprite.spriteSheet.frames.length * percent)\n    );\n    if (index === this.sprite.currentFrame) {\n      return undefined;\n    } else {\n      this.sprite.currentFrame = index;\n      this.sprite.dispatchEvent(new XObjectEvent('update', true, true, this.sprite));\n      return {\n        currentFrame: index\n      };\n    }\n  }\n}\n\n/**\n * This class represents a sprite object, which plays a sequence of frames from a SpriteSheet\n * instance.\n *\n * Code example:\n * ```typescript\n *  const sprite = new Sprite();\n *  const spriteSheet = {\n *    width: 480,\n *    height: 400,\n *    url: \"./elephant.png\",\n *    fps: 20,\n *    frames: []\n *  };\n *  for (let i = 0; i < 34; ++i) {\n *    opt.frames.push({ x: 0, y: 400 * i });\n *  }\n *  sprite.setSpriteSheet(spriteSheet).play();\n * ```\n */\nexport class Sprite extends XObject {\n  /**\n   * The SpriteSheet instance to play back.\n   */\n  public spriteSheet?: SpriteSheet;\n  /**\n   * Index of current frame.\n   */\n  public currentFrame: number = 0;\n  /**\n   * The animation instance to play the sprite sheet.\n   */\n  private animation?: Animation;\n\n  /**\n   * Create a sprite object, you need to call setSpriteSheet method after the instance was created.\n   * @param options The options to create this object.\n   */\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options) {\n      if (options.attributes && options.attributes.src) {\n        ResourceRegistry.DefaultInstance.add(options.attributes.src, ResourceType.JSON).then(\n          json => {\n            this.setSpriteSheet(json);\n            this.dispatchEvent(new XObjectEvent('load', false, true, this));\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the SpriteSheet to let this Sprite instance know how to play.\n   * @param spriteSheet The SpriteSheet instance to be set.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public setSpriteSheet(spriteSheet: SpriteSheet): Sprite {\n    this.spriteSheet = spriteSheet;\n    if (this.spriteSheet) {\n      if (this.spriteSheet.url) {\n        ResourceRegistry.DefaultInstance.add(this.spriteSheet.url, ResourceType.IMAGE);\n      }\n      for (const frame of this.spriteSheet.frames) {\n        if (frame.url) {\n          ResourceRegistry.DefaultInstance.add(frame.url, ResourceType.IMAGE).then(() => {\n            this.dispatchEvent(new XObjectEvent('update', true, true, this));\n          });\n        }\n      }\n    }\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return this;\n  }\n\n  /**\n   * returns stage of this element, or undefined if this element is not attached to a stage.\n   * @returns Stage or undefined.\n   */\n  public getStage(): Stage | undefined {\n    let element: XObject = this;\n    while (element) {\n      if (element instanceof Stage) {\n        return element as Stage;\n      }\n      element = element.parent;\n    }\n    return undefined;\n  }\n\n  /**\n   * Play the sprite for the specified times, -1 for infinite.\n   * @param times How many times to play this sprite, -1 for infinite.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public play(times = -1): Sprite {\n    if (this.animation) {\n      this.animation.cancel();\n      this.animation = undefined;\n    }\n    const stage = this.getStage();\n    if (stage) {\n      this.animation = stage\n        .animate(this)\n        .addStep(new SpriteAnimationStep(this))\n        .times(times);\n      this.animation.addEventListener('complete', () =>\n        this.dispatchEvent(new XObjectEvent('stop', false, true, this))\n      );\n      this.dispatchEvent(new XObjectEvent('play', false, true, this));\n    }\n    return this;\n  }\n\n  /**\n   * Pause the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public pause(): Sprite {\n    if (this.animation && this.animation.pause()) {\n      this.dispatchEvent(new XObjectEvent('pause', false, true, this));\n    }\n    return this;\n  }\n\n  /**\n   * Resume the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public resume(): Sprite {\n    if (this.animation && this.animation.resume()) {\n      this.dispatchEvent(new XObjectEvent('resume', false, true, this));\n    }\n    return this;\n  }\n\n  /**\n   * Stop the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public stop(): Sprite {\n    if (this.animation) {\n      this.animation.cancel();\n      this.animation = undefined;\n    }\n    return this;\n  }\n\n  /**\n   * Alias of play method.\n   * @param times How many times to play this sprite, -1 for infinite.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public times(times: number): Sprite {\n    return this.play(times);\n  }\n\n  /**\n   * Set the index of current frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @param currentFrame the index of the specified frame.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public setCurrentFrame(currentFrame: number): Sprite {\n    this.currentFrame = currentFrame;\n    return this;\n  }\n\n  /**\n   * Move to next frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public toNextFrame(): Sprite {\n    this.currentFrame = (this.currentFrame + 1) % this.spriteSheet.frames.length;\n    return this;\n  }\n\n  /**\n   * Move to previous frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @param currentFrame the index of the specified frame.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public toPreviousFrame(): Sprite {\n    this.currentFrame =\n      (this.currentFrame - 1 + this.spriteSheet.frames.length) % this.spriteSheet.frames.length;\n    return this;\n  }\n\n  /**\n   * Draws content of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (!this.spriteSheet || this.spriteSheet.frames.length === 0) {\n      return;\n    }\n    const frame = this.spriteSheet.frames[this.currentFrame];\n    DrawUtils.drawFrame(ctx, this.getContentRect(), frame, this.spriteSheet);\n  }\n}\n\nHtmlParser.registerTag('sprite', Sprite);\n","import { Animation, AnimationTarget } from '../animation/Animation';\nimport { AnimationFactory } from '../animation/AnimationFactory';\nimport { ResourceRegistry } from '../resource/ResourceRegistry';\nimport { Runtime } from '../runtime/Runtime';\nimport { Ticker } from '../Ticker';\nimport { LatestList } from '../utils/LatestList';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { Container } from './Container';\nimport { TouchItem } from './TouchItem';\nimport { XObject, XObjectEvent } from './XObject';\n\n/**\n * An enum to identify how the stage instance do layout during the update process:\n *\n * 1. **NEVER**: stage does not re-layout during updating, you must call 'layout' method explicitly\n * while children status changes.\n * 1. **ALWAYS**: stage instance calls 'layout' method in each 'update' operation.\n */\nexport enum StageLayoutPolicy {\n  NEVER = 'never',\n  ALWAYS = 'always'\n}\n\n/**\n * An enum to identify how the stage instance update the canvas for each ticker callback:\n *\n * 1. **NEVER**: stage never update the canvas, you must call stage.update method manually to\n * update the canvas.\n * 1. **AUTO**: stage only update canvas after listens a 'update' event.\n * 1. **ALWAYS**: stage update canvas in each ticker callback.\n */\nexport enum StageUpdatePolicy {\n  NEVER = 'never',\n  AUTO = 'auto',\n  ALWAYS = 'always'\n}\n\n/**\n * Options for constructing a stage object.\n */\nexport type StageOptions = {\n  /**\n   * Frames per second, it defines the frequency of the stage drawing the canvas.\n   */\n  fps?: number;\n  /**\n   * Layout policy, see the enum definition of StageLayoutPolicy.\n   */\n  layoutPolicy?: StageLayoutPolicy;\n  /**\n   * Update policy, see the enum definition of StageUpdatePolicy.\n   */\n  updatePolicy?: StageUpdatePolicy;\n  /**\n   * If true, clear the canvas at beginning of each update time, otherwise drawing on top of\n   * previous drawn canvas.\n   */\n  autoClear?: boolean;\n  /**\n   * If true, ignore installing event handler by default, you can still call installEventHandler\n   * later to install the event handler.\n   */\n  noEventHandler?: boolean;\n  /**\n   * The override styles while constructing a stage object.\n   */\n  style?: { [key: string]: string | number };\n  /**\n   * If true, record latest 30 render latencies.\n   */\n  recordRenderLatencies?: boolean;\n};\n\n/**\n * A helper class for staging to hold the all touch status of this stage.\n */\nclass TouchedObjectSet {\n  /**\n   * A list of TouchItem objects.\n   */\n  readonly touchItems: TouchItem[] = [];\n\n  /**\n   * Checks whether this instance contains a TouchItem with this touch identifier.\n   * @param identifier Touch identifier to query.\n   * @returns True if this instance contains a TouchItem with same identifier, false otherwise.\n   */\n  public contains(identifier: number): boolean {\n    for (const item of this.touchItems) {\n      if (item.identifier === identifier) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets TouchItem instance by a given touch identifier.\n   * @param identifier Touch identifier to query.\n   * @returns TouchItem with same identifier, undefined if not found.\n   */\n  public get(identifier: number): TouchItem | undefined {\n    for (const item of this.touchItems) {\n      if (item.identifier === identifier) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Puts a TouchItem instances into current set, caller must make sure that only put the new\n   * TouchItem, this method does not check whether there is an existing TouchItem contains same\n   * touch identifier.\n   * @param touch  The TouchItem instance.\n   */\n  public add(touch: TouchItem) {\n    this.touchItems.push(touch);\n  }\n\n  /**\n   * Removes the TouchItem with same touch identifier.\n   * @param identifier The touch identifier used to find the TouchItem to be removed.\n   */\n  public remove(identifier: number) {\n    for (let i = 0; i < this.touchItems.length; ++i) {\n      if (this.touchItems[i].identifier === identifier) {\n        this.touchItems.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Returns a list of TouchItem instance of given XObject instance.\n   * @param object The XObject instance to be checked.\n   * @returns A list of TouchItem instance attaches to this object.\n   */\n  public getTouches(object: XObject): TouchItem[] {\n    const result: TouchItem[] = [];\n    for (const item of this.touchItems) {\n      if (item.srcElement === object || item.srcElement.isChildOf(object)) {\n        result.push(item);\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * This class represents a stage object which is the root level Container for a display list.\n * It also manages the context like ticker, animations, resources and controls the rendering\n * process.\n */\nexport class Stage extends Container {\n  /**\n   * The canvas instance where this stage render the image to.\n   */\n  public canvas: HTMLCanvasElement;\n\n  /**\n   * The ticker instance is used to provide a centralized tick to render the current stage if\n   * necessary, it is also used by the AnimationFactory instance to update the animations.\n   *\n   * When setting the fps of stage instance, it actually set the fps of ticker.\n   */\n  public readonly ticker: Ticker;\n\n  /**\n   * The animationFactory object manages the animations of children elements of this stage.\n   */\n  public readonly animationFactory: AnimationFactory;\n\n  /**\n   * The resourceRegistry object manages the resources (like images) used in this stage.\n   * This is still under developing.\n   */\n  public readonly resourceRegistry: ResourceRegistry;\n\n  /**\n   * The configuration of this stage instance.\n   */\n  public readonly option: StageOptions = {\n    /**\n     * The fps controls the frequency of rendering and animation updating, default is 60.\n     */\n    fps: 60,\n    /**\n     * Layout policy of this stage instance, default is 'always'.\n     */\n    layoutPolicy: StageLayoutPolicy.ALWAYS,\n    /**\n     * Update policy of this stage instance, default is 'auto'.\n     */\n    updatePolicy: StageUpdatePolicy.AUTO,\n    /**\n     * Whether clear the stage before rendering, default is true.\n     */\n    autoClear: true\n  };\n\n  /**\n   * Contains current touch items of this stage.\n   */\n  private touchItems: TouchedObjectSet = new TouchedObjectSet();\n  /**\n   * Indicated whether this stage object is started to render or not.\n   */\n  private started: boolean = false;\n  /**\n   * Indicated whether this stage is invalidate and needs to be rendered.\n   */\n  private needUpdate: boolean = false;\n  /**\n   * Indicated whether event handler of this stage is installed.\n   */\n  private eventHandlerInstalled: boolean = false;\n  /**\n   * Indicated whether event is enabled for this stage.\n   */\n  private eventEnabled: boolean = true;\n\n  /**\n   *\n   * @param canvas\n   * @param option\n   */\n  private latestRenderLatencies?: LatestList<number>;\n\n  /**\n   * Construct a stage object by canvas and option.\n   *\n   * Example\n   *\n   * ```typescript\n   * const canvas = window.getElementById('canvas');\n   * const stage = new Stage(canvas);\n   * const html = `\n   *    <div style='background:red;width:50%;height:100%'>\n   *      <div style='background:yellow;width:50%;height:50%'></div>\n   *    </div>\n   *    <div style='background:green;width:50%;height:100%'></div>\n   * `;\n   * stage.load(html).start();\n   * ```\n   *\n   * @param canvas The target canvas object this stage renders to.\n   * @param option The parameters to create this stage instance.\n   */\n  constructor(canvas: HTMLCanvasElement, option: StageOptions = {}) {\n    super();\n    for (const k in option) {\n      (this.option as { [key: string]: any })[k] = (option as { [key: string]: any })[k];\n    }\n    this.canvas = canvas;\n    this.css({\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0\n    });\n    if (option.style) {\n      this.css(option.style);\n    }\n\n    if (option.recordRenderLatencies) {\n      this.latestRenderLatencies = new LatestList<number>();\n    }\n\n    if (!option.noEventHandler) {\n      this.installEventHandlers();\n    }\n    this.ticker = new Ticker(this.option.fps);\n    this.animationFactory = new AnimationFactory();\n    this.resourceRegistry = new ResourceRegistry();\n  }\n\n  /**\n   * Marks this stage is invalidate and it will render the canvas in next ticker.\n   */\n  public updateOnce() {\n    this.needUpdate = true;\n  }\n\n  /**\n   * Start the ticker of this stage.\n   */\n  public start() {\n    if (!this.started) {\n      this.started = true;\n      this.layout();\n      this.needUpdate = true;\n      this.ticker.addEventListener('tick', (_) => {\n        this.animationFactory.onInterval();\n        if (\n          this.option.updatePolicy !== StageUpdatePolicy.NEVER &&\n          (this.needUpdate || this.option.updatePolicy === StageUpdatePolicy.ALWAYS)\n        ) {\n          this.update();\n          this.needUpdate = false;\n        }\n      });\n      ResourceRegistry.DefaultInstance.addEventListener('load', (e) => {\n        this.updateOnce();\n      });\n      this.on('update', () => {\n        this.updateOnce();\n      });\n    }\n  }\n\n  /**\n   * Enables the event listeners that stage adds to canvas.\n   */\n  public installEventHandlers() {\n    if (!this.eventHandlerInstalled) {\n      this.eventHandlerInstalled = true;\n      Runtime.get().enableEvents(this);\n    }\n  }\n\n  /**\n   * Enables event for this stage.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public enableEvents(): Stage {\n    this.eventEnabled = true;\n    return this;\n  }\n\n  /**\n   * Disables event for this stage.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public disableEvents(): Stage {\n    this.eventEnabled = false;\n    return this;\n  }\n\n  /**\n   * Returns a list of TouchItems pressed on a given element.\n   * @param child A child to find the pressed TouchItems, use stage itself if it is undefined.\n   * @returns A list of TouchItems pressed on this element.\n   */\n  public getPressedTouchItems(child?: XObject): TouchItem[] {\n    if (!child) child = this;\n    const touches = this.touchItems.getTouches(child);\n    const result = [];\n    for (const touch of touches) {\n      if (!touch.pressed) continue;\n      result.push(touch.clone());\n    }\n    return result;\n  }\n\n  /**\n   * Handles the mouse/touch events from runtime.\n   * @param type The type of this event.\n   * @param touches The list of touches, if the event is a mouse event, the first touch item\n   * contains mouse location and the identifier is always 0.\n   * @param e The native event object.\n   */\n  public handleMouseOrTouchEvent(type: string, touches: TouchItem[], e: any) {\n    if (!this.eventEnabled || !this.isVisible()) {\n      return;\n    }\n    switch (type) {\n      case 'mousedown':\n      case 'touchstart':\n        this.handleTouchStartEvent(touches, e);\n        break;\n      case 'mouseup':\n        this.onTouchMove(touches, e);\n        this.handleTouchEndEvent([], e);\n        break;\n      case 'touchend':\n      case 'touchcancel':\n        this.handleTouchEndEvent(touches, e);\n        break;\n      case 'mousemove':\n      case 'touchmove':\n      case 'mouseleave':\n        this.onTouchMove(touches, e);\n        break;\n    }\n  }\n\n  /**\n   * Handles the mouse/touch events from runtime.\n   * @param type The type of this event.\n   * @param touches The list of touches, if the event is a mouse event, the first touch item\n   * contains mouse location and the identifier is always 0.\n   * @param e The native event object.\n   */\n  public handleMouseWheelEvent(\n    stageX: number,\n    stageY: number,\n    deltaX: number,\n    deltaY: number,\n    e: any\n  ) {\n    const pt = this.globalToLocal(stageX, stageY);\n    const element: XObject | undefined = this.getObjectUnderPoint(pt.x, pt.y, true);\n    if (element) {\n      const touch = new TouchItem(0, element, stageX, stageY, Date.now());\n      touch.deltaX = deltaX;\n      touch.deltaY = deltaY;\n      this.dispatchTouchEvent(element, 'mousewheel', touch, true, true, e);\n    }\n  }\n\n  /**\n   * Returns the top stage object of the given element.\n   * @returns The top stage object, or undefined if it is not been added.\n   */\n  public static of(element: XObject): Stage | undefined {\n    while (element.parent) {\n      element = element.parent;\n    }\n    return element instanceof Stage ? element : undefined;\n  }\n\n  /**\n   * Render the stage to target canvas.\n   * For performance respective, do not call this method directly, calls updateOnce to let stage\n   * render at next ticker.\n   */\n  public update() {\n    if (!this.canvas || !this.isVisible()) {\n      return;\n    }\n    const startTime = Date.now();\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    if (this.option.layoutPolicy === StageLayoutPolicy.ALWAYS) {\n      this.layout();\n    }\n    if (this.option.autoClear) {\n      ctx.clearRect(0, 0, this.getWidth(), this.getHeight());\n    }\n    ctx.save();\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n    if (this.latestRenderLatencies) {\n      this.latestRenderLatencies.add(Date.now() - startTime);\n    }\n  }\n\n  /**\n   * Calculate stage size and position according to its style.\n   */\n  public calculateSize() {\n    if (!this.canvas || !this.isVisible()) {\n      return;\n    }\n    const canvasWidth = this.canvas.width || this.canvas.clientWidth;\n    const canvasHeight = this.canvas.height || this.canvas.clientHeight;\n    LayoutUtils.updateSize(this, canvasWidth, canvasHeight);\n    LayoutUtils.updatePositionForAbsoluteElement(this, canvasWidth, canvasHeight);\n  }\n\n  /**\n   * A wrapper function to use this stage's animationFactory to create animation for the given object.\n   *\n   * ```typescript\n   *\n   * const stage = ...;\n   * const element = ...;\n   *\n   * stage.animate(element, true).css({color: 'red'}, 1000, 'linear');\n   * ```\n   *\n   * @param element The target element to create the animation for.\n   * @param override Whether to remove the existing animation of this element.\n   */\n  public animate(element: AnimationTarget, override: boolean = true): Animation {\n    return this.animationFactory.create(element, override);\n  }\n\n  /**\n   * A wrapper function to use this stage's animationFactory to stop animation for the given object.\n   *\n   * ```typescript\n   *\n   * const stage = ...;\n   * const element = ...;\n   *\n   * stage.stopAnimation(element);\n   * ```\n   * @param element The target element to create the animation for.\n   */\n  public stopAnimation(element: AnimationTarget) {\n    this.animationFactory.removeByTarget(element);\n  }\n\n  /**\n   * Returns a string representation of this stage object.\n   * @returns a string representation of this stage object.\n   */\n  public toString() {\n    return `[Stage (id=${this.id})]`;\n  }\n\n  /**\n   * Dispatch a touch event to a child element.\n   * @param element The target element to receive this event.\n   * @param type Event type.\n   * @param currentTouch It contains location and identifier of this event.\n   * @param bubble Indicates whether the event bubbles up through its parents or not.\n   * @param cancellable Indicates whether the event is cancellable or not.\n   * @param e The native event.\n   */\n  private dispatchTouchEvent(\n    element: XObject,\n    type: string,\n    currentTouch: TouchItem,\n    bubble: boolean,\n    cancellable: boolean,\n    e: any\n  ) {\n    const event = new XObjectEvent(type, bubble, cancellable, element, currentTouch);\n    event.stage = this;\n    event.nativeEvent = e;\n    element.dispatchEvent(event);\n  }\n\n  /**\n   * Handles the touch move event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private onTouchMove(touches: TouchItem[], e: any) {\n    const movedTouches: TouchItem[] = [];\n    const newTouches: TouchItem[] = [];\n    for (const touch of touches) {\n      const item = this.touchItems.get(touch.identifier);\n      if (item) {\n        if (item.stageX !== touch.stageX || item.stageY !== touch.stageY) {\n          item.onUpdate(touch);\n          movedTouches.push(item);\n        }\n      } else {\n        newTouches.push(touch);\n      }\n    }\n\n    for (const touch of movedTouches) {\n      const pt = this.globalToLocal(touch.stageX, touch.stageY);\n      const element: XObject | undefined = this.getObjectUnderPoint(pt.x, pt.y, true);\n      if (element) {\n        this.dispatchTouchEvent(element, 'move', touch, true, true, e);\n      }\n      if (touch.pressed) {\n        this.dispatchTouchEvent(touch.srcElement, 'pressmove', touch, true, true, e);\n      }\n      // Checks enter/leave\n      if (element) {\n        if (touch.currentTarget !== element) {\n          let enterElement = element;\n          let leaveElement = touch.currentTarget;\n          touch.currentTarget = element;\n          while (leaveElement) {\n            if (enterElement.isChildOf(leaveElement) || enterElement === leaveElement) {\n              break;\n            }\n            this.dispatchTouchEvent(leaveElement, 'leave', touch, false, true, e);\n            leaveElement = leaveElement.parent;\n          }\n          while (enterElement && enterElement !== leaveElement) {\n            this.dispatchTouchEvent(enterElement, 'enter', touch, false, true, e);\n            enterElement = enterElement.parent;\n          }\n        }\n      } else if (touch.currentTarget) {\n        this.dispatchTouchEvent(touch.currentTarget, 'leave', touch, false, true, e);\n        touch.currentTarget = undefined;\n      }\n    }\n\n    for (const touch of newTouches) {\n      const pt = this.globalToLocal(touch.stageX, touch.stageY);\n      const element: XObject | undefined = this.getObjectUnderPoint(pt.x, pt.y, true);\n      if (!element) {\n        continue;\n      }\n      const newMove = touch.switchSourceElement(element);\n      newMove.pressed = false;\n      newMove.currentTarget = element;\n      this.touchItems.add(newMove);\n      this.dispatchTouchEvent(element, 'move', newMove, true, true, e);\n      this.dispatchTouchEvent(element, 'enter', newMove, false, true, e);\n    }\n  }\n\n  /**\n   * Handles the touch start event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private handleTouchStartEvent(touches: TouchItem[], e: any) {\n    const newTouches: TouchedObjectSet = new TouchedObjectSet();\n    for (const touch of touches) {\n      const existing = this.touchItems.get(touch.identifier);\n      if (!existing || !existing.pressed) {\n        if (existing) {\n          this.touchItems.remove(existing.identifier);\n        }\n        const element = this.getObjectUnderPoint(touch.stageX, touch.stageY, true);\n        if (element) {\n          const item = touch.switchSourceElement(element);\n          item.currentTarget = element;\n          item.pressed = true;\n          newTouches.add(item);\n          this.touchItems.add(item);\n        }\n      }\n    }\n    for (const item of newTouches.touchItems) {\n      this.dispatchTouchEvent(item.srcElement, 'touchdown', item, true, true, e);\n    }\n    this.onTouchMove(touches, e);\n  }\n\n  /**\n   * Handles the touch end event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private handleTouchEndEvent(touches: TouchItem[], e: any) {\n    this.onTouchMove(touches, e);\n    const endedTouches: TouchedObjectSet = new TouchedObjectSet();\n    for (const item of this.touchItems.touchItems) {\n      let exists = false;\n      for (const touch of touches) {\n        if (touch.identifier === item.identifier) {\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        endedTouches.add(item);\n      }\n    }\n    for (const item of endedTouches.touchItems) {\n      this.touchItems.remove(item.identifier);\n    }\n    for (const item of endedTouches.touchItems) {\n      if (!item.pressed) {\n        continue;\n      }\n      const element = this.getObjectUnderPoint(item.stageX, item.stageY, true);\n      if (element) {\n        this.dispatchTouchEvent(element, 'touchup', item, true, true, e);\n      }\n      this.dispatchTouchEvent(item.srcElement, 'pressup', item, true, true, e);\n      if (element === item.srcElement || item.srcElement.isChildOf(element)) {\n        this.dispatchTouchEvent(element, 'click', item, true, true, e);\n      }\n    }\n  }\n}\n","import { HtmlParser } from '../parser/HtmlParser';\nimport { TextAlign, TextBorderPosition } from '../style/Style';\nimport { IXObjectOptions, XObject, XObjectEvent } from './XObject';\n\n/**\n * A Text object is used to display text with specified styles like font size, font family, color,\n * etc.\n *\n * Text in this element can not be wrapped automatically, you must add '\\n' by yourself in case of\n * wrapping the text; and Text element can not be 'inline' either, which means text siblings are\n * displayed block by block.\n *\n * Code example:\n *\n * ```typescript\n * const html = \"<text style='color:red'>hello</text><text style='color:green'>world</text>\";\n * container.load(html);\n * ```\n */\nexport class Text extends XObject {\n  /**\n   * The text of this element.\n   */\n  private text: string = '';\n\n  /**\n   * Create a text element with given options.\n   * @param options 'text' attribute of this option will be the 'text' of this element.\n   */\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    this.text = (options && options.text) || '';\n  }\n\n  /**\n   * Returns the default text style:\n   * 1. **color**: black.\n   * 1. **font-size**: 26px.\n   * @returns the default text style.\n   */\n  getDefaultStyle(): { [key: string]: string | number } | undefined {\n    return {\n      color: 'black',\n      fontSize: 26\n    };\n  }\n\n  /**\n   * Update the text of this element, if the new text is different with current text, update the\n   * text and dispatch an 'update' event.\n   * @param text the new text.\n   */\n  public setText(text: string) {\n    if (this.text !== text) {\n      this.text = text;\n      this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    }\n  }\n\n  /**\n   * Returns the text of this element.\n   * @returns Text of this element.\n   */\n  public getText(): string {\n    return this.text;\n  }\n\n  /**\n   * Draw the text into given canvas context.\n   * @param ctx The canvas rendering context of stage canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (this.text === '' || !this.style.font) {\n      return;\n    }\n\n    const rect = this.getContentRect();\n\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = this.style.textAlign;\n    ctx.fillStyle = this.style.color.toString();\n    ctx.font = this.style.font.toString();\n\n    // Set border.\n    const hasBorder = this.style.textBorder && this.style.textBorder.isEnable();\n    if (hasBorder) {\n      ctx.strokeStyle = this.style.textBorder.color.toString();\n      ctx.lineWidth = this.style.textBorder.width;\n    }\n\n    // Set shadow\n    if (this.style.textShadow && this.style.textShadow.isEnable()) {\n      ctx.shadowBlur = this.style.textShadow.blur;\n      ctx.shadowColor = this.style.textShadow.color.toString();\n      ctx.shadowOffsetX = this.style.textShadow.offsetX;\n      ctx.shadowOffsetY = this.style.textShadow.offsetY;\n    }\n\n    let x;\n    if (this.style.textAlign === TextAlign.RIGHT) {\n      x = rect.x + rect.width;\n    } else if (this.style.textAlign === TextAlign.CENTER) {\n      x = rect.x + rect.width / 2;\n    } else {\n      x = rect.x;\n    }\n\n    let y = rect.y;\n    const lines = this.text.split('\\n');\n    const lineHeight = this.getLineHeight();\n    y += lineHeight / 2;\n\n    for (const line of lines) {\n      if (line.trim() !== '') {\n        if (hasBorder) {\n          if (this.style.textBorderPosition === TextBorderPosition.OUTER) {\n            ctx.strokeText(line, x, y);\n            ctx.fillText(line, x, y);\n          } else {\n            ctx.fillText(line, x, y);\n            ctx.strokeText(line, x, y);\n          }\n        } else {\n          ctx.fillText(line, x, y);\n        }\n      }\n      y += lineHeight;\n    }\n\n    ctx.restore();\n    return true;\n  }\n\n  /**\n   * Calculates size of current object, if there is no width or height specified in element style,\n   * system will calculate the text width and height by text and font size.\n   */\n  public layout() {\n    super.layout();\n    if (this.style.font) {\n      const lines = this.text.split('\\n');\n      const contentRect = this.getContentRect();\n      let textWidth = 0;\n      for (const line of lines) {\n        textWidth = Math.max(textWidth, this.style.font.measureTextWidth(line));\n      }\n      if (textWidth > contentRect.width) {\n        this.rect.width += textWidth - contentRect.width;\n      }\n\n      const textHeight = this.getLineHeight() * lines.length;\n      if (textHeight > contentRect.height) {\n        this.rect.height += textHeight - contentRect.height;\n      }\n    }\n  }\n}\n\nHtmlParser.registerTag('text', Text);\n","import { XObject } from './XObject';\n\n/**\n * A type contains position (x/y) and timestamp.\n */\nexport type TouchPosition = {\n  x: number;\n  y: number;\n  timestamp: number;\n};\n\n/**\n * A velocity type contains speed and direction.\n */\nexport type Velocity = {\n  speed: number;\n  direction: number;\n};\n\nconst TRACK_DURATION = 100; // In MS\n\n/**\n * A helper class to track mouse/touch moves and calculate the velocity.\n * The current implementation tracks all moves in recently 100 milliseconds and use the\n * distance between current move and the last move in 100 milliseconds to calculate the velocity.\n */\nclass VelocityTracker {\n  /**\n   * All the moves in 100 milliseconds.\n   */\n  readonly positions: TouchPosition[] = [];\n\n  /**\n   * Removes the expired moves.\n   * @param now the current timestamp.\n   */\n  private trim(now: number) {\n    while (this.positions.length > 0 && this.positions[0].timestamp < now - TRACK_DURATION) {\n      this.positions.shift();\n    }\n  }\n\n  /**\n   * Adds a new position.\n   * @param x The X coordinate.\n   * @param y The Y coordinate.\n   * @param timestamp The timestamp of this new position.\n   * @returns A computed velocity contains speed and direction.\n   */\n  public add(x: number, y: number, timestamp: number): Velocity {\n    this.trim(timestamp);\n    this.positions.push({ x, y, timestamp });\n    let direction = 0;\n    let speed = 0;\n    if (this.positions.length > 1) {\n      const first = this.positions[0];\n      const duration = timestamp - first.timestamp;\n      if (duration > 0) {\n        const moves = Math.sqrt(Math.pow(x - first.x, 2) + Math.pow(y - first.y, 2));\n        if (moves > 0) {\n          speed = moves / duration;\n          direction = (Math.asin((first.y - y) / moves) / Math.PI) * 180;\n          if (x < first.x) {\n            direction = 180 - direction;\n          } else if (direction < 0) {\n            direction = 360 + direction;\n          }\n        }\n      }\n    }\n    return { speed, direction };\n  }\n}\n\n/**\n * A TouchItem object representing an identifier to track a serial of touch events and location in\n * (x,y) coordinate space of current event.\n */\nexport class TouchItem {\n  /**\n   * The identifier of this TouchItem, used to track a serial of touch events.\n   */\n  readonly identifier: number;\n  /**\n   * The first pressed element of this event.\n   */\n  readonly srcElement?: XObject;\n  /**\n   * The timestamp of touch event starts.\n   */\n  readonly srcTimestamp: number;\n  /**\n   * The X coordinate of this TouchItem in the stage.\n   */\n  readonly srcStageX: number;\n  /**\n   * The Y coordinate of this TouchItem in the stage.\n   */\n  readonly srcStageY: number;\n\n  /**\n   * A helper to track and calculate velocity.\n   */\n  private velocityTracker?: VelocityTracker;\n\n  /**\n   * Whether the this TouchItem with mouse pressed.\n   */\n  public pressed: boolean = false;\n\n  /**\n   * The timestamp of current event.\n   */\n  public timestamp: number;\n  /**\n   * The current move speed, unit is pixel per millisecond.\n   */\n  public speed: number;\n  /**\n   * The move direction, move to up is 0, right is 90, down is 180 and left is 270.\n   */\n  public direction: number;\n\n  /**\n   * The current X coordinate in the stage.\n   */\n  public stageX: number;\n  /**\n   * The current Y coordinate in the stage.\n   */\n  public stageY: number;\n  /**\n   * The current element of this event.\n   */\n  public currentTarget?: XObject;\n  /**\n   * The current X coordinate in the current element.\n   */\n  public x: number = 0;\n  /**\n   * The current Y coordinate in the current element.\n   */\n  public y: number = 0;\n  /**\n   * mousewheel event only, the delta in X direction.\n   */\n  public deltaX?: number;\n  /**\n   * mousewheel event only, the delta in Y direction.\n   */\n  public deltaY?: number;\n\n  /**\n   * Constructs and initializes a TouchItem at the specified identifier and (x,y) location in the\n   * coordinate space.\n   * @param identifier the identifier of the newly constructed TouchItem\n   * @param srcElement the source element of the newly constructed TouchItem\n   * @param stageX the X coordinate in stage of the newly constructed TouchItem\n   * @param stageY the Y coordinate in stage of the newly constructed TouchItem\n   */\n  constructor(\n    identifier: number,\n    srcElement: XObject,\n    stageX: number,\n    stageY: number,\n    timestamp: number\n  ) {\n    this.identifier = identifier;\n    this.srcElement = srcElement;\n    this.srcStageX = this.stageX = stageX;\n    this.srcStageY = this.stageY = stageY;\n    this.srcTimestamp = this.timestamp = timestamp;\n    this.speed = this.direction = 0;\n  }\n\n  getDelta(): { x: number; y: number } {\n    if (this.deltaX !== undefined && this.deltaY !== undefined) {\n      return { x: this.deltaX, y: this.deltaY };\n    }\n    if (!this.velocityTracker || this.velocityTracker.positions.length <= 1) {\n      return { x: 0, y: 0 };\n    } else {\n      const size = this.velocityTracker.positions.length;\n      return {\n        x: this.velocityTracker.positions[size - 1].x - this.velocityTracker.positions[size - 2].x,\n        y: this.velocityTracker.positions[size - 1].y - this.velocityTracker.positions[size - 2].y\n      };\n    }\n  }\n\n  /**\n   * Clones a new TouchItem instance by this one, but change the src element.\n   * @param srcElement the new src element.\n   */\n  public switchSourceElement(srcElement: XObject): TouchItem {\n    const cloned = new TouchItem(\n      this.identifier,\n      srcElement,\n      this.srcStageX,\n      this.srcStageY,\n      this.srcTimestamp\n    );\n    cloned.x = this.x;\n    cloned.y = this.y;\n    cloned.currentTarget = this.currentTarget;\n    cloned.pressed = this.pressed;\n    cloned.speed = this.speed;\n    cloned.direction = this.direction;\n    return cloned;\n  }\n\n  /**\n   *\n   * @param item\n   */\n  public onUpdate(item: TouchItem) {\n    if (!this.velocityTracker) {\n      this.velocityTracker = new VelocityTracker();\n      this.velocityTracker.add(this.stageX, this.stageY, this.timestamp);\n    }\n    const velocity = this.velocityTracker.add(item.stageX, item.stageY, item.timestamp);\n    this.speed = velocity.speed;\n    this.direction = velocity.direction;\n    this.stageX = item.stageX;\n    this.stageY = item.stageY;\n    this.timestamp = item.srcTimestamp;\n  }\n\n  /**\n   * Creates a new TouchItem with the same location as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): TouchItem {\n    return this.switchSourceElement(this.srcElement);\n  }\n}\n","import { Event, EventDispatcher } from '../base/Event';\nimport { Matrix2D } from '../base/Matrix2D';\nimport { Point } from '../base/Point';\nimport { Rect } from '../base/Rect';\nimport { RoundRect } from '../base/RoundRect';\nimport { Runtime } from '../runtime/Runtime';\nimport { Display, Style, Visibility } from '../style/Style';\nimport { DrawUtils } from '../utils/DrawUtils';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { Container } from './Container';\nimport { Stage } from './Stage';\nimport { TouchItem } from './TouchItem';\n\n/**\n * This class represents an event object for both touch event (in mobile devices) and mouse event\n * (in desktop).\n */\nexport class XObjectEvent extends Event {\n  /**\n   * The stage object of the target element.\n   */\n  public stage?: Stage;\n  /**\n   * The touch item related to this event;\n   */\n  readonly touchItem?: TouchItem;\n  /**\n   * The native event, note that the location of this event is not transferred to the stage.\n   */\n  public nativeEvent: any = null;\n  /**\n   * The identifier of this TouchItem, used to track a serial of touch events.\n   */\n  readonly identifier: number;\n  /**\n   * The X coordinate of this TouchItem in the stage.\n   */\n  readonly stageX: number;\n  /**\n   * The Y coordinate of this TouchItem in the stage.\n   */\n  readonly stageY: number;\n  /**\n   * The X coordinate of this TouchItem in the current element.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of this TouchItem in the current element.\n   */\n  public y: number;\n  /**\n   * A reference to the currently registered target for the event. This is the object to which the\n   * event is currently slated to be sent. It's possible this has been changed along the way\n   * through re-targeting.\n   */\n  public currentTarget: XObject;\n\n  /**\n   * The source element of this event.\n   */\n  public readonly srcElement: XObject;\n\n  /**\n   * Creates an instance of XObjectEvent.\n   * @param srcElement The source element of this event.\n   * @param type Event type.\n   * @param bubbles Indicates whether the event bubbles up through its parents or not.\n   * @param touch Contains location and identifier of this touch event.\n   * @param cancelable Interface indicates whether the event can be canceled, and\n   * therefore prevented as if the event never happened.\n   */\n  constructor(\n    type: string,\n    bubbles: boolean = true,\n    cancelable: boolean = true,\n    srcElement: XObject,\n    touchItem?: TouchItem,\n    currentTarget?: XObject\n  ) {\n    super(type, bubbles, cancelable);\n    this.srcElement = srcElement;\n    this.touchItem = touchItem;\n    this.currentTarget = currentTarget;\n    if (touchItem) {\n      this.identifier = touchItem.identifier;\n      this.stageX = touchItem.stageX;\n      this.stageY = touchItem.stageY;\n    }\n  }\n\n  /**\n   * Returns a string representation of this XObjectEvent object.\n   * @returns a string representation of this XObjectEvent object.\n   */\n  toString() {\n    return '[XObjectEvent (type=' + this.type + ')]';\n  }\n}\n\n/**\n * Indicates the cache state of this object.\n */\nenum CacheState {\n  /**\n   * Never cache this object.\n   */\n  DISABLED = 1,\n  /**\n   * Already cached this object to an offscreen canvas.\n   */\n  CACHED = 2,\n  /**\n   * Cache is enabled for the current object, but it is invalidate, and will be updated in next\n   * render time.\n   */\n  INVALIDATE = 3\n}\n\n/**\n * Options to create an XObject instance.\n */\nexport interface IXObjectOptions {\n  attributes: { [key: string]: string };\n  text?: string;\n}\n\n/**\n * This class represents an basic object (XObject), contains id, style, cache and cache status,\n * etc.\n */\nexport class XObject extends EventDispatcher<XObjectEvent> {\n  /**\n   * The string if of this object.\n   */\n  public id?: string = undefined;\n  /**\n   * The style of this object.\n   */\n  readonly style: Style;\n  /**\n   * The calculated location and size of this object.\n   * Note: it is a computed result, do not change it manually, it maybe re-calculated in next\n   * layout process.\n   */\n  public rect: Rect = new Rect(0, 0, 0, 0);\n  /**\n   * Parent object of this object.\n   */\n  public parent?: Container;\n  /**\n   * The cached canvas.\n   */\n  private cacheCanvas?: HTMLCanvasElement;\n  /**\n   * Cache state, by default it is not cached.\n   * Note that enabling cache does not always improve the performance, if this instance is a image\n   * there is no performance gain, or its size is bigger but simple to draw, enabling cache may\n   * hurt performance.\n   */\n  private cacheState: CacheState = CacheState.DISABLED;\n\n  /**\n   * Creates a XObject instance.\n   * @param opt The options to create this object.\n   */\n  constructor(opt?: IXObjectOptions) {\n    super();\n\n    this.style = new Style();\n    const defaultStyle = this.getDefaultStyle();\n    if (defaultStyle) {\n      this.style.apply(defaultStyle);\n    }\n\n    if (opt) {\n      if (opt.attributes.style) {\n        this.style.apply(Style.parse(opt.attributes.style));\n      }\n      if (opt.attributes.id) {\n        this.id = opt.attributes.id;\n      }\n    }\n  }\n\n  getDefaultStyle(): { [key: string]: string | number } | undefined {\n    return undefined;\n  }\n\n  /**\n   * This this element from its parent.\n   */\n  public remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n  }\n\n  /**\n   * Dispatches an event from current element and bubbles up through its parents.\n   * @param event The event to be dispatched.\n   * @returns True if the event is prevented, false otherwise.\n   */\n  public dispatchEvent(event: XObjectEvent): boolean {\n    if (!event.bubbles || !this.parent) {\n      this.doDispatchEvent(event);\n    } else {\n      let element: XObject = this;\n      // To avoid issues with items being removed or added during the dispatch\n      const queue: XObject[] = [element];\n\n      while (element.parent) {\n        queue.push(element.parent);\n        element = element.parent;\n      }\n\n      // Bubbling\n      for (const ele of queue) {\n        event.currentTarget = ele;\n        if (event.propagationStopped) {\n          break;\n        }\n        ele.doDispatchEvent(event);\n      }\n    }\n    return !event.defaultPrevented;\n  }\n\n  /**\n   * Get root element of current element.\n   * @returns Root element.\n   */\n  public getStage(): Stage | null {\n    let element: XObject = this;\n    while (element.parent) {\n      element = element.parent;\n    }\n    return element instanceof Stage ? (element as Stage) : null;\n  }\n\n  /**\n   * Checks whether this element is visible.\n   * @returns True if it is visible, false otherwise.\n   */\n  public isVisible(): boolean {\n    return !!(\n      this.style.visibility !== Visibility.HIDDEN &&\n      this.style.display !== Display.NONE &&\n      this.style.alpha > 0 &&\n      this.style.scaleX > 0 &&\n      this.style.scaleY > 0\n    );\n  }\n\n  /**\n   * Returns the offscreen cache canvas.\n   * @returns The offscreen cache canvas.\n   */\n  public getCacheCanvas(): HTMLCanvasElement | undefined {\n    return this.cacheCanvas;\n  }\n\n  /**\n   * Checks whether this element is cache enabled.\n   * Note that it returns true for an invalidate cache state.\n   * @returns True if it is cache enabled, false otherwise.\n   */\n  public isCached(): boolean {\n    return this.cacheState !== CacheState.DISABLED;\n  }\n\n  /**\n   * Enable cache for this element.\n   */\n  public cache() {\n    if (this.cacheState !== CacheState.CACHED) {\n      this.cacheState = CacheState.INVALIDATE;\n    }\n  }\n\n  /**\n   * Disable cache for this element.\n   */\n  public uncache() {\n    this.cacheState = CacheState.DISABLED;\n    delete this.cacheCanvas;\n  }\n\n  /**\n   * Marks the cache is invalidate and update in next render cycle.\n   */\n  public invalidateCache() {\n    if (this.cacheState === CacheState.DISABLED) {\n      console.warn('Cache does not enabled for ' + this.toString());\n      return;\n    }\n    this.cacheState = CacheState.INVALIDATE;\n  }\n\n  /**\n   * Draws the image to stage canvas.\n   * @param ctx The canvas rendering context of stage canvas.\n   * @param ignoreCache If true, always not use cache.\n   */\n  public draw(ctx: CanvasRenderingContext2D, ignoreCache: boolean = false) {\n    ctx.filter = this.style.filter || 'none';\n    if (!ignoreCache && this.cacheState !== CacheState.DISABLED) {\n      if (!this.cacheCanvas) {\n        this.cacheCanvas = Runtime.get().newCanvas();\n      }\n      if (this.cacheState !== CacheState.CACHED) {\n        this.cacheCanvas.width = this.rect.width;\n        this.cacheCanvas.height = this.rect.height;\n        const cacheCtx = this.cacheCanvas.getContext('2d');\n        if (cacheCtx) {\n          DrawUtils.drawElement(this, cacheCtx);\n        }\n        this.cacheState = CacheState.CACHED;\n      }\n      ctx.drawImage(this.cacheCanvas, 0, 0, this.rect.width, this.rect.height);\n    } else {\n      DrawUtils.drawElement(this, ctx);\n    }\n  }\n\n  /**\n   * Draws the background of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   * @param outerRect the outer position of border of this element.\n   * @param innerRect the inner position of border of this element.\n   */\n  public drawBackground(ctx: CanvasRenderingContext2D, outerRect: RoundRect, innerRect: RoundRect) {\n    if (this.style.background) {\n      this.style.background.draw(this, ctx, outerRect, innerRect);\n    }\n  }\n\n  /**\n   * Draws content of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    return;\n  }\n\n  /**\n   * Applies this object's transformation and alpha to the specified context. This is typically\n   * called prior to 'draw' function.\n   * @param ctx The canvas rendering context to update.\n   */\n  public updateContext(ctx: CanvasRenderingContext2D) {\n    const mtx: Matrix2D = this.getMatrix();\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    ctx.globalAlpha *= this.style.alpha;\n  }\n\n  /**\n   * Transforms the specified x and y position from the coordinate space of this object to the\n   * stage coordinate space.\n   * @param x The x position in the source object to transform.\n   * @param y The y position in the source object to transform.\n   * @returns A Point instance with x and y properties correlating to the transformed coordinates.\n   */\n  public localToGlobal(x: number, y: number): Point {\n    return this.getConcatenatedMatrix().transformPoint(x, y);\n  }\n\n  /**\n   * Transforms the specified x and y position from the stage coordinate space to the coordinate\n   * space of this object.\n   * @param x The x position in the source object to transform.\n   * @param y The y position in the source object to transform.\n   * @returns A Point instance with x and y properties correlating to the transformed coordinates.\n   */\n  public globalToLocal(x: number, y: number): Point {\n    return this.getConcatenatedMatrix().invert().transformPoint(x, y);\n  }\n\n  /**\n   * Transforms the specified x and y position from the coordinate space of this object to the\n   * coordinate space of the target object.\n   * @param x The x position in the source object to transform.\n   * @param y The y position on the source object to transform.\n   * @param target The target object to which the coordinates will be transformed.\n   * @returns Returns a Point instance with x and y properties correlating to the transformed\n   * position in the target's coordinate space.\n   */\n  public localToLocal(x: number, y: number, target: XObject): Point {\n    const pt = this.localToGlobal(x, y);\n    return target.globalToLocal(pt.x, pt.y);\n  }\n\n  /**\n   * Returns a matrix based on this object's current transform.\n   * @param matrix Optional. A Matrix2D object to populate with the calculated values.\n   * If null, a new Matrix2D object is returned.\n   * @return A matrix representing this object's transform.\n   */\n  public getMatrix(matrix?: Matrix2D): Matrix2D {\n    const mtx = (matrix && matrix.identity()) || new Matrix2D();\n    const cx = this.style.perspectiveOriginX.getValue(this.rect.width);\n    const cy = this.style.perspectiveOriginY.getValue(this.rect.height);\n    return mtx.appendTransform(\n      this.rect.x + cx + this.style.transformX.getValue(this.rect.width),\n      this.rect.y + cy + this.style.transformY.getValue(this.rect.height),\n      this.style.scaleX,\n      this.style.scaleY,\n      this.style.rotation,\n      this.style.skewX,\n      this.style.skewY,\n      cx,\n      cy\n    );\n  }\n\n  /**\n   * Generates a Matrix2D object representing the combined transform of the object and all of its\n   * parent Containers up to the stage. This can be used to transform positions between coordinate\n   * spaces.\n   * @param matrix A Matrix2D object to populate with the calculated values. If null, a new\n   * Matrix2D object is returned.\n   * @returnsThe combined matrix.\n   */\n  public getConcatenatedMatrix(matrix?: Matrix2D): Matrix2D {\n    const mtx = this.getMatrix(matrix);\n    let o: XObject | undefined = this.parent;\n    while (o) {\n      mtx.prependMatrix(o.getMatrix());\n      o = o.parent;\n    }\n    return mtx;\n  }\n\n  /**\n   * Checks the given location should trigger a click event or not.\n   * @param x The x position to test.\n   * @param y The y position to test.\n   * @returns True if it should trigger a click event, false otherwise.\n   */\n  public hitTest(x: number, y: number): boolean {\n    return x >= 0 && x < this.rect.width && y >= 0 && y < this.rect.height;\n  }\n\n  /**\n   * Calculates size of current object.\n   */\n  public layout() {\n    this.calculateSize();\n  }\n\n  /**\n   * Calculates size of current object.\n   */\n  public calculateSize() {\n    if (!this.parent) {\n      return;\n    }\n    LayoutUtils.updateSize(this, this.parent.getContentWidth(), this.parent.getContentHeight());\n  }\n\n  /**\n   * Applies the style map to current object.\n   * @param style Style map to apply.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public css(style: { [key: string]: string | number }): XObject {\n    this.style.apply(style);\n    this.dispatchEvent(new XObjectEvent('update', true, true, this));\n    return this;\n  }\n\n  /**\n   * Returns line height of this object.\n   * @returns Line height of this object.\n   */\n  public getLineHeight(): number {\n    if (this.style.font) {\n      if (this.style.lineHeight) {\n        return this.style.lineHeight.getValue(this.style.font.size);\n      } else if (this.style.font.lineHeight) {\n        return this.style.font.lineHeight.getValue(this.style.font.size);\n      } else {\n        return this.style.font.size;\n      }\n    } else {\n      if (this.style.lineHeight) {\n        return this.style.lineHeight.getValue(0);\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  /**\n   * Returns width of this object, including content width, padding width and border width.\n   * @returns Width of this object.\n   */\n  public getWidth(): number {\n    return this.rect.width;\n  }\n\n  /**\n   * Returns height of this object, including content height, padding height and border height.\n   * @returns Height of this object.\n   */\n  public getHeight(): number {\n    return this.rect.height;\n  }\n\n  /**\n   * Returns padding width of this object.\n   * @returns Padding width of this object.\n   */\n  public getPaddingWidth(): number {\n    return (\n      this.rect.width -\n      (this.style.borderLeft ? this.style.borderLeft.width : 0) -\n      (this.style.borderRight ? this.style.borderRight.width : 0)\n    );\n  }\n\n  /**\n   * Returns padding height of this object.\n   * @returns Padding height of this object.\n   */\n  public getPaddingHeight(): number {\n    return (\n      this.rect.height -\n      (this.style.borderTop ? this.style.borderTop.width : 0) -\n      (this.style.borderBottom ? this.style.borderBottom.width : 0)\n    );\n  }\n\n  /**\n   * Returns padding rect of this object.\n   * @returns Padding rect of this object.\n   */\n  public getPaddingRect(): Rect {\n    const rect = new Rect(0, 0, this.rect.width, this.rect.height);\n    if (this.style.borderLeft) {\n      rect.x += this.style.borderLeft.width;\n      rect.width -= this.style.borderLeft.width;\n    }\n    if (this.style.borderRight) {\n      rect.width -= this.style.borderRight.width;\n    }\n\n    if (this.style.borderTop) {\n      rect.y += this.style.borderTop.width;\n      rect.height -= this.style.borderTop.width;\n    }\n    if (this.style.borderBottom) {\n      rect.height -= this.style.borderBottom.width;\n    }\n    return rect;\n  }\n\n  /**\n   * Returns content width of this object.\n   * @returns Content width of this object.\n   */\n  public getContentWidth(): number {\n    return (\n      this.rect.width -\n      (this.style.paddingLeft ? this.style.paddingLeft.getValue(this.rect.width) : 0) -\n      (this.style.paddingRight ? this.style.paddingRight.getValue(this.rect.width) : 0) -\n      (this.style.borderLeft ? this.style.borderLeft.width : 0) -\n      (this.style.borderRight ? this.style.borderRight.width : 0)\n    );\n  }\n\n  /**\n   * Returns content height of this object.\n   * @returns content height of this object.\n   */\n  public getContentHeight(): number {\n    return (\n      this.rect.height -\n      (this.style.paddingTop ? this.style.paddingTop.getValue(this.rect.height) : 0) -\n      (this.style.paddingBottom ? this.style.paddingBottom.getValue(this.rect.height) : 0) -\n      (this.style.borderTop ? this.style.borderTop.width : 0) -\n      (this.style.borderBottom ? this.style.borderBottom.width : 0)\n    );\n  }\n\n  /**\n   * Returns content rect of this object.\n   * @returns content rect of this object.\n   */\n  public getContentRect(): Rect {\n    const rect = new Rect(0, 0, this.rect.width, this.rect.height);\n    if (this.style.paddingLeft) {\n      const left = this.style.paddingLeft.getValue(this.rect.width);\n      rect.x += left;\n      rect.width -= left;\n    }\n    if (this.style.paddingRight) {\n      rect.width -= this.style.paddingRight.getValue(this.rect.width);\n    }\n    if (this.style.paddingTop) {\n      const top = this.style.paddingTop.getValue(this.rect.height);\n      rect.y += top;\n      rect.height -= top;\n    }\n    if (this.style.paddingBottom) {\n      rect.height -= this.style.paddingBottom.getValue(this.rect.height);\n    }\n\n    if (this.style.borderLeft) {\n      rect.x += this.style.borderLeft.width;\n      rect.width -= this.style.borderLeft.width;\n    }\n    if (this.style.borderRight) {\n      rect.width -= this.style.borderRight.width;\n    }\n\n    if (this.style.borderTop) {\n      rect.y += this.style.borderTop.width;\n      rect.height -= this.style.borderTop.width;\n    }\n    if (this.style.borderBottom) {\n      rect.height -= this.style.borderBottom.width;\n    }\n    return rect;\n  }\n\n  /**\n   * Returns outer width of this object.\n   * @returns Outer width of this object.\n   */\n  public getOuterWidth(): number {\n    const parentWidth = this.parent ? this.parent.getWidth() : 0;\n    return (\n      this.rect.width +\n      (this.style.marginLeft ? this.style.marginLeft.getValue(parentWidth) : 0) +\n      (this.style.marginRight ? this.style.marginRight.getValue(parentWidth) : 0)\n    );\n  }\n\n  /**\n   * Returns outer height of this object.\n   * @returns Outer height of this object.\n   */\n  public getOuterHeight(): number {\n    const parentHeight = this.parent ? this.parent.getHeight() : 0;\n    return (\n      this.rect.height +\n      (this.style.marginTop ? this.style.marginTop.getValue(parentHeight) : 0) +\n      (this.style.marginBottom ? this.style.marginBottom.getValue(parentHeight) : 0)\n    );\n  }\n\n  /**\n   * Checks it this object is a child of the given object.\n   * @param element The object to check with.\n   * @returns True if this object is a child of the given object, false otherwise.\n   */\n  public isChildOf(element: XObject): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent === element) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  /**\n   * Returns a string representation of this object.\n   * @returns a string representation of this object.\n   */\n  public toString() {\n    return `[XObject (id=${this.id})]`;\n  }\n\n  /**\n   * Do dispatch a touch event to a this element.\n   * @param event The event to be dispatched.\n   */\n  private doDispatchEvent(event: XObjectEvent) {\n    event.currentTarget = this;\n    if (event.stage && event.touchItem && this.willTrigger(event.type)) {\n      const pt = event.stage.localToLocal(event.touchItem.stageX, event.touchItem.stageY, this);\n      event.x = pt.x;\n      event.y = pt.y;\n      event.touchItem.x = pt.x;\n      event.touchItem.y = pt.y;\n    }\n    super.dispatchEvent(event);\n  }\n}\n","export * from './Apng';\nexport * from './BitmapText';\nexport * from './Container';\nexport * from './Img';\nexport * from './Scrollable';\nexport * from './Sprite';\nexport * from './Stage';\nexport * from './Text';\nexport * from './TouchItem';\nexport * from './XObject';\n","export * from './animation';\nexport * from './base';\nexport * from './components';\nexport * from './parser';\nexport * from './resource';\nexport * from './runtime';\nexport * from './style';\nexport * from './utils';\n\nexport { Ticker } from './Ticker';\n","import { Runtime, RuntimeType } from '../runtime/Runtime';\nimport { Base64 } from '../utils/Base64';\nimport { CRC32 } from '../utils/CRC32';\n\nexport class ApngData {\n  width: number;\n  height: number;\n  duration: number = 0;\n  numPlays: number = 0;\n  frames: ApngFrame[] = [];\n}\n\nexport class ApngFrame {\n  left: number = 0;\n  top: number = 0;\n  width: number = 0;\n  height: number = 0;\n  delay: number = 0;\n  disposeOp: number = 0;\n  blendOp: number = 0;\n  dataParts: Uint8Array[] = [];\n  image: HTMLImageElement | undefined;\n}\n\n// '\\x89PNG\\x0d\\x0a\\x1a\\x0a'\nconst PNG_SIGNATURE = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n\nfunction toUint32(data: string): number {\n  return (\n    (data.charCodeAt(0) << 24) |\n    (data.charCodeAt(1) << 16) |\n    (data.charCodeAt(2) << 8) |\n    data.charCodeAt(3)\n  );\n}\n\nfunction toDWordArray(x: number): number[] {\n  return [(x >>> 24) & 0xff, (x >>> 16) & 0xff, (x >>> 8) & 0xff, x & 0xff];\n}\n\nconst IHDR = toUint32('IHDR');\nconst acTL = toUint32('acTL');\nconst IDAT = toUint32('IDAT');\nconst fcTL = toUint32('fcTL');\nconst fdAT = toUint32('fdAT');\nconst IEND = toUint32('IEND');\n\ntype Chunk = {\n  type: number;\n  start: number;\n  end: number;\n};\n\nexport class ApngParser {\n  public static parse(buffer: ArrayBuffer, silent: boolean = false): ApngData | undefined {\n    const bytes = new Uint8Array(buffer);\n\n    // Check signature.\n    for (let i = 0; i < PNG_SIGNATURE.length; ++i) {\n      if (PNG_SIGNATURE[i] !== bytes[i]) {\n        if (!silent) {\n          console.warn('not a png file');\n        }\n        return undefined;\n      }\n    }\n\n    const chunks = this.toChunks(bytes);\n    const preDataParts = [];\n    const postDataParts = [];\n    let headerDataBytes: Uint8Array = null;\n    let frame = null;\n\n    const apng = new ApngData();\n    const dataView = new DataView(bytes.buffer);\n    for (const chunk of chunks) {\n      switch (chunk.type) {\n        case IHDR:\n          headerDataBytes = bytes.subarray(chunk.start + 8, chunk.end - 4);\n          apng.width = dataView.getUint32(chunk.start + 8);\n          apng.height = dataView.getUint32(chunk.start + 8 + 4);\n          break;\n        case acTL:\n          apng.numPlays = dataView.getUint32(chunk.start + 8);\n          break;\n        case fcTL:\n          frame = new ApngFrame();\n          apng.frames.push(frame);\n          frame.width = dataView.getUint32(chunk.start + 8 + 4);\n          frame.height = dataView.getUint32(chunk.start + 8 + 8);\n          frame.left = dataView.getUint32(chunk.start + 8 + 12);\n          frame.top = dataView.getUint32(chunk.start + 8 + 16);\n          const delayN = dataView.getUint16(chunk.start + 8 + 20);\n          let delayD = dataView.getUint16(chunk.start + 8 + 22);\n          if (delayD === 0) {\n            delayD = 100;\n          }\n          frame.delay = (1000 * delayN) / delayD;\n          if (frame.delay <= 10) {\n            frame.delay = 100;\n          }\n          apng.duration += frame.delay;\n          frame.disposeOp = dataView.getUint8(chunk.start + 8 + 24);\n          frame.blendOp = dataView.getUint8(chunk.start + 8 + 25);\n          frame.dataParts = [];\n          if (apng.frames.length === 1 && frame.disposeOp === 2) {\n            frame.disposeOp = 1;\n          }\n          break;\n        case fdAT:\n          if (frame) {\n            // This is an animation frame, the first 4 byte of the data contains metadata which is\n            // not required for a static frame, delete it.\n            frame.dataParts.push(\n              this.makeChunk(IDAT, bytes.subarray(chunk.start + 12, chunk.end - 4))\n            );\n          } else if (!silent) {\n            console.warn('invalid fdAT chunk before frame');\n          }\n          break;\n        case IDAT:\n          // This a normal PNG data frame.\n          if (frame) {\n            frame.dataParts.push(\n              this.makeChunk(IDAT, bytes.subarray(chunk.start + 8, chunk.end - 4))\n            );\n          } else if (!silent) {\n            console.warn('invalid IDAT chunk before frame');\n          }\n          break;\n        case IEND:\n          postDataParts.push(bytes.subarray(chunk.start, chunk.end));\n          break;\n        default:\n          preDataParts.push(bytes.subarray(chunk.start, chunk.end));\n      }\n    }\n\n    if (apng.frames.length === 0) {\n      if (!silent) {\n        console.warn('not a png file');\n      }\n      return undefined;\n    }\n\n    // Generates the static frames.\n    for (const frm of apng.frames) {\n      const imageData: Uint8Array[] = [];\n      imageData.push(PNG_SIGNATURE);\n      // Update the static frame size.\n      headerDataBytes.set(toDWordArray(frm.width), 0);\n      headerDataBytes.set(toDWordArray(frm.height), 4);\n      imageData.push(this.makeChunk(IHDR, headerDataBytes));\n      for (const part of preDataParts) {\n        imageData.push(part);\n      }\n      for (const part of frm.dataParts) {\n        imageData.push(part);\n      }\n      for (const part of postDataParts) {\n        imageData.push(part);\n      }\n      delete frm.dataParts;\n\n      switch (Runtime.getRuntimeType()) {\n        case RuntimeType.WECHAT_MINI_GAME:\n          {\n            frm.image = Runtime.get().newImage();\n            const url = 'data:image/png;base64,' + Base64.encode(imageData);\n            frm.image.src = url;\n          }\n          break;\n        case RuntimeType.WEBPAGE:\n          {\n            const url = URL.createObjectURL(new Blob(imageData, { type: 'image/png' }));\n            const image = new Image();\n            frm.image = image;\n            image.src = url;\n            image.onload = () => {\n              URL.revokeObjectURL(url);\n            };\n            image.onerror = e => {\n              URL.revokeObjectURL(url);\n            };\n          }\n          break;\n      }\n    }\n\n    return apng;\n  }\n\n  private static toChunks(bytes: Uint8Array): Chunk[] | undefined {\n    const chunks: Chunk[] = [];\n    const dataView = new DataView(bytes.buffer);\n    let position = 8; // Skip the signature in header.\n    // A valid chunk should be >= 12 bytes.\n    while (position <= bytes.length - 12) {\n      // First 4 bytes present chunk length.\n      const length = dataView.getUint32(position);\n      if (length < 0 || position + 12 + length > bytes.length) {\n        console.warn(\n          'invalid chunk length, position=' +\n            position +\n            ' length=' +\n            length +\n            ' total=' +\n            bytes.length\n        );\n        return undefined;\n      }\n      // Next 4 bytes present chunk type.\n      const type = dataView.getUint32(position + 4);\n      chunks.push({\n        type,\n        start: position,\n        end: position + length + 12\n      });\n      // The tail 4 bytes present CRC digest, ignore it.\n      // TODO: validate it.\n      position += 12 + length;\n      if (type === IEND) {\n        break;\n      }\n    }\n    return chunks;\n  }\n\n  private static makeChunk(type: number, data: Uint8Array): Uint8Array {\n    const bytes = new Uint8Array(data.length + 12);\n    const dataView = new DataView(bytes.buffer);\n\n    dataView.setUint32(0, data.length);\n    dataView.setUint32(4, type);\n    bytes.set(data, 8);\n    const crc = CRC32.calculate(bytes, 4, data.length + 4);\n    dataView.setUint32(data.length + 8, crc);\n    return bytes;\n  }\n}\n","enum State {\n  START = 0,\n  VALUE = 1,\n  FUNC = 2\n}\n\n/**\n * This class provides an util function to tokenize a string to a list of token (string).\n */\nexport class CSSTokenizer {\n  private stopLetters: string = '';\n\n  constructor(stopLetters: string = '') {\n    this.stopLetters = stopLetters;\n  }\n  /**\n   * Checks whether a character is blank.\n   * @param ch the character to be checked.\n   * @returns true if the character is one of ' ', '\\t', '\\r', '\\n'; false otherwise.\n   */\n  private isSplitter(ch: string): boolean {\n    return ch === ' ' || ch === '\\t' || ch === '\\r' || ch === '\\n';\n  }\n\n  /**\n   * Checks whether a character is stop latter.\n   * @param ch the character to be checked.\n   * @returns true if the character is one of stop letters; false otherwise.\n   */\n  private isStopLetter(ch: string): boolean {\n    return this.stopLetters && this.stopLetters.indexOf(ch) >= 0;\n  }\n\n  /**\n   * Convert the input string to a Func object.\n   * @param content the input string.\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns a Func object for valid content, undefined otherwise.\n   */\n  public tokenize(content: string): string[] {\n    const len = content.length;\n    const result: string[] = [];\n\n    let state = State.START;\n    let tokenQuota = '';\n    let start = 0;\n\n    for (let i = 0; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case State.START:\n          if (this.isStopLetter(ch)) {\n            result.push(ch);\n          } else if (!this.isSplitter(ch)) {\n            start = i;\n            state = State.VALUE;\n            if (ch === \"'\" || ch === '\"') {\n              tokenQuota = ch;\n            } else {\n              tokenQuota = '';\n            }\n          }\n          break;\n        case State.VALUE:\n          if (tokenQuota !== '') {\n            if (ch === tokenQuota) {\n              state = State.START;\n              result.push(content.substring(start + 1, i));\n            }\n          } else if (ch === '(') {\n            state = State.FUNC;\n          } else if (this.isSplitter(ch)) {\n            state = State.START;\n            result.push(content.substring(start, i));\n          } else if (this.isStopLetter(ch)) {\n            state = State.START;\n            result.push(content.substring(start, i));\n            result.push(ch);\n          }\n          break;\n        case State.FUNC:\n          if (ch === ')') {\n            state = State.START;\n            result.push(content.substring(start, i + 1));\n          }\n          break;\n      }\n    }\n    if (state !== State.START) {\n      if (tokenQuota === '') {\n        result.push(content.substring(start));\n      } else {\n        result.push(content.substring(start + 1));\n      }\n    }\n    return result;\n  }\n}\n","type Func = {\n  name: string;\n  arguments: string[];\n};\n\nenum State {\n  NAME_START = 0,\n  NAME = 1,\n  NAME_END = 2,\n  PARAMETER_START = 3,\n  PARAMETER = 4,\n  PARAMETER_END = 5,\n  END = 6\n}\n\n/**\n * This class provides an util function to parse a string to a Func object.\n */\nexport class FunctionParser {\n  /**\n   * Checks whether a character is blank.\n   * @param ch the character to be checked.\n   * @returns true if the character is one of ' ', '\\t', '\\r', '\\n'; false otherwise.\n   */\n  private static isBlank(ch: string): boolean {\n    return ch === ' ' || ch === '\\t' || ch === '\\r' || ch === '\\n';\n  }\n\n  /**\n   * Convert the input string to a Func object.\n   * @param content the input string.\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns a Func object for valid content, undefined otherwise.\n   */\n  public static parse(content: string, silent = false): Func | undefined {\n    const func: Func = {\n      name: undefined,\n      arguments: []\n    };\n\n    let state = State.NAME_START;\n    let parameterQuota = '';\n    let start = 0;\n    const len = content.length;\n    let i = 0;\n    for (; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case State.NAME_START:\n          if (!this.isBlank(ch)) {\n            start = i;\n            state = State.NAME;\n          }\n          break;\n        case State.NAME:\n          if (this.isBlank(ch) || ch === ')') {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          } else if (ch === '(') {\n            func.name = content.substring(start, i);\n            state = ch === '(' ? State.PARAMETER_START : State.NAME_END;\n          }\n          break;\n        case State.NAME_END:\n          if (ch === '(') {\n            state = State.PARAMETER_START;\n            break;\n          } else if (!this.isBlank(ch)) {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          }\n        case State.PARAMETER_START:\n          if (this.isBlank(ch)) {\n            break;\n          } else if (ch === '\"' || ch === \"'\") {\n            state = State.PARAMETER;\n            start = i + 1;\n            parameterQuota = ch;\n          } else if (ch === ')') {\n            state = State.END;\n          } else if (ch === ',') {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          } else {\n            state = State.PARAMETER;\n            start = i;\n            parameterQuota = '';\n          }\n          break;\n        case State.PARAMETER:\n          if (parameterQuota !== '') {\n            if (parameterQuota === ch) {\n              state = State.PARAMETER_END;\n              func.arguments.push(content.substring(start, i));\n              parameterQuota = '';\n            }\n          } else {\n            if (ch === ',') {\n              state = State.PARAMETER_START;\n              func.arguments.push(content.substring(start, i).trim());\n              parameterQuota = '';\n            } else if (ch === ')') {\n              state = State.END;\n              func.arguments.push(content.substring(start, i).trim());\n              parameterQuota = '';\n            }\n          }\n          break;\n        case State.PARAMETER_END:\n          if (this.isBlank(ch)) {\n            break;\n          } else if (ch === ',') {\n            state = State.PARAMETER_START;\n          } else if (ch === ')') {\n            state = State.END;\n          }\n          break;\n        case State.END:\n          if (!this.isBlank(ch)) {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          }\n          break;\n      }\n    }\n    if (state !== State.END) {\n      if (!silent) {\n        console.warn('invalid function:' + content);\n      }\n      return undefined;\n    }\n    return func;\n  }\n}\n","import { Container } from '../components/Container';\nimport { XObject } from '../components/XObject';\n\ntype Node = {\n  tag: string;\n  attributes: { [key: string]: string };\n  children: Node[];\n  text?: string;\n  parent?: Node;\n};\n\nenum ParseState {\n  START = 1,\n  TAG = 2,\n  TEXT = 3\n}\n\nenum AttrState {\n  PENDING = 0,\n  START = 1,\n  NAME = 2,\n  EQ = 3,\n  VALUE = 4,\n  VALUE_STARTED = 5\n}\n\nexport class HtmlParser {\n  public static registerTag(tag: string, componentClass: typeof XObject) {\n    this.tagMap[tag.toLowerCase()] = componentClass;\n  }\n\n  private static tagMap: { [key: string]: typeof XObject } = {};\n\n  public parse(content: string): XObject[] {\n    const result: XObject[] = [];\n    const nodes = this.parseHtml(content);\n    for (const node of nodes) {\n      const child = this.node2Component(node);\n      if (child) {\n        result.push(child);\n      }\n    }\n    return result;\n  }\n\n  private parseHtml(content: string): Node[] {\n    const nodes: Node[] = [];\n    const queue: Node[] = [];\n    const len = content.length;\n    let state = ParseState.START;\n    let tagStart = 0;\n    let tag: string | null = null;\n    let inQuota = false;\n    let quota: string | null = null;\n    let attrState = AttrState.PENDING;\n    let attrStart = 0;\n    let attrName: string = '';\n    let attrQuota: string | null = null;\n    let attr = {};\n\n    let i = 0;\n    for (; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case ParseState.START:\n          if (ch === '<') {\n            tagStart = i;\n            tag = null;\n            state = ParseState.TAG;\n            attrState = AttrState.PENDING;\n            attrStart = 0;\n            attrName = '';\n            attrQuota = null;\n            attr = {};\n          } else {\n            tagStart = i;\n            state = ParseState.TEXT;\n          }\n          break;\n        case ParseState.TAG:\n          if (\n            !tag &&\n            (this.isSplitter(ch) || ch === '>' || ch === '/' || ch === '\"' || ch === \"'\")\n          ) {\n            tag = content.substring(tagStart + 1, i);\n            attrState = AttrState.START;\n          }\n          if (tag === null) {\n            break;\n          }\n          if (inQuota) {\n            if (ch === quota) {\n              inQuota = false;\n            }\n          } else {\n            if (ch === \"'\" || ch === '\"') {\n              inQuota = true;\n              quota = ch;\n            }\n          }\n          if (ch === '>' && !inQuota) {\n            switch (attrState) {\n              case AttrState.NAME:\n                attrName = content.substring(attrStart, i);\n                this.addAttr(attr, attrName, '');\n                break;\n              case AttrState.EQ:\n                this.addAttr(attr, attrName, '');\n                break;\n              case AttrState.VALUE:\n              case AttrState.VALUE_STARTED:\n                this.addAttr(attr, attrName, content.substring(attrStart, i));\n                break;\n            }\n            if (tag.substring(0, 3) === '!--') {\n              if (i - tagStart >= 6 && content.substring(i - 2, i) === '--') {\n                state = ParseState.START;\n              }\n              break;\n            }\n            if (tag && tag[0] === '/') {\n              tag = tag.substring(1);\n              let find = false;\n              for (const n of queue) {\n                if (n.tag === tag) {\n                  find = true;\n                }\n              }\n              if (find) {\n                while (queue.length > 0) {\n                  const node = queue.pop();\n                  if (!node || node.tag === tag) {\n                    break;\n                  }\n                }\n              }\n              state = ParseState.START;\n            } else {\n              const node: Node = {\n                children: [],\n                tag,\n                attributes: attr\n              };\n              attr = {};\n              if (queue.length > 0) {\n                node.parent = queue[queue.length - 1];\n                queue[queue.length - 1].children.push(node);\n              } else {\n                nodes.push(node);\n              }\n              if (!this.isCloseTag(tag)) {\n                queue.push(node);\n              }\n              state = ParseState.START;\n            }\n          } else {\n            switch (attrState) {\n              case AttrState.START:\n                if (!this.isSplitter(ch) && ch !== '/') {\n                  attrStart = i;\n                  attrState = AttrState.NAME;\n                }\n                attrQuota = null;\n                break;\n              case AttrState.NAME:\n                if (this.isSplitter(ch)) {\n                  attrName = content.substring(attrStart, i);\n                  attrState = AttrState.EQ;\n                } else if (ch === '=') {\n                  attrName = content.substring(attrStart, i);\n                  attrStart = i + 1;\n                  attrState = AttrState.VALUE;\n                }\n                break;\n              case AttrState.EQ:\n                if (this.isSplitter(ch)) {\n                  break;\n                }\n                if (ch === '=') {\n                  attrState = AttrState.VALUE;\n                  attrStart = i + 1;\n                } else {\n                  this.addAttr(attr, attrName, '');\n                  attrState = AttrState.START;\n                }\n                break;\n              case AttrState.VALUE:\n                if (this.isSplitter(ch)) {\n                  break;\n                }\n                if (ch === '\"' || ch === \"'\") {\n                  attrQuota = ch;\n                  attrStart = i + 1;\n                } else {\n                  attrQuota = null;\n                  attrStart = i;\n                }\n                attrState = AttrState.VALUE_STARTED;\n                break;\n              case AttrState.VALUE_STARTED:\n                let end = false;\n                const attrEnd = i;\n                if (attrQuota) {\n                  if (ch === attrQuota) {\n                    end = true;\n                  }\n                } else if (!attrQuota && this.isSplitter(ch)) {\n                  end = true;\n                }\n                if (end) {\n                  this.addAttr(attr, attrName, content.substring(attrStart, attrEnd));\n                  attrName = '';\n                  attrState = AttrState.START;\n                }\n                break;\n            }\n          }\n          break;\n        case ParseState.TEXT:\n          if (ch === '<') {\n            if (tagStart < i) {\n              const text = content.substring(tagStart, i).trim();\n              if (text.length > 0) {\n                const node: Node = {\n                  children: [],\n                  tag: 'TEXT',\n                  text,\n                  attributes: {}\n                };\n                if (queue.length > 0) {\n                  node.parent = queue[queue.length - 1];\n                  queue[queue.length - 1].children.push(node);\n                } else {\n                  nodes.push(node);\n                }\n              }\n            }\n            state = ParseState.TAG;\n            tag = null;\n            tagStart = i;\n            attrState = AttrState.PENDING;\n            attrStart = 0;\n            attrName = '';\n            attrQuota = null;\n            attr = {};\n          }\n          break;\n      }\n    }\n    switch (state) {\n      case ParseState.TEXT:\n        if (tagStart < i) {\n          const text = content.substring(tagStart, i).trim();\n          if (text.length > 0) {\n            const node: Node = {\n              children: [],\n              tag: 'TEXT',\n              text,\n              attributes: {}\n            };\n            if (queue.length > 0) {\n              node.parent = queue[queue.length - 1];\n              queue[queue.length - 1].children.push(node);\n            } else {\n              nodes.push(node);\n            }\n          }\n        }\n        break;\n    }\n    for (const node of nodes) {\n      this.trimTextNode(node);\n    }\n    return nodes;\n  }\n\n  private trimTextNode(node: Node) {\n    if (node.children.length === 1 && node.children[0].tag === 'TEXT') {\n      node.text = node.children[0].text;\n      node.children.length = 0;\n    } else {\n      for (const child of node.children) {\n        this.trimTextNode(child);\n      }\n    }\n  }\n\n  private node2Component(node: Node): XObject | undefined {\n    const type = HtmlParser.tagMap[node.tag.toLowerCase()];\n    if (!type) {\n      console.warn('unknown tag:' + node.tag.toLowerCase());\n      return undefined;\n    }\n\n    const options = {\n      attributes: node.attributes,\n      text: node.text\n    };\n    const component = new type(options);\n    if (node.children.length > 0) {\n      if (component instanceof Container) {\n        for (const child of node.children) {\n          const childComponent = this.node2Component(child);\n          if (childComponent) {\n            (component as Container).addChild(childComponent);\n          }\n        }\n      } else {\n        console.warn('component is not a container:' + component);\n      }\n    }\n    return component;\n  }\n\n  private isSplitter(ch: string): boolean {\n    return ch === ' ' || ch === '\\r' || ch === '\\n' || ch === '\\t';\n  }\n\n  private isCloseTag(tag: string): boolean {\n    return tag === 'img';\n  }\n\n  private addAttr(attr: any, name: string, value: any) {\n    attr[name.toLowerCase()] = value;\n  }\n}\n","export * from './ApngParser';\nexport * from './CSSTokenizer';\nexport * from './FunctionParser';\nexport * from './HtmlParser';\n","import { Event, EventDispatcher } from '../base/Event';\nimport { SpriteSheet } from '../components/Sprite';\nimport { ApngParser } from '../parser/ApngParser';\nimport { Runtime } from '../runtime/Runtime';\nimport { URLUtils } from '../utils/URLUtils';\n\n/**\n * Resource load state.\n */\nenum LoadState {\n  LOADING = 1,\n  LOADED = 2,\n  ERROR = 3\n}\n\n/**\n * Resource types.\n */\nexport enum ResourceType {\n  IMAGE = 'image',\n  APNG = 'apng',\n  JSON = 'json'\n}\n\nexport type Resource = HTMLImageElement | SpriteSheet | any; // `any` for json.\n\n/**\n * Defines a resource item type contains source url, type, download stats, etc.\n */\ntype ResourceItem = {\n  url: string;\n  type: ResourceType;\n  resource?: Resource;\n  state: LoadState;\n  loadedBytes: number;\n  totalBytes: number;\n  error?: any;\n  progress: number;\n  promiseHandlers: { resolve: (resource: Resource) => void; reject: (error: any) => void }[];\n};\n\n/**\n * This event is triggered when resource was added, loaded, or loading progress was changed.\n */\nexport class ResourceRegistryEvent extends Event {\n  progress?: number;\n  currentTarget?: ResourceItem;\n  constructor(type: string, progress?: number, currentTarget?: ResourceItem) {\n    super(type);\n    this.progress = progress;\n    this.currentTarget = currentTarget;\n  }\n}\n\n/**\n * The ResourceRegistry instance is used to load and manage image resources.\n *\n * Load an image programmatically:\n * ```typescript\n * const img = new Img();\n * ResourceRegistry.DefaultInstance.add('/image.jpg', ResourceType.IMAGE)\n * .then(image => {\n *   img.setImage(image);\n * });\n * ```\n *\n * By default Img instance use ResourceRegistry.DefaultInstance to load image, you can simplify the\n * code above as:\n * ```typescript\n * const img = new Img();\n * img.setSrc('/image.jpg');\n * ```\n *\n * Or\n * ```typescript\n * container.load(`<img src='/image.jpg'>`);\n * ```\n */\nexport class ResourceRegistry extends EventDispatcher<ResourceRegistryEvent> {\n  private allowOriginPattern?: RegExp;\n\n  /**\n   * Load the resource.\n   * @param item The resource item to be loaded.\n   */\n  private load(item: ResourceItem) {\n    switch (item.type) {\n      case ResourceType.IMAGE:\n        this.loadImage(item);\n        break;\n      case ResourceType.APNG:\n        this.loadApng(item);\n        break;\n      case ResourceType.JSON:\n        this.loadJson(item);\n        break;\n    }\n  }\n\n  /**\n   * Set the allow origin pattern.\n   * @param pattern The RegExp for same origin.\n   */\n  public setAllowOriginPattern(pattern?: RegExp) {\n    this.allowOriginPattern = pattern;\n  }\n\n  /**\n   * Checks the give url is from allow origin.\n   * @param url The url to be checked.\n   */\n  public isAllowOrigin(url: string): boolean {\n    if (!this.allowOriginPattern) return true;\n    const origin = URLUtils.getOrigin(url);\n    return origin === undefined || this.allowOriginPattern.test(url);\n  }\n\n  /**\n   * Calls current runtime to load the image resource.\n   * @param item The image resource item to be loaded.\n   */\n  private loadImage(item: ResourceItem) {\n    Runtime.get().loadImage({\n      url: item.url,\n      allowOrigin: this.isAllowOrigin(item.url),\n      onLoad: image => {\n        item.resource = image;\n        this.onLoad(item);\n      },\n      onError: error => {\n        item.error = error;\n        this.onError(item);\n      },\n      onProgress: event => {\n        item.loadedBytes = event.loadedBytes;\n        item.totalBytes = event.totalBytes;\n        this.onProgress(item);\n      }\n    });\n  }\n\n  /**\n   * Calls current runtime to load the json resource.\n   * @param item The json resource item to be loaded.\n   */\n  private loadJson(item: ResourceItem) {\n    Runtime.get().loadText({\n      url: item.url,\n      allowOrigin: this.isAllowOrigin(item.url),\n      onLoad: data => {\n        item.resource = JSON.parse(data);\n        this.onLoad(item);\n      },\n      onError: error => {\n        item.error = error;\n        this.onError(item);\n      },\n      onProgress: event => {\n        item.loadedBytes = event.loadedBytes;\n        item.totalBytes = event.totalBytes;\n        this.onProgress(item);\n      }\n    });\n  }\n\n  /**\n   * Calls current runtime to load the apng resource.\n   * @param item The apng resource item to be loaded.\n   */\n  private loadApng(item: ResourceItem) {\n    Runtime.get().loadArrayBuffer({\n      url: item.url,\n      allowOrigin: this.isAllowOrigin(item.url),\n      onLoad: data => {\n        const apng = ApngParser.parse(data);\n        const opt: SpriteSheet = {\n          width: apng.width,\n          height: apng.height,\n          fps: (apng.frames.length * 1000) / apng.duration,\n          frames: [],\n          url: undefined,\n          image: undefined\n        };\n        for (const frame of apng.frames) {\n          opt.frames.push({\n            destX: frame.left,\n            destY: frame.top,\n            destWidth: frame.width,\n            destHeight: frame.height,\n            image: frame.image\n          });\n        }\n        item.resource = opt;\n        this.onLoad(item);\n      },\n      onError: error => {\n        console.warn('error while loading apng', error);\n        item.error = error;\n        this.onError(item);\n      },\n      onProgress: event => {\n        item.loadedBytes = event.loadedBytes;\n        item.totalBytes = event.totalBytes;\n        this.onProgress(item);\n      }\n    });\n  }\n\n  /**\n   * Calculate the current total loading progress.\n   * @returns the total progress of current loading status.\n   */\n  private getTotalProgress(): number {\n    let progress = 0;\n    for (const item of this.items) {\n      progress += item.progress;\n    }\n    return progress / this.items.length;\n  }\n\n  /**\n   * Callback while loading progress changes.\n   * @param item the loading item who changes the progress.\n   */\n  private onProgress(item: ResourceItem) {\n    if (item.state === LoadState.LOADING && item.totalBytes > 0) {\n      item.progress = item.loadedBytes / item.totalBytes;\n    }\n    this.dispatchEvent(new ResourceRegistryEvent('progress', this.getTotalProgress()));\n    this.dispatchEvent(\n      new ResourceRegistryEvent(\n        'itemprogress',\n        item.totalBytes > 0 ? item.loadedBytes / item.totalBytes : 0,\n        item\n      )\n    );\n  }\n\n  /**\n   * Callback while a resource is loaded successfully.\n   * @param item the loaded resource.\n   */\n  private onLoad(item: ResourceItem) {\n    item.state = LoadState.LOADED;\n    item.loadedBytes = item.totalBytes;\n    if (item.progress < 1) {\n      item.progress = 1;\n      this.onProgress(item);\n    }\n    for (const handler of item.promiseHandlers) {\n      handler.resolve(item.resource);\n    }\n    item.promiseHandlers = [];\n    this.dispatchEvent(new ResourceRegistryEvent('load', 1, item));\n    let done = true;\n    for (const i of this.items) {\n      if (i.state !== LoadState.LOADED) {\n        done = false;\n        break;\n      }\n    }\n    if (done) {\n      this.dispatchEvent(new ResourceRegistryEvent('done', 1));\n    }\n  }\n\n  /**\n   * Callback while a resource is failed to been loaded.\n   * @param item the resource is failed to been loaded.\n   */\n  private onError(item: ResourceItem) {\n    item.state = LoadState.ERROR;\n    for (const handler of item.promiseHandlers) {\n      handler.reject(item.error);\n    }\n    item.promiseHandlers = [];\n    this.dispatchEvent(new ResourceRegistryEvent('error', this.getTotalProgress(), item));\n  }\n\n  /**\n   * Load the resource by url, please note that the resource with same url will be loaded once.\n   * @param url Resource of this url to be loaded.\n   * @returns A promise object od the loaded resource.\n   */\n  public add(url: string, type: ResourceType = ResourceType.IMAGE): Promise<Resource> {\n    return new Promise<Resource>((resolve, reject) => {\n      for (const item of this.items) {\n        if (item.url === url) {\n          if (item.state === LoadState.LOADED) {\n            resolve(item.resource);\n          } else if (item.state === LoadState.ERROR) {\n            reject(item.error);\n          } else {\n            item.promiseHandlers.push({\n              resolve,\n              reject\n            });\n          }\n          return;\n        }\n      }\n\n      const newItem: ResourceItem = {\n        url,\n        type,\n        resource: undefined,\n        state: LoadState.LOADING,\n        progress: 0,\n        loadedBytes: 0,\n        totalBytes: 0,\n        promiseHandlers: [{ resolve, reject }]\n      };\n      this.items.push(newItem);\n      this.load(newItem);\n    });\n  }\n\n  /**\n   * Get a loaded resource by url, or undefined in case of url is not loaded.\n   * @param url the url of resource.\n   * @returns The loaded resource of this url, or undefined for unloaded resource.\n   */\n  public get(url: string): Resource | undefined {\n    for (const item of this.items) {\n      if (item.url === url) {\n        if (item.state === LoadState.LOADED) {\n          return item.resource;\n        } else {\n          return undefined;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Release the resource by url.\n   * @param url Resource of this url to be released.\n   * @returns the released resource or undefined for a unloaded resource.\n   */\n  public release(url: string): Resource | undefined {\n    for (let i = 0; i < this.items.length; ++i) {\n      const item = this.items[i];\n      if (item.url === url) {\n        this.items.splice(i, 1);\n        item.promiseHandlers.length = 0;\n        return item.resource;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * The resources in this registry.\n   */\n  private items: ResourceItem[] = [];\n\n  /**\n   * The default ResourceRegistry instance.\n   */\n  public static readonly DefaultInstance: ResourceRegistry = new ResourceRegistry();\n}\n","export * from './ResourceRegistry';\n","import { Stage } from '../components/Stage';\nimport { WebpageRuntime } from './WebpageRuntime';\nimport { WechatMiniGameRuntime } from './WechatMiniGameRuntime';\nimport { WechatMiniProgramRuntime } from './WechatMiniProgramRuntime';\n\n/**\n * An enum to indicate current runtime type, both web page (running in a browser) and wechat mini\n * game (https://developers.weixin.qq.com/minigame/dev/guide/) are supported, toutiao mini game\n * (https://developer.toutiao.com/) will be supported soon.\n */\nexport enum RuntimeType {\n  WEBPAGE = 'webpage',\n  WECHAT_MINI_GAME = 'wechat_mini_game',\n  WECHAT_MINI_PROGRAM = 'wechat_mini_program'\n}\n\ntype Progress = {\n  loadedBytes: number;\n  totalBytes: number;\n};\n\n/**\n * Defines a type of raw content download task.\n */\nexport type LoadTask<T> = {\n  /**\n   * The url of this resource, it can be absolute url or relative url.\n   */\n  url: string;\n  /**\n   * If true, this url of task is allow origin.\n   */\n  allowOrigin?: boolean;\n  /**\n   * Http method to retrieve the raw content.\n   */\n  method?: string;\n  /**\n   * A callback function while the content was downloaded.\n   */\n  onLoad: (data: T) => void;\n  /**\n   * A callback function while failed to download.\n   */\n  onError: (error: any) => void;\n  /**\n   * An event handler for progress changing.\n   */\n  onProgress: (progress: Progress) => void;\n};\n\n/**\n * Defines abstract layer for runtime to implement.\n */\nexport interface IRuntime {\n  /**\n   * Create an offscreen canvas object.\n   */\n  newCanvas(): HTMLCanvasElement;\n  /**\n   * Create an image object.\n   */\n  newImage(): HTMLImageElement;\n  /**\n   * Release an offscreen canvas object, usually creating an offscreen canvas is expensive and\n   * we strongly recommend to re-use the canvas object.\n   * @param canvas an offscreen canvas object to be released.\n   */\n  releaseCanvas(canvas: HTMLCanvasElement): void;\n  /**\n   * Method tells the runtime that you wish to perform an animation and requests that the runtime\n   * calls a specified function to update an animation before the next repaint. The method takes a\n   * callback as an argument to be invoked before the repaint.\n   * @param listener The function to call when it's time to update  animation for the next repaint.\n   */\n  requestAnimationFrame(listener: (time: number) => void): any;\n  /**\n   * Install mouse/touch events to the specified Stage instance.\n   * @param stage The target Stage instance to be added event handlers.\n   */\n  enableEvents(stage: Stage): void;\n  /**\n   * Execute a load image task.\n   * @param task The load image task to be executed.\n   */\n  loadImage(task: LoadTask<HTMLImageElement>): void;\n  /**\n   * Execute a load raw content task.\n   * @param task The load raw content task to be executed.\n   */\n  loadArrayBuffer(task: LoadTask<ArrayBuffer>): void;\n  /**\n   * Execute a load raw content task.\n   * @param task The load raw content task to be executed.\n   */\n  loadText(task: LoadTask<string>): void;\n}\n\n/**\n * A class to manage runtime type and the abstract layer implementation.\n */\nexport class Runtime {\n  /**\n   * The current runt time type, by default it is web page, you need to call Runtime.setRuntimeType\n   * explicitly to modify runtime type in case of it is not a web page at beginning, because auto\n   * detection is not ready.\n   *\n   * ```typescript\n   * Runtime.setRuntimeType(RuntimeType.WECHAT_MINI_GAME);\n   * Runtime.get().newCanvas();\n   * ```\n   */\n  static runtimeType: RuntimeType = RuntimeType.WEBPAGE;\n\n  /**\n   * Sets the current runtime time type.\n   * @param runtimeType The current runtime time type.\n   */\n  public static setRuntimeType(runtimeType: RuntimeType) {\n    if (this.runtimeType !== runtimeType) {\n      this.runtimeType = runtimeType;\n      delete this.runtime;\n    }\n  }\n\n  /**\n   * Gets the current runtime time type.\n   * @returns The current runtime time type.\n   */\n  public static getRuntimeType(): RuntimeType {\n    return this.runtimeType;\n  }\n\n  /**\n   * Returns the current IRuntime implementation.\n   * @returns The current IRuntime implementation.\n   */\n  public static get(): IRuntime {\n    if (!this.runtime) {\n      switch (this.runtimeType) {\n        case RuntimeType.WEBPAGE:\n          this.runtime = new WebpageRuntime();\n          break;\n        case RuntimeType.WECHAT_MINI_GAME:\n          this.runtime = new WechatMiniGameRuntime();\n          break;\n        case RuntimeType.WECHAT_MINI_PROGRAM:\n          this.runtime = new WechatMiniProgramRuntime();\n          break;\n      }\n    }\n    return this.runtime;\n  }\n\n  /**\n   * The current IRuntime implementation instance.\n   */\n  private static runtime?: IRuntime;\n}\n","import { Stage } from '../components/Stage';\nimport { TouchItem } from '../components/TouchItem';\nimport { IRuntime, LoadTask } from './Runtime';\n\n/**\n * A IRuntime implementation for web page runs inside browser.\n */\nexport class WebpageRuntime implements IRuntime {\n  /**\n   * A canvas object cache contains released canvas objects.\n   */\n  private canvasCache: HTMLCanvasElement[] = [];\n\n  /**\n   * Returns an offscreen canvas object from cache if cache is not empty or creates a new one.\n   */\n  public newCanvas(): HTMLCanvasElement {\n    if (this.canvasCache.length > 0) {\n      return this.canvasCache.shift();\n    } else {\n      return document.createElement('canvas');\n    }\n  }\n\n  /**\n   * Release an offscreen canvas object, put it into cache.\n   * @param canvas an offscreen canvas object to be released.\n   */\n  public releaseCanvas(canvas: HTMLCanvasElement) {\n    // TODO: check the cache to see if the canvas is already been released.\n    this.canvasCache.push(canvas);\n  }\n\n  /**\n   * Create an image object.\n   */\n  public newImage(): HTMLImageElement {\n    return new Image();\n  }\n\n  /**\n   * Execute a load raw content task.\n   * @param task The load raw content task to be executed.\n   */\n  public loadArrayBuffer(task: LoadTask<ArrayBuffer>) {\n    this.loadByType(task, 'arraybuffer');\n  }\n\n  /**\n   * Execute a load text content task.\n   * @param task The load text content task to be executed.\n   */\n  public loadText(task: LoadTask<string>) {\n    this.loadByType(task, 'text');\n  }\n\n  /**\n   * Execute a load content task with specified response type.\n   * @param task The load task to be executed.\n   */\n  private loadByType(task: LoadTask<any>, type: XMLHttpRequestResponseType) {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = type;\n    xhr.open(task.method || 'GET', task.url, true);\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        task.onLoad(xhr.response);\n      }\n    };\n\n    xhr.onerror = event => {\n      task.onError(event);\n    };\n\n    xhr.onprogress = event => {\n      if (event.lengthComputable) {\n        task.onProgress({\n          loadedBytes: event.loaded,\n          totalBytes: event.total\n        });\n      }\n    };\n    xhr.send();\n  }\n\n  /**\n   * Execute a load image task.\n   * @param task The load image task to be executed.\n   */\n  public loadImage(task: LoadTask<HTMLImageElement>) {\n    if (!task.allowOrigin) {\n      this.loadImageByImageObject(task);\n      return;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.open(task.method || 'GET', task.url, true);\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        const url = URL.createObjectURL(xhr.response);\n        const image = new Image();\n        image.src = url;\n        image.onload = () => {\n          URL.revokeObjectURL(url);\n          task.onLoad(image);\n        };\n        image.onerror = e => {\n          URL.revokeObjectURL(url);\n          task.onError(e);\n        };\n      }\n    };\n\n    xhr.onerror = event => {\n      task.onError(event);\n    };\n\n    xhr.onprogress = event => {\n      if (event.lengthComputable) {\n        task.onProgress({\n          loadedBytes: event.loaded,\n          totalBytes: event.total\n        });\n      }\n    };\n    xhr.send();\n  }\n\n  /**\n   * Execute a load image task by creating image object.\n   * @param task The load image task to be executed.\n   */\n  private loadImageByImageObject(task: LoadTask<HTMLImageElement>) {\n    const img = new Image();\n    img.onload = () => {\n      task.onLoad(img);\n    }\n    img.onerror = e => {\n      task.onError(e);\n    }\n    img.src = task.url;\n  }\n\n  /**\n   * Add mouse and touch events for the Stage instance.\n   * @param stage The target Stage instance to be added event handlers.\n   */\n  public enableEvents(stage: Stage) {\n    stage.canvas.onpointerdown = e => {\n      stage.canvas.setPointerCapture(e.pointerId);\n    };\n    stage.canvas.onpointerup = e => {\n      stage.canvas.releasePointerCapture(e.pointerId);\n    };\n    stage.canvas.addEventListener('mousedown', (e: any) => {\n      this.handleMouseEvent('mousedown', stage, e);\n    });\n    stage.canvas.addEventListener('mousemove', (e: any) => {\n      this.handleMouseEvent('mousemove', stage, e);\n    });\n    stage.canvas.addEventListener('pressmove', (e: any) => {\n      this.handleMouseEvent('mousemove', stage, e);\n    });\n    stage.canvas.addEventListener('mouseup', (e: any) => {\n      this.handleMouseEvent('mouseup', stage, e);\n    });\n    stage.canvas.addEventListener('mouseenter', (e: any) => {\n      this.handleMouseEvent('mouseenter', stage, e);\n    });\n    stage.canvas.addEventListener('mouseleave', (e: any) => {\n      this.handleMouseEvent('mouseleave', stage, e);\n    });\n    stage.canvas.addEventListener('mousewheel', (e: any) => {\n      this.handleMouseWheelEvent(stage, e);\n    });\n    stage.canvas.addEventListener('touchstart', (e: any) => {\n      this.handleTouchEvent('touchstart', stage, e);\n    });\n    stage.canvas.addEventListener('touchend', (e: any) => {\n      this.handleTouchEvent('touchend', stage, e);\n    });\n    stage.canvas.addEventListener('touchmove', (e: any) => {\n      this.handleTouchEvent('touchmove', stage, e);\n    });\n    stage.canvas.addEventListener('touchcancel', (e: any) => {\n      this.handleTouchEvent('touchcancel', stage, e);\n    });\n  }\n\n  /**\n   * Calls window.requestAnimationFrame to request a callback at next animation time.\n   * @param listener The callback function.\n   */\n  public requestAnimationFrame(listener: (time: number) => void) {\n    requestAnimationFrame(listener);\n  }\n\n  /**\n   * Handles mouse event, translate the coordinate to stage space and send to stage instance.\n   * @param type Type of the mouse event.\n   * @param stage The stage to receive this event.\n   * @param e The native mouse event.\n   */\n  private handleMouseEvent(type: string, stage: Stage, e: any) {\n    e.preventDefault();\n    const scaleX = stage.canvas.width / stage.canvas.clientWidth;\n    const scaleY = stage.canvas.height / stage.canvas.clientHeight;\n    // Translate to multiple touch event\n    const x = e.offsetX * scaleX;\n    const y = e.offsetY * scaleY;\n    stage.handleMouseOrTouchEvent(type, [new TouchItem(0, stage, x, y, Date.now())], e);\n  }\n\n  /**\n   * Handles mouse wheel event, translate the coordinate to stage space and send to stage instance.\n   * @param type Type of the mouse event.\n   * @param stage The stage to receive this event.\n   * @param e The native mouse event.\n   */\n  private handleMouseWheelEvent(stage: Stage, e: any) {\n    e.preventDefault();\n    const scaleX = stage.canvas.width / stage.canvas.clientWidth;\n    const scaleY = stage.canvas.height / stage.canvas.clientHeight;\n    stage.handleMouseWheelEvent(e.offsetX * scaleX, e.offsetY * scaleY, e.deltaX, e.deltaY, e);\n  }\n\n  /**\n   * Handles touch event, translate the coordinates of multiple touches to stage space and send to\n   * stage instance.\n   * @param type Type of the touch event.\n   * @param stage The stage to receive this event.\n   * @param e The native touch event.\n   */\n  private handleTouchEvent(type: string, stage: Stage, e: any) {\n    e.preventDefault();\n    const scaleX = stage.canvas.width / stage.canvas.clientWidth;\n    const scaleY = stage.canvas.height / stage.canvas.clientHeight;\n    const touches = [];\n    const now = Date.now();\n    for (const touch of e.touches) {\n      touches.push(\n        new TouchItem(touch.identifier, stage, touch.clientX * scaleX, touch.clientY * scaleY, now)\n      );\n    }\n    stage.handleMouseOrTouchEvent(type, touches, e);\n  }\n}\n","import { Stage } from '../components/Stage';\nimport { TouchItem } from '../components/TouchItem';\nimport { URLUtils } from '../utils/URLUtils';\nimport { IRuntime, LoadTask } from './Runtime';\n\n/**\n * A IRuntime implementation for wechat mini game.\n */\nexport class WechatMiniGameRuntime implements IRuntime {\n  /**\n   * The global game canvas.\n   */\n  private gameCanvas: HTMLCanvasElement;\n  /**\n   * The object contains system info like screen size, etc.\n   * See https://developers.weixin.qq.com/minigame/dev/api/base/system/system-info/wx.getSystemInfoSync.html\n   */\n  private systemInfo: WXSystemInfo;\n  /**\n   * A canvas object cache contains released canvas objects.\n   */\n  protected canvasCache: HTMLCanvasElement[] = [];\n\n  /**\n   * Creates a WechatMiniGameRuntime object and gets system info.\n   */\n  constructor() {\n    this.systemInfo = wx.getSystemInfoSync();\n  }\n\n  /**\n   * Returns an offscreen canvas object from cache if cache is not empty or creates a new one.\n   */\n  public newCanvas(): HTMLCanvasElement {\n    if (!this.gameCanvas) {\n      this.gameCanvas = wx.createCanvas();\n    }\n    if (this.canvasCache.length > 0) {\n      return this.canvasCache.shift();\n    }\n    return wx.createCanvas();\n  }\n\n  /**\n   * Release an offscreen canvas object, put it into cache.\n   * @param canvas an offscreen canvas object to be released.\n   */\n  public releaseCanvas(canvas: HTMLCanvasElement) {\n    this.canvasCache.push(canvas);\n  }\n\n  /**\n   * Create an image object.\n   */\n  public newImage(): HTMLImageElement {\n    return wx.createImage();\n  }\n\n  /**\n   * Execute a load text content task.\n   * 1. If the source of content is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * content, please note that you must whitelist the domain for your wechat mini game app.\n   * @param task The load text content task to be executed.\n   */\n  public loadText(task: LoadTask<string>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      wx.request({\n        url: task.url,\n        method: task.method || 'GET',\n        responseType: 'text',\n        success: (res: any) => {\n          task.onLoad(res.data);\n        },\n        fail: (error: any) => {\n          task.onError(error);\n        }\n      });\n    } else {\n      wx.getFileSystemManager().readFile({\n        filePath: task.url,\n        encoding: 'utf-8',\n        success: (e: any) => {\n          task.onLoad(e.data);\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n    }\n  }\n\n  /**\n   * Execute a load raw content task.\n   * 1. If the source of content is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * content, please note that you must whitelist the domain for your wechat mini game app.\n   * @param task The load raw content task to be executed.\n   */\n  public loadArrayBuffer(task: LoadTask<ArrayBuffer>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      wx.request({\n        url: task.url,\n        method: task.method || 'GET',\n        responseType: 'arraybuffer',\n        success: (res: any) => {\n          task.onLoad(res.data);\n        },\n        fail: (error: any) => {\n          task.onError(error);\n        }\n      });\n    } else {\n      wx.getFileSystemManager().readFile({\n        filePath: task.url,\n        success: (e: any) => {\n          task.onLoad(e.data);\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n    }\n  }\n\n  /**\n   * Execute a load image task.\n   * 1. If the source of image is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * image, please note that you must whitelist the domain for your wechat mini game app.\n   * @param task The load image task to be executed.\n   */\n  public loadImage(task: LoadTask<HTMLImageElement>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      const downloader = wx.downloadFile({\n        url: task.url,\n        success: (res: any) => {\n          if (res.statusCode === 200) {\n            const img = this.newImage();\n            img.src = res.tempFilePath;\n            img.onload = () => {\n              task.onLoad(img);\n            };\n            img.onerror = (e: any) => {\n              task.onError(e);\n            };\n          } else {\n            task.onError({ msg: 'download failed, code:' + res.statusCode });\n          }\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n      downloader.onProgressUpdate = (event: any) => {\n        task.onProgress({\n          loadedBytes: event.totalBytesWritten,\n          totalBytes: event.totalBytesExpectedToWrite\n        });\n      };\n    } else {\n      const img = this.newImage();\n      img.src = task.url;\n      img.onload = () => {\n        task.onLoad(img);\n      };\n      img.onerror = (e: any) => {\n        task.onError(e);\n      };\n    }\n  }\n\n  /**\n   * Returns the game canvas, it is the first created canvas.\n   */\n  public getGameCanvas(): HTMLCanvasElement {\n    if (!this.gameCanvas) {\n      this.gameCanvas = wx.createCanvas();\n    }\n    return this.gameCanvas;\n  }\n\n  /**\n   * Add touch events for the Stage instance.\n   * @param stage The target Stage instance to be added event handlers.\n   */\n  public enableEvents(stage: Stage) {\n    wx.onTouchStart((e: any) => {\n      this.handleTouchEvent('touchstart', stage, e);\n    });\n    wx.onTouchMove((e: any) => {\n      this.handleTouchEvent('touchmove', stage, e);\n    });\n    wx.onTouchEnd((e: any) => {\n      this.handleTouchEvent('touchend', stage, e);\n    });\n    wx.onTouchCancel((e: any) => {\n      this.handleTouchEvent('touchcancel', stage, e);\n    });\n  }\n\n  /**\n   * Calls wechat global requestAnimationFrame api to request a callback at next animation time.\n   * @param listener The callback function.\n   */\n  public requestAnimationFrame(listener: (time: number) => void) {\n    requestAnimationFrame(listener);\n  }\n\n  /**\n   * Handles touch event, translate the coordinates of multiple touches to stage space and send to\n   * stage instance.\n   * @param type Type of the touch event.\n   * @param stage The stage to receive this event.\n   * @param e The native touch event.\n   */\n  private handleTouchEvent(type: string, stage: Stage, e: any) {\n    const scaleX = stage.canvas.width / this.systemInfo.windowWidth;\n    const scaleY = stage.canvas.height / this.systemInfo.windowHeight;\n    const touches = [];\n    const now = Date.now();\n    for (const touch of e.touches) {\n      touches.push(\n        new TouchItem(touch.identifier, stage, touch.clientX * scaleX, touch.clientY * scaleY, now)\n      );\n    }\n    stage.handleMouseOrTouchEvent(type, touches, e);\n  }\n}\n","import { Stage } from '../components/Stage';\nimport { TouchItem } from '../components/TouchItem';\nimport { URLUtils } from '../utils/URLUtils';\nimport { IRuntime, LoadTask } from './Runtime';\n\n/**\n * A IRuntime implementation for wechat mini program.\n *\n * **Things you need to know:**\n * 1. The default size of canvas in wechat mini program is 300x150, which is not the actual size,\n * you need to set the size and ratio by yourself\n * 1. the api to create offscreen canvas and image object is defined at Canvas class, you need to\n * pass a wx canvas to Runtime to make it work.\n * 1. Seems wechat mini program does not support bind event programmatically, you need to bind\n * event in <canvas> element, and call handleTouchEvent instead.\n *\n * Checkout the mini program demo here: https://developers.weixin.qq.com/s/eo87vimV7DgU\n */\nexport class WechatMiniProgramRuntime implements IRuntime {\n  private wxCanvas: any;\n  /**\n   * A canvas object cache contains released canvas objects.\n   */\n  protected canvasCache: HTMLCanvasElement[] = [];\n\n  setWxCanvas(wxCanvas: any) {\n    this.wxCanvas = wxCanvas;\n  }\n\n  /**\n   * Returns an offscreen canvas object from cache if cache is not empty or creates a new one.\n   */\n  public newCanvas(): HTMLCanvasElement {\n    if (this.canvasCache.length > 0) {\n      return this.canvasCache.shift();\n    }\n    return wx.createOffscreenCanvas();\n  }\n\n  /**\n   * Release an offscreen canvas object, put it into cache.\n   * @param canvas an offscreen canvas object to be released.\n   */\n  public releaseCanvas(canvas: HTMLCanvasElement) {\n    this.canvasCache.push(canvas);\n  }\n\n  /**\n   * Create an image object.\n   */\n  public newImage(): HTMLImageElement {\n    return this.wxCanvas.createImage();\n  }\n\n  /**\n   * Execute a load text content task.\n   * 1. If the source of content is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * content, please note that you must whitelist the domain for your wechat mini program app.\n   * @param task The load text content task to be executed.\n   */\n  public loadText(task: LoadTask<string>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      wx.request({\n        url: task.url,\n        method: task.method || 'GET',\n        responseType: 'text',\n        success: (res: any) => {\n          task.onLoad(res.data);\n        },\n        fail: (error: any) => {\n          task.onError(error);\n        }\n      });\n    } else {\n      wx.getFileSystemManager().readFile({\n        filePath: task.url,\n        encoding: 'utf-8',\n        success: (e: any) => {\n          task.onLoad(e.data);\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n    }\n  }\n\n  /**\n   * Execute a load raw content task.\n   * 1. If the source of content is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * content, please note that you must whitelist the domain for your wechat mini program app.\n   * @param task The load raw content task to be executed.\n   */\n  public loadArrayBuffer(task: LoadTask<ArrayBuffer>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      wx.request({\n        url: task.url,\n        method: task.method || 'GET',\n        responseType: 'arraybuffer',\n        success: (res: any) => {\n          task.onLoad(res.data);\n        },\n        fail: (error: any) => {\n          task.onError(error);\n        }\n      });\n    } else {\n      wx.getFileSystemManager().readFile({\n        filePath: task.url,\n        success: (e: any) => {\n          task.onLoad(e.data);\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n    }\n  }\n\n  /**\n   * Execute a load image task.\n   * 1. If the source of image is a relative path, uses wechat file system api to read the file.\n   * 1. If the source is an absolute url, use wechat network api to file a http request to get the\n   * image, please note that you must whitelist the domain for your wechat mini program app.\n   * @param task The load image task to be executed.\n   */\n  public loadImage(task: LoadTask<HTMLImageElement>) {\n    if (URLUtils.isAbsolute(task.url)) {\n      const downloader = wx.downloadFile({\n        url: task.url,\n        success: (res: any) => {\n          if (res.statusCode === 200) {\n            const img = this.newImage();\n            img.src = res.tempFilePath;\n            img.onload = () => {\n              task.onLoad(img);\n            };\n            img.onerror = (e: any) => {\n              task.onError(e);\n            };\n          } else {\n            task.onError({ msg: 'download failed, code:' + res.statusCode });\n          }\n        },\n        fail: (e: any) => {\n          task.onError(e);\n        }\n      });\n      downloader.onProgressUpdate = (event: any) => {\n        task.onProgress({\n          loadedBytes: event.totalBytesWritten,\n          totalBytes: event.totalBytesExpectedToWrite\n        });\n      };\n    } else {\n      const img = this.newImage();\n      img.src = task.url;\n      img.onload = () => {\n        task.onLoad(img);\n      };\n      img.onerror = (e: any) => {\n        task.onError(e);\n      };\n    }\n  }\n\n  /**\n   * Add touch events for the Stage instance.\n   * Seems wechat mini program does not support bind event programmatically, you need to bind event\n   * in <canvas> element, and call handleTouchEvent instead, for example:\n   *\n   * in wxml file\n   * ```html\n   * <canvas type='2d'\n   *         bindtouchstart='ontouchstart'\n   *         bindtouchmove='ontouchmove'\n   *         bindtouchend='ontouchend'\n   *         bindtouchcancel='ontouchcancel'\n   * ></canvas>\n   * ```\n   *\n   * in js file\n   * ```javascript\n   *   ontouchstart: function(e) {\n   *     createts.Runtime.get().handleTouchEvent('touchstart', this.data.stage, e);\n   *   },\n   *\n   *   ontouchmove: function(e) {\n   *     createts.Runtime.get().handleTouchEvent('touchmove', this.data.stage, e);\n   *   },\n   *\n   *   ontouchend: function(e) {\n   *     createts.Runtime.get().handleTouchEvent('touchend', this.data.stage, e);\n   *   },\n   *\n   *   ontouchcancel: function(e) {\n   *     createts.Runtime.get().handleTouchEvent('touchcancel', this.data.stage, e);\n   *   },\n   * ```\n   *\n   * @param stage The target Stage instance to be added event handlers.\n   */\n  public enableEvents(stage: Stage) {\n    return;\n  }\n\n  /**\n   * Calls wechat global requestAnimationFrame api to request a callback at next animation time.\n   * @param listener The callback function.\n   */\n  public requestAnimationFrame(listener: (time: number) => void) {\n    this.wxCanvas.requestAnimationFrame(listener);\n  }\n\n  /**\n   * Handles touch event, translate the coordinates of multiple touches to stage space and send to\n   * stage instance.\n   * @param type Type of the touch event.\n   * @param stage The stage to receive this event.\n   * @param e The native touch event.\n   */\n  public handleTouchEvent(type: string, stage: Stage, e: any) {\n    const scaleX = stage.canvas.clientWidth ? stage.canvas.width / stage.canvas.clientWidth : 1;\n    const scaleY = stage.canvas.clientHeight ? stage.canvas.height / stage.canvas.clientHeight : 1;\n    const touches = [];\n    const now = Date.now();\n    for (const touch of e.touches) {\n      touches.push(new TouchItem(touch.identifier, stage, touch.x * scaleX, touch.y * scaleY, now));\n    }\n    stage.handleMouseOrTouchEvent(type, touches, e);\n  }\n}\n","export * from './Runtime';\nexport * from './WebpageRuntime';\nexport * from './WechatMiniGameRuntime';\nexport * from './WechatMiniProgramRuntime';\n","import { BaseValue, BaseValueUnit } from '../base/BaseValue';\nimport { Color } from '../base/Color';\nimport { Rect } from '../base/Rect';\nimport { RoundRect } from '../base/RoundRect';\nimport { XObject } from '../components/XObject';\nimport { CSSTokenizer } from '../parser/CSSTokenizer';\nimport { FunctionParser } from '../parser/FunctionParser';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { Runtime } from '../runtime/Runtime';\nimport { EnumUtils } from '../utils/EnumUtils';\n\n/**\n * The global tokenizer to split background tokens.\n */\nconst BG_TOKENIZER = new CSSTokenizer('/');\n\n/**\n * The BackgroundAttachment property sets whether a background image's position is fixed within the\n * viewport, or scrolls with its containing block, see:\n * https://developer.mozilla.org/en-US/docs/Web/CSS/background-attachment\n *\n * Currently we only support SCROLL.\n */\nexport enum BackgroundAttachment {\n  SCROLL = 'scroll'\n}\n\ninterface IBgAttribute<T> {\n  clone(): T;\n}\n\n/**\n * The background-image property sets one or more background images on an element.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/background-image\n * Currently we only support image and linear-gradient(beta).\n */\ninterface IBackgroundImage extends IBgAttribute<IBackgroundImage> {\n  getSource(width: number, height: number): any;\n  toString(): string;\n  destroy(): void;\n}\n\n/**\n * The URLSource class implements IBackgroundImage for url function, for example:\n *\n * ```css\n * background-image: url('sample.png');\n * ```\n *\n * The URLSource instance holds the image url and ask ResourceRegistry to download the image form\n * this url and provide it as background image.\n */\nclass URLSource implements IBackgroundImage {\n  /**\n   * Creates an URLSource instance from url(<image path>) function.\n   * @param args The arguments of url function.\n   * @returns an URLSource instance hold this url.\n   */\n  public static of(args: string[]): URLSource {\n    return new URLSource(args[0]);\n  }\n\n  /**\n   * Image url.\n   */\n  private url: string;\n\n  /**\n   * Construct an URLSource instance with image url.\n   * @param url image url.\n   */\n  constructor(url: string) {\n    this.url = url;\n    ResourceRegistry.DefaultInstance.add(url, ResourceType.IMAGE);\n  }\n\n  /**\n   * Returns a drawable object for drawing by the specified with and height.\n   * @param width The required width.\n   * @param height The required height.\n   * @returns The image instance of this url if it is loaded.\n   */\n  public getSource(width: number, height: number): any {\n    return ResourceRegistry.DefaultInstance.get(this.url);\n  }\n\n  /**\n   * Returns a string representation of this object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `url(${this.url})`;\n  }\n\n  /**\n   * Creates a new URLSource with the same image path.\n   * @returns a clone of this instance.\n   */\n  public clone(): IBackgroundImage {\n    return new URLSource(this.url);\n  }\n\n  /**\n   * A callback function to destroy current instance.\n   */\n  public destroy() {\n    return;\n  }\n}\n\n/**\n * The LinearGradientSource class implements IBackgroundImage for linear-gradient function, for\n * example:\n *\n * ```css\n * background-image: linear-gradient('sample.png');\n * ```\n *\n * see: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient\n */\nclass LinearGradientSource implements IBackgroundImage {\n  /**\n   * Create a LinearGradientSource instance form augments of linear-gradient function.\n   * @param value the arguments of linear-gradient function.\n   * @returns LinearGradientSource instance with given arguments.\n   */\n  public static of(args: string[]): LinearGradientSource {\n    return new LinearGradientSource(args);\n  }\n\n  /**\n   * the arguments of linear-gradient function.\n   */\n  private parameters: string[];\n  /**\n   * The cached canvas with images defined in linear-gradient function.\n   */\n  private canvas?: HTMLCanvasElement;\n  /**\n   * Create a LinearGradientSource instance form augments of linear-gradient function.\n   * @param value the arguments of linear-gradient function.\n   */\n  constructor(value: string[]) {\n    this.parameters = value;\n  }\n\n  /**\n   * Returns a drawable instance (canvas) for the specified size.\n   * @param width Specified drawable width.\n   * @param height Specified drawable height.\n   * @returns A canvas with given size and drawn by the linear-gradient function.\n   */\n  public getSource(width: number, height: number) {\n    if (this.parameters.length === 0) {\n      return undefined;\n    }\n    width = Math.round(width);\n    height = Math.round(height);\n    if (this.canvas && this.canvas.width === width && this.canvas.height === height) {\n      return this.canvas;\n    }\n    if (!this.canvas) {\n      this.canvas = Runtime.get().newCanvas();\n    }\n    if (this.canvas.width !== width) {\n      this.canvas.width = width;\n    }\n    if (this.canvas.height !== height) {\n      this.canvas.height = height;\n    }\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      return undefined;\n    }\n\n    let i = 0;\n    let gradient;\n    if (this.parameters[0].startsWith('to')) {\n      const where = this.parameters[0].substring(2).replace(/\\s+/g, '');\n      if (where === 'left') {\n        gradient = ctx.createLinearGradient(width - 1, 0, 0, 0);\n      } else if (where === 'right') {\n        gradient = ctx.createLinearGradient(0, 0, width - 1, 0);\n      } else if (where === 'top') {\n        gradient = ctx.createLinearGradient(0, height - 1, 0, 0);\n      } else if (where === 'bottom') {\n        gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n      } else if (where === 'lefttop') {\n        gradient = ctx.createLinearGradient(width - 1, height - 1, 0, 0);\n      } else if (where === 'leftbottom') {\n        gradient = ctx.createLinearGradient(width - 1, 0, 0, height - 1);\n      } else if (where === 'righttop') {\n        gradient = ctx.createLinearGradient(0, height - 1, width - 1, 0);\n      } else if (where === 'rightbottom') {\n        gradient = ctx.createLinearGradient(0, 0, width - 1, height - 1);\n      } else {\n        gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n      }\n      i++;\n    } else if (this.parameters[0].endsWith('deg')) {\n      // TODO: calculate by deg\n      // const deg = parseFloat(this.parameters[0]);\n      // const r = Math.sqrt(width * width / 4 + height * height * 4);\n      // const x = r * Math.\n      gradient = ctx.createLinearGradient(0, 0, width - 1, height - 1);\n      i++;\n    }\n\n    if (!gradient) {\n      gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n    }\n\n    for (let last = -1; i < this.parameters.length; ++i) {\n      const parts = this.parameters[i].split(/\\s+/);\n      const color = parts[0];\n      if (parts.length < 2) {\n        if (last === -1) {\n          last = 0;\n          gradient.addColorStop(0, color);\n        } else {\n          let next = 1;\n          let size = 0;\n          for (let j = i + 1; j < this.parameters.length; ++j) {\n            ++size;\n            const ps = this.parameters[j].split(/\\s+/);\n            if (ps.length > 1) {\n              next = parseFloat(ps[1]) / 100;\n              break;\n            }\n          }\n          if (size === 0) {\n            last = 1;\n          } else {\n            last = last + (next - last) / (size + 1);\n          }\n          gradient.addColorStop(last, color);\n        }\n      } else {\n        for (let j = 1; j < parts.length; ++j) {\n          last = parseFloat(parts[j]) / 100;\n          gradient.addColorStop(last, color);\n        }\n      }\n    }\n\n    // Set the fill style and draw a rectangle\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n\n    return this.canvas;\n  }\n\n  /**\n   * Returns a string representation of this object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `linear-gradient(${this.parameters.join(',')})`;\n  }\n\n  /**\n   * Creates a new LinearGradientSource with the same arguments.\n   * @returns a clone of this instance.\n   */\n  public clone(): IBackgroundImage {\n    return new LinearGradientSource(this.parameters);\n  }\n\n  /**\n   * A callback function to destroy current instance.\n   */\n  public destroy() {\n    if (this.canvas) {\n      Runtime.get().releaseCanvas(this.canvas);\n      this.canvas = undefined;\n    }\n  }\n}\n\n/**\n * The background-repeat type for horizontal and vertical axes.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat\n */\nexport enum BackgroundRepeatType {\n  REPEAT = 'repeat',\n  NO_REPEAT = 'no-repeat',\n  SPACE = 'space',\n  ROUND = 'round'\n}\n\n/**\n * The background-repeat property sets how background images are repeated. A background image can\n * be repeated along the horizontal and vertical axes, or not repeated at all.\n */\nclass BackgroundRepeat implements IBgAttribute<BackgroundRepeat> {\n  /**\n   * The default instance of BackgroundRepeat, repeat at both axes.\n   */\n  public static DEFAULT = new BackgroundRepeat(\n    BackgroundRepeatType.REPEAT,\n    BackgroundRepeatType.REPEAT\n  );\n\n  /**\n   * Convert the tokens to an BackgroundRepeat instance.\n   * @param tokens the tokens present BackgroundRepeat.\n   * @returns a BackgroundRepeat instance presents these tokens.\n   */\n  public static of(tokens: string[]): BackgroundRepeat | undefined {\n    // See: https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat\n    if (tokens.length === 1) {\n      const token = tokens[0];\n      if (token === 'repeat-x') {\n        return new BackgroundRepeat(BackgroundRepeatType.REPEAT, BackgroundRepeatType.NO_REPEAT);\n      } else if (token === 'repeat-y') {\n        return new BackgroundRepeat(BackgroundRepeatType.NO_REPEAT, BackgroundRepeatType.REPEAT);\n      } else if (token === 'repeat') {\n        return new BackgroundRepeat(BackgroundRepeatType.REPEAT, BackgroundRepeatType.REPEAT);\n      } else if (token === 'space') {\n        return new BackgroundRepeat(BackgroundRepeatType.SPACE, BackgroundRepeatType.SPACE);\n      } else if (token === 'round') {\n        return new BackgroundRepeat(BackgroundRepeatType.ROUND, BackgroundRepeatType.ROUND);\n      } else if (token === 'no-repeat') {\n        return new BackgroundRepeat(BackgroundRepeatType.NO_REPEAT, BackgroundRepeatType.NO_REPEAT);\n      } else {\n        return undefined;\n      }\n    } else if (tokens.length === 2) {\n      const x = EnumUtils.fromStringOrUndefined<BackgroundRepeatType>(\n        BackgroundRepeatType,\n        tokens[0]\n      );\n      const y = EnumUtils.fromStringOrUndefined<BackgroundRepeatType>(\n        BackgroundRepeatType,\n        tokens[1]\n      );\n      if (!x || !y) {\n        return undefined;\n      }\n      return new BackgroundRepeat(x, x);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * The repeat type of horizontal axes.\n   */\n  readonly x: BackgroundRepeatType;\n  /**\n   * The repeat type of vertical axes.\n   */\n  readonly y: BackgroundRepeatType;\n\n  /**\n   * Creates an BackgroundRepeat instance repeat type of both horizontal and vertical axes.\n   * @param x The repeat type of horizontal axes.\n   * @param y The repeat type of vertical axes.\n   */\n  constructor(x: BackgroundRepeatType, y: BackgroundRepeatType) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Creates a new BackgroundRepeat instance with the same repeat type of both horizontal and\n   * vertical axes.\n   * @returns a clone of this instance.\n   */\n  public clone(): BackgroundRepeat {\n    return new BackgroundRepeat(this.x, this.y);\n  }\n}\n\n/**\n * The background-clip property sets whether an element's background extends underneath its border\n * box, padding box, or content box.\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip\n */\nexport enum BackgroundClip {\n  BORDER_BOX = 'border-box',\n  PADDING_BOX = 'padding-box',\n  CONTENT_BOX = 'content-box'\n}\n\n/**\n * The background-size type for horizontal and vertical axes.\n */\nexport enum BackgroundSizeType {\n  AUTO = 'auto',\n  COVER = 'cover',\n  CONTAIN = 'contain',\n  VALUE = 'value'\n}\n\n/**\n * The background-size property sets the size of the element's background image. The image can be\n * left to its natural size, stretched, or constrained to fit the available space.\n * See: https://developer.mozilla.org/en-US/docs/Web/CSS/background-size\n */\nclass BackgroundSize implements IBgAttribute<BackgroundSize> {\n  /**\n   * The default value of background size.\n   */\n  public static DEFAULT = new BackgroundSize(\n    BackgroundSizeType.AUTO,\n    BaseValue.ZERO,\n    BackgroundSizeType.AUTO,\n    BaseValue.ZERO\n  );\n\n  /**\n   * Convert the tokens to an BackgroundSize instance.\n   * @param tokens the tokens present BackgroundSize.\n   * @returns a BackgroundSize instance presents these tokens.\n   */\n  public static of(tokens: string[]): BackgroundSize | undefined {\n    let xType;\n    let x = BaseValue.ZERO;\n    let yType;\n    let y = BaseValue.ZERO;\n    if (tokens.length === 1) {\n      const token = tokens[0];\n      if (token === 'auto') {\n        xType = yType = BackgroundSizeType.AUTO;\n      } else if (token === 'cover') {\n        xType = yType = BackgroundSizeType.COVER;\n      } else if (token === 'contain') {\n        xType = yType = BackgroundSizeType.CONTAIN;\n      } else {\n        x = y = BaseValue.of(token);\n        if (!y) return undefined;\n      }\n    } else if (tokens.length === 2) {\n      if (tokens[0] === 'auto') {\n        xType = BackgroundSizeType.AUTO;\n      } else {\n        xType = BackgroundSizeType.VALUE;\n        x = BaseValue.of(tokens[0], true);\n        if (!x) return undefined;\n      }\n      if (tokens[1] === 'auto') {\n        yType = BackgroundSizeType.AUTO;\n      } else {\n        yType = BackgroundSizeType.VALUE;\n        y = BaseValue.of(tokens[1], true);\n        if (!y) return undefined;\n      }\n    } else {\n      return undefined;\n    }\n    return new BackgroundSize(xType, x, yType, y);\n  }\n\n  /**\n   * The background size type of horizontal axe.\n   */\n  readonly xType: BackgroundSizeType;\n  /**\n   * The background size type of vertical axe.\n   */\n  readonly yType: BackgroundSizeType;\n  /**\n   * The background size of horizontal axe.\n   */\n  readonly x: BaseValue;\n  /**\n   * The background size of vertical axe.\n   */\n  readonly y: BaseValue;\n\n  /**\n   * Creates a BackgroundSize instance with specified type and value in both horizontal and\n   * vertical axes.\n   * @param xType The background size type of horizontal axes.\n   * @param x The background size of horizontal axes.\n   * @param yType The background size type of vertical axes.\n   * @param y The background size of vertical axes.\n   */\n  constructor(xType: BackgroundSizeType, x: BaseValue, yType: BackgroundSizeType, y: BaseValue) {\n    this.x = x;\n    this.xType = xType;\n    this.y = y;\n    this.yType = yType;\n  }\n\n  /**\n   * Creates a new BackgroundSize with the same type and value of both horizontal and vertical axes.\n   * @returns a clone of this instance.\n   */\n  public clone(): BackgroundSize {\n    return new BackgroundSize(this.xType, this.x.clone(), this.yType, this.y.clone());\n  }\n}\n\n/**\n * The background-position type for horizontal and vertical axes.\n */\nenum BackgroundPositionType {\n  LEFT = 'left',\n  TOP = 'top',\n  CENTER = 'center',\n  BOTTOM = 'bottom',\n  RIGHT = 'right'\n}\n\n/**\n * The background-position property sets the initial position for each background image. The\n * position is relative to the position layer set by background-origin.\n */\nclass BackgroundPosition implements IBgAttribute<BackgroundPosition> {\n  /**\n   * The default value of background-position, it is in left-top cornor.\n   */\n  public static DEFAULT = new BackgroundPosition(\n    BackgroundPositionType.LEFT,\n    BaseValue.ZERO,\n    BackgroundPositionType.TOP,\n    BaseValue.ZERO\n  );\n\n  /**\n   * Checks a token is a valid background-position token.\n   * @param token The token need to be checked.\n   * @returns True if it is a valid background-position token, false otherwise.\n   */\n  public static acceptToken(token: string): boolean {\n    const pattern = /^(left|center|right|top|bottom|[0-9\\.]+|[0-9\\.]+px|[0-9\\.]+%)$/;\n    return pattern.test(token);\n  }\n\n  /**\n   * Convert the tokens to an BackgroundPosition instance.\n   * @param tokens the tokens present BackgroundPosition.\n   * @returns a BackgroundPosition instance presents these tokens.\n   */\n  public static of(tokens: string[]): BackgroundPosition | undefined {\n    let xDir;\n    let yDir;\n    let x;\n    let y;\n\n    // 1-value syntax: the value may be:\n    // The keyword value center, which centers the image.\n    // One of the keyword values top, left, bottom, right. This specifies an edge against which to\n    // place the item. The other dimension is then set to 50%, so the item is placed in the middle\n    // of the edge specified.\n    // A <length> or <percentage>. This specifies the X coordinate relative to the left edge, with\n    // the Y coordinate set to 50%.\n    if (tokens.length === 1) {\n      const token = tokens[0];\n      x = BaseValue.ZERO;\n      y = BaseValue.ZERO;\n      if (token === 'left' || token === 'right') {\n        xDir = token;\n        yDir = BackgroundPositionType.CENTER;\n      }\n      if (token === 'top' || token === 'bottom') {\n        xDir = BackgroundPositionType.CENTER;\n        yDir = token;\n      }\n      if (token === 'center') {\n        xDir = BackgroundPositionType.CENTER;\n        yDir = BackgroundPositionType.CENTER;\n      } else {\n        xDir = BackgroundPositionType.LEFT;\n        x = BaseValue.of(token);\n        yDir = BackgroundPositionType.CENTER;\n      }\n    }\n\n    // 2-value syntax: one value defines X and the other defines Y. Each value may be:\n    // One of the keyword values top, left, bottom, right. If left or right are given here, then\n    // this defines X and the other given value defines Y. If top or bottom are given, then this\n    // defines Y and the other value defines X.\n    // A <length> or <percentage>. If the other value is left or right, then this value defines Y,\n    // relative to the top edge. If the other value is top or bottom, then this value defines X,\n    // relative to the left edge. If both values are <length> or <percentage> values, then the\n    // first defines X and the second Y.\n    // Note that: If one value is top or bottom, then the other value may not be top or bottom.\n    // If one value is left or right, then the other value may not be left or right. This means,\n    // e.g., that top top and left right are not valid.\n    // The default value is top left or 0% 0%.\n    else if (tokens.length === 2) {\n      let tokenX = tokens[0];\n      let tokenY = tokens[1];\n      if (tokenX === 'top' || tokenX === 'bottom' || tokenY === 'left' || tokenY === 'right') {\n        tokenX = tokens[1];\n        tokenY = tokens[0];\n      }\n\n      if (tokenX === 'left' || tokenX === 'right' || tokenX === 'center') {\n        xDir = tokenX;\n        x = BaseValue.ZERO;\n      } else {\n        xDir = BackgroundPositionType.LEFT;\n        x = BaseValue.of(tokenX);\n        if (!x) {\n          return undefined;\n        }\n      }\n      if (tokenY === 'top' || tokenY === 'bottom' || tokenY === 'center') {\n        yDir = tokenY;\n        y = BaseValue.ZERO;\n      } else {\n        yDir = BackgroundPositionType.TOP;\n        y = BaseValue.of(tokenY);\n        if (!y) {\n          return undefined;\n        }\n      }\n    }\n\n    // 3-value syntax: Two values are keyword values, and the third is the offset for the preceding\n    // value:\n    // The first value is one of the keyword values top, left, bottom, right, or center. If left or\n    // right are given here, then this defines X. If top or bottom are given, then this defines Y\n    // and the other keyword value defines X.\n    // The <length> or <percentage> value, if it is the second value, is the offset for the first\n    // value. If it is the third value, it is the offset for the second value.\n    // The single length or percentage value is an offset for the keyword value that precedes it.\n    // The combination of one keyword with two <length> or <percentage> values is not valid.\n    else if (tokens.length === 3) {\n      if (tokens[0] === 'left' || tokens[0] === 'right') {\n        xDir = tokens[0];\n        x = BaseValue.of(tokens[1]);\n        if (x) {\n          if (tokens[2] === 'top' || tokens[2] === 'bottom' || tokens[2] === 'center') {\n            yDir = tokens[2];\n            y = BaseValue.ZERO;\n          } else {\n            return undefined;\n          }\n        } else {\n          x = BaseValue.ZERO;\n          if (tokens[1] === 'top' || tokens[1] === 'bottom' || tokens[1] === 'center') {\n            yDir = tokens[1];\n            y = BaseValue.of(tokens[2]);\n            if (!y) return undefined;\n          } else {\n            return undefined;\n          }\n        }\n      } else if (tokens[0] === 'top' || tokens[0] === 'bottom') {\n        yDir = tokens[0];\n        y = BaseValue.of(tokens[1]);\n        if (y) {\n          if (tokens[2] === 'left' || tokens[2] === 'right' || tokens[2] === 'center') {\n            xDir = tokens[2];\n            x = BaseValue.ZERO;\n          } else {\n            return undefined;\n          }\n        } else {\n          y = BaseValue.ZERO;\n          if (tokens[1] === 'left' || tokens[1] === 'right' || tokens[1] === 'center') {\n            xDir = tokens[1];\n            x = BaseValue.of(tokens[2]);\n            if (!x) return undefined;\n          } else {\n            return undefined;\n          }\n        }\n      }\n    }\n    // 4-value syntax: The first and third values are keyword value defining X and Y. The second\n    // and fourth values are offsets for the preceding X and Y keyword values:\n    // The first value and third values one of the keyword values top, left, bottom, right. If left\n    // or right are given here, then this defines X. If top or bottom are given, then this defines\n    // Y and the other keyword value defines X.\n    // The second and fourth values are <length> or <percentage> values. The second value is the\n    // offset for the first keyword. The fourth value is the offset for the second keyword.\n    else if (tokens.length === 4) {\n      if (tokens[0] === 'left' || tokens[0] === 'right') {\n        xDir = tokens[0];\n        x = BaseValue.of(tokens[1]);\n        yDir = tokens[2];\n        y = BaseValue.of(tokens[3]);\n      } else if (tokens[0] === 'top' || tokens[0] === 'bottom') {\n        xDir = tokens[2];\n        x = BaseValue.of(tokens[3]);\n        yDir = tokens[0];\n        y = BaseValue.of(tokens[1]);\n      }\n      if (\n        !x ||\n        !y ||\n        (xDir !== 'left' && xDir !== 'right') ||\n        (yDir !== 'top' && yDir !== 'bottom')\n      ) {\n        return undefined;\n      }\n    } else {\n      return undefined;\n    }\n    return new BackgroundPosition(\n      xDir as BackgroundPositionType,\n      x,\n      yDir as BackgroundPositionType,\n      y\n    );\n  }\n\n  readonly xDir: BackgroundPositionType;\n  readonly yDir: BackgroundPositionType;\n  readonly x: BaseValue;\n  readonly y: BaseValue;\n\n  constructor(\n    xDir: BackgroundPositionType,\n    x: BaseValue,\n    yDir: BackgroundPositionType,\n    y: BaseValue\n  ) {\n    this.xDir = xDir;\n    this.x = x;\n    this.yDir = yDir;\n    this.y = y;\n  }\n\n  /**\n   * Creates a new BackgroundPosition with the same type and value of both horizontal and vertical\n   * axes.\n   * @returns a clone of this instance.\n   */\n  public clone(): BackgroundPosition {\n    return new BackgroundPosition(this.xDir, this.x.clone(), this.yDir, this.y.clone());\n  }\n}\n\n/**\n * The background shorthand property sets all background style properties at once, such as color,\n * image, origin and size, or repeat method.\n * See: https://developer.mozilla.org/en-US/docs/Web/CSS/background\n */\nexport class Background {\n  /**\n   * Parse a string format background definition to a background instance.\n   * See the definition at https://developer.mozilla.org/en-US/docs/Web/CSS/background\n   *\n   * @param value Input string to be parsed.\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns A Background instance of valid data, undefined otherwise.\n   */\n  public static of(value: string, silent = false): Background | undefined {\n    const parts = this.split(value);\n    const bg = new Background();\n\n    for (const part of parts) {\n      let attachment: BackgroundAttachment;\n      let image: IBackgroundImage;\n      let repeat: BackgroundRepeat;\n      let clip: BackgroundClip;\n      let origin: BackgroundClip;\n      let size: BackgroundSize;\n      let position: BackgroundPosition;\n      const blendMode = '';\n\n      const tokens = BG_TOKENIZER.tokenize(part);\n      for (let i = 0; i < tokens.length; ++i) {\n        const token = tokens[i];\n\n        // The <box> value may be included zero, one, or two times. If included once, it sets both\n        // background-origin and background-clip. If it is included twice, the first occurrence\n        // sets background-origin, and the second sets background-clip.\n        const box: BackgroundClip | undefined = EnumUtils.fromStringOrUndefined(\n          BackgroundClip,\n          token\n        );\n        if (box) {\n          if (!clip) {\n            clip = box;\n          } else if (!origin) {\n            origin = box;\n          } else {\n            if (!silent) {\n              console.warn(\n                'invalid background:' + value + '\\n<box> value appears 3 times in one layer'\n              );\n            }\n            return undefined;\n          }\n          continue;\n        }\n\n        // Checks attachment.\n        const parsedAttachment: BackgroundAttachment | undefined = EnumUtils.fromStringOrUndefined(\n          BackgroundAttachment,\n          token\n        );\n        if (parsedAttachment) {\n          if (attachment) {\n            if (!silent) {\n              console.warn(\n                'invalid background:' + value + '\\n<attachment> value appears twice in one layer'\n              );\n            }\n            return undefined;\n          }\n          attachment = parsedAttachment;\n          continue;\n        }\n\n        // Checks position & size.\n        // The <bg-size> value may only be included immediately after <position>, separated with\n        // the '/' character, like this: \"center/80%\".\n        if (BackgroundPosition.acceptToken(token)) {\n          if (position) {\n            if (!silent) {\n              console.warn(\n                'invalid background:' + value + '\\n<position> value appears twice in one layer'\n              );\n            }\n            return undefined;\n          }\n          const positionTokens = [token];\n          for (++i; i < tokens.length; ++i) {\n            if (BackgroundPosition.acceptToken(tokens[i])) {\n              positionTokens.push(tokens[i]);\n            } else {\n              break;\n            }\n          }\n          position = BackgroundPosition.of(positionTokens);\n          if (!position) {\n            if (!silent) {\n              console.warn('invalid background:' + value + '\\nbad <position> value');\n            }\n            return undefined;\n          }\n          if (i < tokens.length && tokens[i] === '/') {\n            if (i + 2 < tokens.length) {\n              size = BackgroundSize.of([tokens[i + 1], tokens[i + 2]]);\n              if (size) {\n                i += 2;\n              } else {\n                size = BackgroundSize.of([tokens[i + 1]]);\n                if (size) {\n                  ++i;\n                }\n              }\n            } else if (i + 1 < tokens.length) {\n              size = BackgroundSize.of([tokens[i + 1]]);\n              if (size) {\n                ++i;\n              }\n            }\n            if (!size) {\n              if (!silent) {\n                console.warn('invalid background:' + value + '\\nbad <size> value');\n              }\n              return undefined;\n            }\n          } else {\n            --i;\n          }\n          continue;\n        }\n\n        // Checks repeat\n        let parsedRepeat;\n        if (i + 1 < tokens.length) {\n          parsedRepeat = BackgroundRepeat.of([tokens[i], tokens[i + 1]]);\n          if (parsedRepeat) {\n            i += 1;\n          } else {\n            parsedRepeat = BackgroundRepeat.of([tokens[i]]);\n          }\n        } else {\n          parsedRepeat = BackgroundRepeat.of([tokens[i]]);\n        }\n        if (parsedRepeat) {\n          if (repeat) {\n            if (!silent) {\n              console.warn(\n                'invalid background:' + value + '\\n<repeat> value appears twice in one layer'\n              );\n            }\n            return undefined;\n          } else {\n            repeat = parsedRepeat;\n          }\n          continue;\n        }\n\n        // Checks image\n        const parsedImage = this.parseImage(token);\n        if (parsedImage) {\n          if (image) {\n            if (!silent) {\n              console.warn(\n                'invalid background:' + value + '\\n<image> value appears twice in one layer'\n              );\n            }\n            return undefined;\n          } else {\n            image = parsedImage;\n          }\n          continue;\n        }\n\n        // Checks color\n        const color = Color.of(token);\n        if (color) {\n          if (bg.color) {\n            if (!silent) {\n              console.warn('invalid background:' + value + '\\n<color> value appears twice');\n            }\n            return undefined;\n          }\n          bg.color = color;\n          continue;\n        }\n\n        if (!silent) {\n          console.warn('invalid background:' + value + '\\nunknown token:' + token);\n        }\n        return undefined;\n      }\n\n      if (!image) {\n        continue;\n      }\n\n      bg.image.push(image);\n      bg.attachment.push(attachment || BackgroundAttachment.SCROLL);\n      bg.repeat.push(repeat || BackgroundRepeat.DEFAULT);\n      bg.clip.push(clip || BackgroundClip.CONTENT_BOX);\n      bg.origin.push(origin || BackgroundClip.PADDING_BOX);\n      bg.size.push(size || BackgroundSize.DEFAULT);\n      bg.position.push(position || BackgroundPosition.DEFAULT);\n      bg.blendMode.push(blendMode);\n    }\n    return bg;\n  }\n\n  /**\n   * Try to parse a string to a BackgroundImage instance.\n   * @param value A string presents image attribute.\n   * @returns A BackgroundImage instance for a valid definition, undefined otherwise.\n   */\n  private static parseImage(value: string): IBackgroundImage | undefined {\n    const func = FunctionParser.parse(value, true);\n    if (!func) {\n      return undefined;\n    }\n    switch (func.name) {\n      case 'url':\n        return URLSource.of(func.arguments);\n      case 'linear-gradient':\n        return LinearGradientSource.of(func.arguments);\n    }\n    return undefined;\n  }\n\n  /**\n   * The Background property supports multiple layers, this function is used to split layers from a\n   * string.\n   * @param value A string to be split.\n   * @returns A list of split strings.\n   */\n  private static split(value: string): string[] {\n    const result: string[] = [];\n    let begin = 0;\n    let inBrackets = false;\n    const size = value.length;\n    for (let i = 0; i < size; ++i) {\n      const ch = value[i];\n      if (inBrackets) {\n        if (ch === ')') {\n          inBrackets = false;\n        }\n      } else if (ch === '(') {\n        inBrackets = true;\n      } else if (ch === ',') {\n        if (begin < i) {\n          const part = value.substring(begin, i).trim();\n          if (part) {\n            result.push(part);\n          }\n        }\n        begin = i + 1;\n      }\n    }\n    if (begin < size) {\n      const part = value.substring(begin).trim();\n      if (part) {\n        result.push(part);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Shadow copy the elements from one list to the other.\n   * @param src The source list to be copied.\n   * @param dest The destination list to hold the elements from source list.\n   */\n  private static copyArray<T>(src: T[], dest: T[]) {\n    for (const item of src) {\n      dest.push(item);\n    }\n  }\n\n  /**\n   * Deep copy the elements from one list to the other.\n   * @param src The source list to be copied.\n   * @param dest The destination list to hold the elements from source list.\n   */\n  private static cloneArray<T>(src: (IBgAttribute<T> | undefined)[], dest: (T | undefined)[]) {\n    for (const item of src) {\n      if (!item) {\n        dest.push(undefined);\n      } else {\n        dest.push(item.clone());\n      }\n    }\n  }\n\n  /**\n   * Get an element from a list with specified position, if the position is out of the range,\n   * returns a default value.\n   * @param arr The source list.\n   * @param idx The position in the list to be retrieved.\n   * @param defaultVal Default value for invalid position.\n   * @returns an element in the list with specified position, or default value for invalid\n   * position.\n   */\n  private static getFromArray<T>(arr: T[], idx: number, defaultVal: T) {\n    return idx >= arr.length ? defaultVal : arr[idx];\n  }\n\n  /**\n   * The color property sets the background color of an element. It is rendered behind any\n   * background-image that is specified, although the color will still be visible through any\n   * transparency in the image.\n   */\n  public color?: Color;\n  /**\n   * A list of BackgroundAttachment definition for multiple layers.\n   */\n  public attachment: BackgroundAttachment[] = [];\n  /**\n   * A list of IBackgroundImage definition for multiple layers.\n   */\n  public image: IBackgroundImage[] = [];\n  /**\n   * A list of BackgroundRepeat definition for multiple layers.\n   */\n  public repeat: BackgroundRepeat[] = [];\n  /**\n   * A list of BackgroundClip definition for multiple layers.\n   */\n  public clip: BackgroundClip[] = [];\n  /**\n   * A list of BackgroundOrigin definition for multiple layers.\n   * Note: clip and origin are use same enum definition.\n   */\n  public origin: BackgroundClip[] = [];\n  /**\n   * A list of BackgroundSize definition for multiple layers.\n   */\n  public size: BackgroundSize[] = [];\n  /**\n   * A list of BackgroundPosition definition for multiple layers.\n   */\n  public position: BackgroundPosition[] = [];\n  /**\n   * A list of BlendMode definition for multiple layers.\n   */\n  public blendMode: string[] = [];\n\n  /**\n   * Set the color property by a string.\n   * @param value A string presents color.\n   */\n  public setColor(value: string | Color) {\n    this.color = value instanceof Color ? value : Color.of(value);\n  }\n\n  /**\n   * Set the <background-attachment> property by a string.\n   * @param value A string presents single <background-attachment> or a list of\n   * <background-attachment> for multiple layers.\n   */\n  public setAttachment(value: string) {\n    const parts = Background.split(value);\n    this.attachment.length = 0;\n    for (const _ of parts) {\n      // TODO: support others later.\n      this.attachment.push(BackgroundAttachment.SCROLL);\n    }\n  }\n\n  /**\n   * Set the <background-image> property by a string.\n   * @param value A string presents single <background-image> or a list of\n   * <background-image> for multiple layers.\n   */\n  public setImage(value: string) {\n    const parts = Background.split(value);\n    this.image.length = 0;\n    for (const part of parts) {\n      this.image.push(Background.parseImage(part));\n    }\n  }\n\n  /**\n   * Set the <blend-mode> property by a string.\n   * @param value A string presents single <blend-mode> or a list of <blend-mode> for multiple\n   * layers.\n   */\n  public setBlendMode(value: string) {\n    const parts = Background.split(value);\n    this.blendMode.length = 0;\n    for (const part of parts) {\n      this.blendMode.push(part);\n    }\n  }\n\n  /**\n   * Set the <background-repeat> property by a string.\n   * @param value A string presents single <background-repeat> or a list of <background-repeat> for\n   * multiple layers.\n   */\n  public setRepeat(value: string) {\n    const parts = Background.split(value);\n    this.repeat.length = 0;\n    for (const part of parts) {\n      const repeat = BackgroundRepeat.of(BG_TOKENIZER.tokenize(part)) || BackgroundRepeat.DEFAULT;\n      this.repeat.push(repeat);\n    }\n  }\n\n  /**\n   * Set the <background-clip> property by a string.\n   * @param value A string presents single <background-clip> or a list of <background-clip> for\n   * multiple layers.\n   */\n  public setClip(value: string) {\n    const parts = Background.split(value);\n    this.clip.length = 0;\n    for (const part of parts) {\n      const clip = EnumUtils.fromString<BackgroundClip>(\n        BackgroundClip,\n        part,\n        BackgroundClip.BORDER_BOX\n      );\n      this.clip.push(clip);\n    }\n  }\n\n  /**\n   * Set the <background-origin> property by a string.\n   * @param value A string presents single <background-origin> or a list of <background-origin> for\n   * multiple layers.\n   */\n  public setOrigin(value: string) {\n    const parts = Background.split(value);\n    this.origin.length = 0;\n    for (const part of parts) {\n      const origin = EnumUtils.fromString<BackgroundClip>(\n        BackgroundClip,\n        part,\n        BackgroundClip.BORDER_BOX\n      );\n      this.origin.push(origin);\n    }\n  }\n\n  /**\n   * Set the <background-size> property by a string.\n   * @param value A string presents single <background-size> or a list of <background-size> for\n   * multiple layers.\n   */\n  public setSize(value: string) {\n    const parts = Background.split(value);\n    this.size.length = 0;\n    for (const part of parts) {\n      const size = BackgroundSize.of(BG_TOKENIZER.tokenize(part)) || BackgroundSize.DEFAULT;\n      this.size.push(size);\n    }\n  }\n\n  /**\n   * Set the <background-position> property by a string.\n   * @param value A string presents single <background-position> or a list of\n   * <background-position> for multiple layers.\n   */\n  public setPosition(value: string) {\n    const parts = Background.split(value);\n    this.position.length = 0;\n    for (const part of parts) {\n      const position =\n        BackgroundPosition.of(BG_TOKENIZER.tokenize(part)) || BackgroundPosition.DEFAULT;\n      this.position.push(position);\n    }\n  }\n\n  /**\n   * Draw the background of an element.\n   * @param target The target element.\n   * @param ctx The canvas rendering context of stage canvas.\n   * @param outerRect The pre-calculated outer round rect of the element.\n   * @param innerRect The pre-calculated inner round rect of the element.\n   */\n  public draw(\n    target: XObject,\n    ctx: CanvasRenderingContext2D,\n    outerRect: RoundRect,\n    innerRect: RoundRect\n  ) {\n    // TODO: support blend mode\n\n    // Color only.\n    if (this.image.length === 0 && this.color && this.color.a > 0) {\n      ctx.fillStyle = this.color.toString();\n      let rect: Rect;\n      const clip: BackgroundClip = Background.getFromArray(this.clip, 0, BackgroundClip.BORDER_BOX);\n      switch (clip) {\n        case BackgroundClip.PADDING_BOX:\n          rect = target.getPaddingRect();\n          break;\n        case BackgroundClip.CONTENT_BOX:\n          rect = target.getContentRect();\n          break;\n        default:\n          rect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n      if (clip === BackgroundClip.BORDER_BOX) {\n        outerRect.clip(ctx);\n      } else {\n        innerRect.clip(ctx);\n      }\n      ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      return;\n    }\n\n    for (let i = this.image.length - 1; i >= 0; --i) {\n      const source = this.image[i];\n      if (!source) {\n        continue;\n      }\n      const origin = Background.getFromArray(this.origin, i, BackgroundClip.BORDER_BOX);\n      let originRect;\n      switch (origin) {\n        case BackgroundClip.PADDING_BOX: {\n          originRect = target.getPaddingRect();\n          break;\n        }\n        case BackgroundClip.CONTENT_BOX: {\n          originRect = target.getContentRect();\n          break;\n        }\n        default:\n          originRect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n\n      if (originRect.width < 1 || originRect.height < 1) {\n        continue;\n      }\n\n      const img = source.getSource(originRect.width, originRect.height);\n      if (!img) {\n        continue;\n      }\n\n      let clipRect;\n      const clip = Background.getFromArray(this.clip, i, BackgroundClip.BORDER_BOX);\n      switch (clip) {\n        case BackgroundClip.PADDING_BOX: {\n          clipRect = target.getPaddingRect();\n          break;\n        }\n        case BackgroundClip.CONTENT_BOX: {\n          clipRect = target.getContentRect();\n          break;\n        }\n        default:\n          clipRect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n      if (clip === BackgroundClip.BORDER_BOX) {\n        outerRect.clip(ctx);\n      } else {\n        innerRect.clip(ctx);\n      }\n      // Draw color\n      if (this.color && i === this.image.length - 1) {\n        ctx.fillStyle = this.color.toString();\n        ctx.fillRect(clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n      }\n\n      const srcWidth = img.width;\n      const srcHeight = img.height;\n      let scaledWidth = srcWidth;\n      let scaledHeight = srcHeight;\n      let destX = originRect.x;\n      let destY = originRect.y;\n\n      // Image size\n      const size = this.size.length > i ? this.size[i] : BackgroundSize.DEFAULT;\n      // Background size\n      if (size.xType === BackgroundSizeType.CONTAIN) {\n        const ratio = srcWidth / srcHeight;\n        if (ratio > originRect.width / originRect.height) {\n          scaledWidth = originRect.width;\n          scaledHeight = scaledWidth / ratio;\n        } else {\n          scaledHeight = originRect.height;\n          scaledWidth = scaledHeight * ratio;\n        }\n      } else if (size.xType === BackgroundSizeType.COVER) {\n        const ratio = srcWidth / srcHeight;\n        if (ratio < originRect.width / originRect.height) {\n          scaledWidth = originRect.width;\n          scaledHeight = scaledWidth / ratio;\n        } else {\n          scaledHeight = originRect.height;\n          scaledWidth = scaledHeight * ratio;\n        }\n      } else {\n        if (size.xType === BackgroundSizeType.VALUE) {\n          scaledWidth = size.x.getValue(originRect.width);\n        }\n        if (size.yType === BackgroundSizeType.VALUE) {\n          scaledHeight = size.y.getValue(originRect.height);\n        }\n      }\n\n      if (scaledWidth < 1 || scaledHeight < 1) {\n        continue;\n      }\n\n      let srcScaleX = scaledWidth / srcWidth;\n      let srcScaleY = scaledHeight / srcHeight;\n\n      // Repeat\n      let repeatX = BackgroundRepeatType.NO_REPEAT;\n      let repeatY = BackgroundRepeatType.NO_REPEAT;\n      if (this.repeat.length > i) {\n        repeatX = this.repeat[i].x;\n        repeatY = this.repeat[i].y;\n      }\n\n      let gapX = 0;\n      let gapY = 0;\n      if (repeatX === BackgroundRepeatType.SPACE) {\n        const count = Math.floor(originRect.width / scaledWidth);\n        if (count === 1) {\n          gapX = originRect.width;\n        } else {\n          gapX = (originRect.width - count * scaledWidth) / (count - 1);\n        }\n        destX = originRect.x;\n        while (destX > clipRect.x) {\n          destX -= gapX + scaledWidth;\n        }\n      } else if (repeatX === BackgroundRepeatType.ROUND) {\n        const count = Math.max(1, Math.floor(originRect.width / scaledWidth + 0.5));\n        scaledWidth = originRect.width / count;\n        srcScaleX = scaledWidth / srcWidth;\n        destX = originRect.x;\n        while (destX > clipRect.x) {\n          destX -= scaledWidth;\n        }\n      } else {\n        if (this.position.length > i) {\n          const position = this.position[i];\n          if (position.xDir === BackgroundPositionType.CENTER) {\n            destX += ((originRect.width - scaledWidth) * 50) / 100;\n          } else if (position.xDir === BackgroundPositionType.RIGHT) {\n            if (position.x.unit === BaseValueUnit.PERCENTAGE) {\n              destX += ((originRect.width - scaledWidth) * (100 - position.x.numberValue)) / 100;\n            } else {\n              destX += originRect.width - scaledWidth - position.x.numberValue;\n            }\n          } else {\n            if (position.x.unit === BaseValueUnit.PERCENTAGE) {\n              destX += ((originRect.width - scaledWidth) * position.x.numberValue) / 100;\n            } else {\n              destX += position.x.numberValue;\n            }\n          }\n        }\n        if (repeatX === BackgroundRepeatType.REPEAT) {\n          while (destX > clipRect.x) {\n            destX -= scaledWidth;\n          }\n        }\n      }\n\n      if (repeatY === BackgroundRepeatType.SPACE) {\n        const count = Math.floor(originRect.height / scaledHeight);\n        if (count === 1) {\n          gapY = originRect.height;\n        } else {\n          gapY = (originRect.height - count * scaledHeight) / (count - 1);\n        }\n        destY = originRect.y;\n        while (destY > clipRect.y) {\n          destY -= gapY + scaledHeight;\n        }\n      } else if (repeatY === BackgroundRepeatType.ROUND) {\n        const count = Math.max(1, Math.floor(originRect.height / scaledHeight + 0.5));\n        scaledHeight = originRect.height / count;\n        srcScaleY = scaledHeight / srcHeight;\n        destY = originRect.y;\n        while (destY > clipRect.y) {\n          destY -= scaledHeight;\n        }\n      } else {\n        if (this.position.length > i) {\n          const position = this.position[i];\n          if (position.yDir === BackgroundPositionType.CENTER) {\n            destY += ((originRect.height - scaledHeight) * 50) / 100;\n          } else if (position.yDir === BackgroundPositionType.BOTTOM) {\n            if (position.x.unit === BaseValueUnit.PERCENTAGE) {\n              destY += ((originRect.height - scaledHeight) * (100 - position.y.numberValue)) / 100;\n            } else {\n              destY += originRect.height - scaledHeight - position.y.numberValue;\n            }\n          } else {\n            if (position.y.unit === BaseValueUnit.PERCENTAGE) {\n              destY += ((originRect.height - scaledHeight) * position.y.numberValue) / 100;\n            } else {\n              destY += position.y.numberValue;\n            }\n          }\n        }\n        if (repeatY === BackgroundRepeatType.REPEAT) {\n          while (destY > clipRect.y) {\n            destY -= scaledHeight;\n          }\n        }\n      }\n\n      const clipBottom = clipRect.y + clipRect.height;\n      const clipRight = clipRect.x + clipRect.width;\n      do {\n        let x = destX;\n        do {\n          this.drawImage(\n            ctx,\n            img,\n            scaledWidth,\n            scaledHeight,\n            srcScaleX,\n            srcScaleY,\n            x,\n            destY,\n            clipRect\n          );\n          x += gapX + scaledWidth;\n        } while (x < clipRight && repeatX !== BackgroundRepeatType.NO_REPEAT);\n        destY += gapY + scaledHeight;\n      } while (destY < clipBottom && repeatY !== BackgroundRepeatType.NO_REPEAT);\n    }\n  }\n\n  /**\n   * Creates a new Background with the same properties.\n   * @returns a clone of this instance.\n   */\n  public clone(): Background {\n    const cloned = new Background();\n    cloned.color = this.color;\n    Background.copyArray(this.attachment, cloned.attachment);\n    Background.cloneArray(this.image, cloned.image);\n    Background.copyArray(this.blendMode, cloned.blendMode);\n    Background.copyArray(this.clip, cloned.clip);\n    Background.copyArray(this.origin, cloned.origin);\n    Background.cloneArray(this.repeat, cloned.repeat);\n    Background.cloneArray(this.size, cloned.size);\n    Background.cloneArray(this.position, cloned.position);\n    return cloned;\n  }\n\n  /**\n   * Draw an image to context with specified size, scale and destination in a clip area.\n   * @param ctx The canvas rendering context of stage canvas.\n   * @param img The image to draw.\n   * @param imgWidth The image width.\n   * @param imgHeight The image height.\n   * @param imageScaleX The horizontal scale of the image.\n   * @param imageScaleY The vertical scale of the image.\n   * @param destX The X destination position.\n   * @param destY The Y destination position.\n   * @param clip The clip area.\n   */\n  private drawImage(\n    ctx: CanvasRenderingContext2D,\n    img: HTMLImageElement,\n    imgWidth: number,\n    imgHeight: number,\n    imageScaleX: number,\n    imageScaleY: number,\n    destX: number,\n    destY: number,\n    clip: Rect\n  ) {\n    let srcX = 0;\n    let srcY = 0;\n    if (destX < clip.x) {\n      srcX = clip.x - destX;\n      destX = clip.x;\n    }\n    if (destY < clip.y) {\n      srcY = clip.y - destY;\n      destY = clip.y;\n    }\n    let srcWidth = imgWidth - srcX;\n    let srcHeight = imgHeight - srcY;\n    if (srcWidth + destX > clip.width + clip.x) {\n      srcWidth = clip.width + clip.x - destX;\n    }\n    if (srcHeight + destY > clip.height + clip.y) {\n      srcHeight = clip.height + clip.y - destY;\n    }\n    ctx.drawImage(\n      img,\n      srcX / imageScaleX,\n      srcY / imageScaleY,\n      srcWidth / imageScaleX,\n      srcHeight / imageScaleY,\n      destX,\n      destY,\n      srcWidth,\n      srcHeight\n    );\n  }\n}\n","import { IAnimatable } from '../animation/Animation';\nimport { Color } from '../base/Color';\n\n/**\n * Border styles, see\n * <a href='https://www.w3schools.com/css/css_border.asp'>https://www.w3schools.com/css/css_border.asp</a>\n *\n * Currently only supports 'solid'\n */\nexport enum BorderStyle {\n  SOLID = 'solid'\n}\n\n/**\n * A regular expression represents border definition.\n */\nconst BORDER_PATTERN = /^[\\s]*([^\\s]+)[\\s]+([\\w]+)[\\s]+(.*)$/;\n\n/**\n * This class represents an immutable border object contains width, style and color.\n */\nexport class Border implements IAnimatable<Border> {\n  /**\n   * Default border object with 0 border size.\n   */\n  public static readonly DEFAULT = new Border(0, BorderStyle.SOLID, Color.BLACK);\n\n  /**\n   * Convert a string to a Border object.\n   * @param value a string present border, the format is [width] [style] [color]\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns A border object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent = false): Border | undefined {\n    const pieces = value.match(BORDER_PATTERN);\n    if (!pieces) {\n      if (!silent) {\n        console.warn(`invalid border:${value}`);\n      }\n      return undefined;\n    }\n    const color = Color.of(pieces[3], silent);\n    if (!color) {\n      if (!silent) {\n        console.warn(`invalid border:${value}`);\n      }\n      return undefined;\n    }\n    return new Border(parseFloat(pieces[1]), BorderStyle.SOLID, color);\n  }\n\n  /**\n   * Specifies the width of the four borders.\n   */\n  public readonly width: number = 0;\n  /**\n   * Specifies what kind of border to display.\n   * Currently only support solid color.\n   */\n  public readonly style: BorderStyle = BorderStyle.SOLID;\n  /**\n   * Specifies the color of this border.\n   */\n  public readonly color: Color = Color.NONE;\n\n  /**\n   * Constructs and initializes a border object with given arguments of sRGB and alpha.\n   * @param width the width of the four borders.\n   * @param style what kind of border to display.\n   * @param color the color of this border.\n   */\n  constructor(width: number, style: BorderStyle, color: Color) {\n    this.width = width;\n    this.style = style;\n    this.color = color;\n  }\n\n  /**\n   * Returns a string representation of this Border object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `${this.width.toString()} ${this.style} ${this.color.toString()}`;\n  }\n\n  /**\n   * Checks whether two BaseValue Border are equal.\n   * The result is true if and only if the argument is a Border object that has the same width, style and color as this Rect.\n   * @param that the Object to compare with this Border object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Border): boolean {\n    return this.width === that.width && this.style === that.style && this.color.equals(that.color);\n  }\n\n  /**\n   * Returns true if this border instance takes affect.\n   * @returns true if the border instance takes affect; false otherwise.\n   */\n  public isEnable(): boolean {\n    return this.width > 0 && this.color.a > 0;\n  }\n\n  /**\n   * Creates a new Border with the same width, style and color as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Border {\n    return new Border(this.width, this.style, this.color.clone());\n  }\n\n  update(target: Border, progress: number): Border {\n    return new Border(\n      this.width + (target.width - this.width) * progress,\n      this.style,\n      this.color.update(target.color, progress)\n    );\n  }\n\n  convertFrom(src: any): Border {\n    const result = Border.of(src + '');\n    if (result === undefined) {\n      return new Border(0, BorderStyle.SOLID, Color.BLACK);\n    } else {\n      return result;\n    }\n  }\n\n  isAnimatable(): boolean {\n    return true;\n  }\n}\n","import { IAnimatable } from '../animation/Animation';\nimport { BaseValue } from '../base/BaseValue';\n\n/**\n * This class represents an immutable border object contains width, style and color.\n */\nexport class BorderRadius implements IAnimatable<BorderRadius> {\n  /**\n   * Convert a string to a BorderRadius object.\n   * @param value a string present border, the format is [first value] [second value], and second\n   * value is optional.\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns A BorderRadius object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string | number, silent = false): BorderRadius | undefined {\n    if (typeof value === 'number') {\n      return new BorderRadius(BaseValue.of(value));\n    } else {\n      const pieces = value.split(/\\s+/);\n      let value1: BaseValue | undefined;\n      let value2: BaseValue | undefined;\n      if (pieces.length === 1) {\n        value1 = value2 = BaseValue.of(pieces[0]);\n      } else if (pieces.length === 2) {\n        value1 = BaseValue.of(pieces[0]);\n        value2 = BaseValue.of(pieces[1]);\n      }\n      if (value1 && value2) {\n        return new BorderRadius(value1, value2);\n      } else {\n        if (!silent) {\n          console.warn(`invalid border:${value}`);\n        }\n        return undefined;\n      }\n    }\n  }\n\n  readonly value1: BaseValue;\n  readonly value2: BaseValue;\n\n  /**\n   * Constructs and initializes a BorderRadius object with given arguments of values.\n   * @param value1 the first value.\n   * @param value2 the second value.\n   */\n  constructor(value1: BaseValue, value2: BaseValue = value1) {\n    this.value1 = value1;\n    this.value2 = value2;\n  }\n\n  /**\n   * Returns a string representation of this BorderRadius object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `${this.value1.toString()} ${this.value2.toString()}`;\n  }\n\n  /**\n   * Creates a new BorderRadius with the same values as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): BorderRadius {\n    return new BorderRadius(this.value1, this.value2);\n  }\n\n  update(target: BorderRadius, progress: number): BorderRadius {\n    return new BorderRadius(\n      this.value1.update(target.value1, progress),\n      this.value2.update(target.value2, progress)\n    );\n  }\n\n  convertFrom(src: any): BorderRadius {\n    const result = BorderRadius.of(src + '');\n    if (result === undefined) {\n      return new BorderRadius(BaseValue.ZERO, BaseValue.ZERO);\n    } else {\n      return result;\n    }\n  }\n\n  isAnimatable(): boolean {\n    return true;\n  }\n}\n","import { Runtime } from '../runtime/Runtime';\nimport { DrawUtils } from '../utils/DrawUtils';\nimport { EnumUtils } from '../utils/EnumUtils';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { LineHeight } from './LineHeight';\n\nexport enum FontStyle {\n  NORMAL = 'normal',\n  ITALIC = 'italic',\n  OBLIQUE = 'oblique'\n}\n\nexport enum FontVariant {\n  NORMAL = 'normal',\n  SMALL_CAPS = 'small-caps'\n}\n\nexport enum FontWeight {\n  NORMAL = 'normal',\n  BOLD = 'bold',\n  BOLDER = 'bolder',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\n/**\n * A regular experssion represents font definition.\n */\nconst REG_PARTS = /(^|^.*\\s+)([0-9]+[a-z]+[^\\s]+)($|\\s+(.*)$)/;\n\n/**\n * This class represents a font object contains style, width, size, variant, line height and font family.\n */\nexport class Font {\n  /**\n   * The default font family, it is mutable\n   */\n  public static DEFAULT_FONT_FAMILY = 'sans-serif';\n\n  /**\n   * Convert a string to a Font object.\n   * @param value a string present font, see the definition here\n   * <a href='https://developer.mozilla.org/en-US/docs/Web/CSS/font'>\n   *   https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * </a>\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns A Font object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Font | undefined {\n    const matched = value.match(REG_PARTS);\n    if (!matched) {\n      if (!silent) {\n        console.warn(`invalid font:${value}`);\n      }\n      return undefined;\n    }\n    const font = new Font();\n    const styles = matched[1].split(/\\s+/);\n    for (let style of styles) {\n      style = style.toLowerCase();\n      if (style === 'normal') {\n        continue;\n      }\n      const fontStyle: FontStyle = EnumUtils.fromString<FontStyle>(\n        FontStyle,\n        style,\n        FontStyle.NORMAL\n      );\n      if (fontStyle !== FontStyle.NORMAL) {\n        font.style = fontStyle;\n        continue;\n      }\n      const fontWeight: FontWeight = EnumUtils.fromString<FontWeight>(\n        FontWeight,\n        style,\n        FontWeight.NORMAL\n      );\n      if (fontWeight !== FontWeight.NORMAL) {\n        font.weight = fontWeight;\n        continue;\n      }\n      const fontVariant: FontVariant = EnumUtils.fromString<FontVariant>(\n        FontVariant,\n        style,\n        FontVariant.NORMAL\n      );\n      if (fontVariant !== FontVariant.NORMAL) {\n        font.variant = fontVariant;\n        continue;\n      }\n    }\n\n    const sizes = matched[2].split(/\\//);\n    font.size = parseFloat(sizes[0]);\n    if (isNaN(font.size)) {\n      if (!silent) {\n        console.warn(`invalid font:${value}`);\n      }\n      return undefined;\n    }\n    if (sizes.length > 1) {\n      font.lineHeight = LineHeight.of(sizes[1], silent);\n      if (!font.lineHeight) {\n        if (!silent) {\n          console.warn(`invalid font:${value}`);\n        }\n        return undefined;\n      }\n    }\n    font.family = matched[3].trim();\n    return font;\n  }\n\n  /**\n   * The style property sets whether a font should be styled with a normal, italic, or oblique face from its\n   * font-family.\n   */\n  public style?: FontStyle;\n  /**\n   * The variant property is a shorthand for the longhand properties font-variant-caps, font-variant-numeric,\n   * font-variant-alternates, font-variant-ligatures, and font-variant-east-asian.\n   * Note: this is not supported yet.\n   */\n  public variant?: FontVariant;\n  /**\n   * The weight property sets the weight (or boldness) of the font. The weights available depend on the font-family\n   * you are using.\n   */\n  public weight?: FontWeight;\n  /**\n   * The size property sets the size of the font. This property is also used to compute the size of em, ex, and other\n   * relative <length> units.\n   */\n  public size: number;\n  /**\n   * The line-height property sets the height of a line box. It's commonly used to set the distance between lines of\n   * text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced\n   * inline elements, it specifies the height that is used to calculate line box height.\n   */\n  public lineHeight?: LineHeight;\n  /**\n   * The family property specifies a prioritized list of one or more font family names and/or generic family names for\n   * the selected element.\n   */\n  public family?: string;\n\n  /**\n   * Constructs and initializes a Font object with given arguments.\n   * @param style see style definition.\n   * @param variant see variant definition.\n   * @param weight see weight definition.\n   * @param size see size definition.\n   * @param lineHeight see lineHeight definition.\n   * @param family see family definition.\n   */\n  constructor(\n    style?: FontStyle,\n    variant?: FontVariant,\n    weight?: FontWeight,\n    size?: number,\n    lineHeight?: LineHeight,\n    family?: string\n  ) {\n    this.style = style || FontStyle.NORMAL;\n    this.variant = variant || FontVariant.NORMAL;\n    this.weight = weight || FontWeight.NORMAL;\n    this.size = size || 16;\n    this.lineHeight = lineHeight;\n    this.family = family;\n  }\n\n  /**\n   * Returns a string representation of this Font object.\n   * @returns a string representation of this object.\n   */\n  public toString() {\n    const font = [\n      this.style || FontStyle.NORMAL,\n      this.variant || FontVariant.NORMAL,\n      this.weight || FontWeight.NORMAL,\n      this.lineHeight ? this.size + 'px/' + this.lineHeight.toString() : this.size + 'px',\n      this.family || Font.DEFAULT_FONT_FAMILY\n    ];\n    return font.join(' ');\n  }\n\n  /**\n   * Calculate the text width with current font.\n   * @returns Width of text with current font.\n   */\n  public measureTextWidth(text: string) {\n    return LayoutUtils.measureTextWidth(text, this);\n  }\n\n  /**\n   * Creates a new Font with the same style, width, size, variant, line height and font family.\n   * @returns a clone of this instance.\n   */\n  public clone(): Font {\n    return new Font(this.style, this.variant, this.weight, this.size, this.lineHeight, this.family);\n  }\n}\n","export enum LineHeightType {\n  NORMAL = 0,\n  NUMBER = 1,\n  LENGTH = 2,\n  PERCENT = 3\n}\n\nconst REG_NUMBER = /^([0-9]*\\.?[0-9]*)$/;\nconst REG_LENGTH = /^([0-9]*\\.?[0-9]*)px$/i;\nconst REG_PERCENT = /^([0-9]*\\.?[0-9]*)%$/;\n\nexport class LineHeight {\n  public static of(value: string, silent: boolean = false): LineHeight | undefined {\n    value = value.toLowerCase();\n    if (value === 'normal') {\n      return new LineHeight(LineHeightType.NORMAL, 0);\n    } else if (REG_NUMBER.test(value)) {\n      return new LineHeight(LineHeightType.NUMBER, parseFloat(value));\n    } else if (REG_LENGTH.test(value)) {\n      return new LineHeight(LineHeightType.LENGTH, parseFloat(value));\n    } else if (REG_PERCENT.test(value)) {\n      return new LineHeight(LineHeightType.PERCENT, parseFloat(value));\n    }\n    if (!silent) {\n      console.warn(`invalid line height:${value}`);\n    }\n    return undefined;\n  }\n\n  readonly type: LineHeightType = LineHeightType.NORMAL;\n  readonly value: number = 0;\n\n  constructor(type: LineHeightType, value: number) {\n    this.type = type;\n    this.value = value;\n  }\n\n  public getValue(base: number): number {\n    switch (this.type) {\n      case LineHeightType.NORMAL:\n        return base * 1.2;\n      case LineHeightType.NUMBER:\n        return base * this.value;\n      case LineHeightType.LENGTH:\n        return this.value;\n      case LineHeightType.PERCENT:\n        return (this.value * base) / 100;\n    }\n  }\n\n  public toString() {\n    switch (this.type) {\n      case LineHeightType.NORMAL:\n        return 'normal';\n      case LineHeightType.NUMBER:\n        return this.value;\n      case LineHeightType.LENGTH:\n        return this.value + 'px';\n      case LineHeightType.PERCENT:\n        return this.value + '%';\n    }\n  }\n\n  public clone(): LineHeight {\n    return new LineHeight(this.type, this.value);\n  }\n}\n","import { IAnimatable } from '../animation/Animation';\nimport { Color } from '../base/Color';\nimport { CSSTokenizer } from '../parser/CSSTokenizer';\n\n/**\n * The shadow property adds shadow effects around an element's frame. A shadow is described by X\n * and Y offsets relative to the element, blur and color.\n *\n * Please note that wechat mini game does not support shadow.\n */\nexport class Shadow implements IAnimatable<Shadow> {\n  /**\n   * Specifies the color of the shadow.\n   */\n  public color: Color;\n  /**\n   * Specifies the X offset relative to the element.\n   */\n  public offsetX: number;\n  /**\n   * Specifies the Y offset relative to the element.\n   */\n  public offsetY: number;\n  /**\n   * Specifies the blur size.\n   */\n  public blur: number;\n\n  /**\n   * Convert a string to a Shadow object.\n   * @param value a string present a shadow object, the format is [X] [Y] [blur] [color].\n   * @param [silent] if true, ignore warning for an invalid value.\n   * @returns A Shadow object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Shadow | undefined {\n    const parts = new CSSTokenizer().tokenize(value);\n    if (parts.length !== 4) {\n      if (!silent) {\n        console.warn(`invalid shadow:${value}`);\n      }\n      return undefined;\n    }\n\n    const x = parseFloat(parts[0]);\n    const y = parseFloat(parts[1]);\n    const blur = parseFloat(parts[2]);\n    const color = Color.of(parts[3], silent);\n    if (isNaN(x) || isNaN(y) || isNaN(blur) || color === undefined) {\n      if (!silent) {\n        console.warn(`invalid shadow:${value}`);\n      }\n      return undefined;\n    }\n    return new Shadow(x, y, blur, color);\n  }\n\n  /**\n   * Constructs and initializes a shadow object with given arguments of X and Y offsets, blur and\n   * color.\n   * @param offsetX the x offset to this element.\n   * @param offsetY the y offset to this element.\n   * @param blur the blur size of this shadow.\n   * @param color the color of this shadow.\n   */\n  constructor(offsetX: number, offsetY: number, blur: number, color: Color) {\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.blur = blur;\n    this.color = color;\n  }\n\n  /**\n   * Returns a string representation of this Shadow object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `[Shadow (${this.color.toString()} ${this.offsetX} ${this.offsetY} ${this.blur})]`;\n  }\n\n  /**\n   * Creates a new Shadow with the same X and Y offsets, blur and color as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Shadow {\n    return new Shadow(this.offsetX, this.offsetY, this.blur, this.color);\n  }\n\n  /**\n   * Returns true if this shadow instance takes affect.\n   * @returns true if the shadow instance takes affect; false otherwise.\n   */\n  public isEnable(): boolean {\n    return this.color.a > 0 && (this.offsetX !== 0 || this.offsetY !== 0 || this.blur !== 0);\n  }\n\n  update(target: Shadow, progress: number): Shadow {\n    return new Shadow(\n      this.offsetX + (target.offsetX - this.offsetX) * progress,\n      this.offsetY + (target.offsetY - this.offsetY) * progress,\n      this.blur + (target.blur - this.blur) * progress,\n      this.color.update(target.color, progress)\n    );\n  }\n\n  convertFrom(src: any): Shadow {\n    const result = Shadow.of(src + '');\n    if (result === undefined) {\n      return new Shadow(0, 0, 0, Color.BLACK);\n    } else {\n      return result;\n    }\n  }\n\n  isAnimatable(): boolean {\n    return true;\n  }\n}\n","import {\n    AnimationProps, AnimationValues, AnimationValueType, IAnimatable, isIAnimatable\n} from '../animation/Animation';\nimport { BaseValue, BaseValueUnit } from '../base/BaseValue';\nimport { Color } from '../base/Color';\nimport { XObject } from '../components/XObject';\nimport { EnumUtils } from '../utils/EnumUtils';\nimport { StringUtils } from '../utils/StringUtils';\nimport { Background } from './Background';\nimport { Border } from './Border';\nimport { BorderRadius } from './BorderRadius';\nimport { Font, FontStyle, FontVariant, FontWeight } from './Font';\nimport { LineHeight } from './LineHeight';\nimport { Shadow } from './Shadow';\n\nexport enum BoxSizing {\n  CONTENT_BOX = 'content-box',\n  BORDER_BOX = 'border-box'\n}\n\nexport enum TextAlign {\n  LEFT = 'left',\n  RIGHT = 'right',\n  CENTER = 'center'\n}\n\nexport enum VerticalAlign {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  MIDDLE = 'middle'\n}\n\nexport enum Position {\n  STATIC = 'static',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n  FIXED = 'fixed'\n}\n\nexport enum Display {\n  INLINE = 'inline',\n  BLOCK = 'block',\n  NONE = 'none'\n}\n\nexport enum Overflow {\n  VISIBLE = 'visible',\n  HIDDEN = 'hidden'\n}\n\nexport enum TextBorderPosition {\n  OUTER = 'outer',\n  INNER = 'inner'\n}\n\nexport enum PointerEvents {\n  AUTO = 'auto',\n  /**\n   * Ignore pointer/touch/mouse events of current element and its children.\n   */\n  NONE = 'none',\n  /**\n   * Ignore pointer/touch/mouse events of current element but its children can still receive the\n   * events, also the event bubbled from children can be still received.\n   * Tips: it is not CSS standard.\n   */\n  CROSS = 'cross',\n  /**\n   * Stop pointer/touch/mouse events of current element passing down to its children.\n   * Tips: it is not CSS standard.\n   */\n  BLOCK = 'block'\n}\n\nexport enum Visibility {\n  VISIBLE = 'visible',\n  HIDDEN = 'hidden'\n}\n\nconst REG_ATTRS = /([^\\s:;]+)[\\s]*:[\\s]*([^;]+)/gm;\n\nexport class Style {\n  public static of(value: string): Style {\n    const style = new Style();\n    return style.apply(this.parse(value));\n  }\n\n  public static parse(value: string): { [key: string]: string } {\n    const attrs: { [key: string]: string } = {};\n    const matches = StringUtils.matchAll(value, REG_ATTRS);\n    for (const match of matches) {\n      attrs[match[1].toLowerCase()] = match[2];\n    }\n    return attrs;\n  }\n\n  public width?: BaseValue;\n  public minWidth?: BaseValue;\n  public maxWidth?: BaseValue;\n  public height?: BaseValue;\n  public minHeight?: BaseValue;\n  public maxHeight?: BaseValue;\n  public position: Position = Position.STATIC;\n  public display: Display = Display.INLINE;\n  public left?: BaseValue;\n  public right?: BaseValue;\n  public top?: BaseValue;\n  public bottom?: BaseValue;\n  public paddingTop?: BaseValue;\n  public paddingRight?: BaseValue;\n  public paddingBottom?: BaseValue;\n  public paddingLeft?: BaseValue;\n  public marginTop?: BaseValue;\n  public marginRight?: BaseValue;\n  public marginBottom?: BaseValue;\n  public marginLeft?: BaseValue;\n  public perspectiveOriginX: BaseValue = BaseValue.of('50%');\n  public perspectiveOriginY: BaseValue = BaseValue.of('50%');\n  public transformX: BaseValue = BaseValue.ZERO;\n  public transformY: BaseValue = BaseValue.ZERO;\n  public alpha: number = 1;\n  public rotation: number = 0;\n  public scaleX: number = 1;\n  public scaleY: number = 1;\n  public skewX: number = 0;\n  public skewY: number = 0;\n  public shadow?: Shadow;\n  public visibility: Visibility = Visibility.VISIBLE;\n  public background?: Background;\n  public boxSizing: BoxSizing = BoxSizing.CONTENT_BOX;\n  public color: Color = Color.BLACK;\n  public font?: Font;\n  public lineHeight?: LineHeight;\n  public textAlign?: TextAlign;\n  public verticalAlign?: VerticalAlign;\n\n  public borderTopLeftRadius?: BorderRadius;\n  public borderTopRightRadius?: BorderRadius;\n  public borderBottomLeftRadius?: BorderRadius;\n  public borderBottomRightRadius?: BorderRadius;\n\n  public borderTop?: Border;\n  public borderRight?: Border;\n  public borderBottom?: Border;\n  public borderLeft?: Border;\n  public overflow: Overflow = Overflow.VISIBLE;\n  public compositeOperation?: string;\n  public aspectRatio?: number;\n  public filter?: string;\n  public cursor?: string;\n  public pointerEvents: PointerEvents = PointerEvents.AUTO;\n\n  // Text style\n  public textBorder?: Border;\n  public textBorderPosition?: TextBorderPosition = TextBorderPosition.OUTER;\n  public textShadow?: Shadow;\n\n  apply(attrs: { [key: string]: string | number }): Style {\n    for (const k in attrs) {\n      const key = this.normalize(k);\n      const value = attrs[k] + '';\n      switch (key) {\n        case 'width':\n        case 'minWidth':\n        case 'maxWidth':\n        case 'height':\n        case 'minHeight':\n        case 'maxHeight':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'position':\n          this.position = EnumUtils.fromString<Position>(Position, value, Position.STATIC);\n          break;\n        case 'display':\n          this.display = EnumUtils.fromString<Display>(Display, value, Display.INLINE);\n          break;\n        case 'left':\n        case 'right':\n        case 'top':\n        case 'bottom':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'padding':\n          const paddings = Style.parse4Dirs(value);\n          if (paddings) {\n            this.paddingTop = paddings[0];\n            this.paddingRight = paddings[1];\n            this.paddingBottom = paddings[2];\n            this.paddingLeft = paddings[3];\n          }\n          break;\n        case 'paddingTop':\n        case 'paddingRight':\n        case 'paddingBottom':\n        case 'paddingLeft':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'margin':\n          const margins = Style.parse4Dirs(value);\n          if (margins) {\n            this.marginTop = margins[0];\n            this.marginRight = margins[1];\n            this.marginBottom = margins[2];\n            this.marginLeft = margins[3];\n          }\n          break;\n        case 'marginTop':\n        case 'marginRight':\n        case 'marginBottom':\n        case 'marginLeft':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'perspectiveOrigin': {\n          const pieces = value.split(/\\s+/);\n          if (pieces.length === 1) {\n            if (value === 'auto') {\n              this.perspectiveOriginX = BaseValue.of('50%');\n              this.perspectiveOriginY = BaseValue.of('50%');\n            } else {\n              this.perspectiveOriginX = BaseValue.of(value);\n              this.perspectiveOriginY = BaseValue.of(value);\n            }\n          } else if (pieces.length > 1) {\n            this.perspectiveOriginX =\n              pieces[0] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[0]);\n            this.perspectiveOriginY =\n              pieces[1] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[1]);\n          }\n          break;\n        }\n        case 'transform': {\n          const pieces = value.split(/\\s+/);\n          if (pieces.length === 1) {\n            if (value === 'auto') {\n              this.transformX = BaseValue.of('50%');\n              this.transformY = BaseValue.of('50%');\n            } else {\n              this.transformX = BaseValue.of(value);\n              this.transformY = BaseValue.of(value);\n            }\n          } else if (pieces.length > 1) {\n            this.transformX = pieces[0] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[0]);\n            this.transformY = pieces[1] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[1]);\n          }\n          break;\n        }\n        case 'perspectiveOriginX':\n        case 'perspectiveOriginY':\n        case 'transformX':\n        case 'transformY':\n          this[key] = value === 'auto' ? BaseValue.of('50%') : BaseValue.of(value);\n          break;\n        case 'scaleX':\n        case 'scaleY':\n        case 'skewX':\n        case 'skewY':\n        case 'alpha':\n        case 'aspectRatio':\n        case 'rotation': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            this[key] = numberValue;\n          }\n          break;\n        }\n        case 'scale': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            this.scaleX = this.scaleY = numberValue;\n          }\n          break;\n        }\n        case 'visibility':\n          this.visibility = EnumUtils.fromString<Visibility>(Visibility, value, Visibility.VISIBLE);\n          break;\n        case 'background':\n          this.background = Background.of(value);\n          break;\n        case 'backgroundClip':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setClip(value);\n          break;\n        case 'backgroundColor':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setColor(value);\n          break;\n        case 'backgroundAttachment':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setAttachment(value);\n          break;\n        case 'backgroundImage':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setImage(value);\n          break;\n        case 'backgroundRepeat':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setRepeat(value);\n          break;\n        case 'backgroundOrigin':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setOrigin(value);\n          break;\n        case 'backgroundSize':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setSize(value);\n          break;\n        case 'backgroundPosition':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setPosition(value);\n          break;\n        case 'boxSizing':\n          this.boxSizing = EnumUtils.fromString<BoxSizing>(BoxSizing, value, BoxSizing.CONTENT_BOX);\n          break;\n        case 'color': {\n          const color = Color.of(value);\n          if (color) {\n            this.color = color;\n          }\n          break;\n        }\n        case 'font':\n          this.font = Font.of(value);\n          break;\n        case 'fontFamily':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.family = value;\n          break;\n        case 'fontWeight':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.weight = EnumUtils.fromString<FontWeight>(FontWeight, value, FontWeight.NORMAL);\n          break;\n        case 'fontStyle':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.style = EnumUtils.fromString<FontStyle>(FontStyle, value, FontStyle.NORMAL);\n          break;\n        case 'fontVariant':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.variant = EnumUtils.fromString<FontVariant>(\n            FontVariant,\n            value,\n            FontVariant.NORMAL\n          );\n          break;\n        case 'fontSize': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            if (!this.font) {\n              this.font = new Font();\n            }\n            this.font.size = numberValue;\n          }\n          break;\n        }\n        case 'lineHeight':\n          this.lineHeight = LineHeight.of(value);\n          break;\n        case 'textAlign':\n          this.textAlign = EnumUtils.fromStringOrUndefined<TextAlign>(TextAlign, value);\n          break;\n        case 'verticalAlign':\n          this.verticalAlign = EnumUtils.fromStringOrUndefined<VerticalAlign>(VerticalAlign, value);\n          break;\n        case 'borderRadius':\n          {\n            const borderRadius = Style.parseBorderRadius(value);\n            if (borderRadius) {\n              this.borderTopLeftRadius = borderRadius[0];\n              this.borderTopRightRadius = borderRadius[1];\n              this.borderBottomRightRadius = borderRadius[2];\n              this.borderBottomLeftRadius = borderRadius[3];\n            }\n          }\n          break;\n        case 'borderTopLeftRadius':\n        case 'borderTopRightRadius':\n        case 'borderBottomLeftRadius':\n        case 'borderBottomRightRadius':\n          this[key] = BorderRadius.of(value);\n          break;\n        case 'border':\n          this.borderTop = this.borderRight = this.borderLeft = this.borderBottom = Border.of(\n            value\n          );\n          break;\n        case 'borderTop':\n        case 'borderRight':\n        case 'borderLeft':\n        case 'borderBottom':\n        case 'textBorder':\n          this[key] = Border.of(value);\n          break;\n        case 'overflow':\n          this.overflow = EnumUtils.fromString(Overflow, value, Overflow.VISIBLE);\n          break;\n        case 'compositeOperation':\n          this.compositeOperation = value;\n          break;\n        case 'filter':\n          this.filter = value;\n          break;\n        case 'shadow':\n        case 'textShadow':\n          this[key] = Shadow.of(value);\n          break;\n        case 'textBorderPosition':\n          this.textBorderPosition = EnumUtils.fromString(\n            TextBorderPosition,\n            value,\n            TextBorderPosition.OUTER\n          );\n          break;\n        case 'pointerEvents':\n          this.pointerEvents = EnumUtils.fromString(PointerEvents, value, PointerEvents.AUTO);\n          break;\n        case 'cursor':\n          this.cursor = value;\n          break;\n        default:\n          console.warn('unknown style:' + k + ' value:' + value);\n          break;\n      }\n    }\n    return this;\n  }\n\n  public getSnapshotForAnimation(target: XObject, props: AnimationValues): AnimationProps {\n    const result: AnimationProps = {};\n    for (const name in props) {\n      this.fillSnapshotForAnimation(target, name, props[name], result);\n    }\n    return result;\n  }\n\n  public applyAnimationResult(result: AnimationValues) {\n    for (const name in result) {\n      if (name === 'backgroundColor') {\n        if (!this.background) {\n          this.background = new Background();\n        }\n        this.background.color = result[name] as Color;\n      } else {\n        (this as any)[name] = result[name];\n      }\n    }\n  }\n\n  clone(): Style {\n    const cloned = new Style();\n    cloned.width = this.width;\n    cloned.minWidth = this.minWidth;\n    cloned.maxWidth = this.maxWidth;\n    cloned.height = this.height;\n    cloned.minHeight = this.minHeight;\n    cloned.maxHeight = this.maxHeight;\n    cloned.position = this.position;\n    cloned.display = this.display;\n    cloned.left = this.left;\n    cloned.right = this.right;\n    cloned.top = this.top;\n    cloned.bottom = this.bottom;\n    if (this.paddingTop) {\n      cloned.paddingTop = this.paddingTop.clone();\n    }\n    if (this.paddingRight) {\n      cloned.paddingRight = this.paddingRight.clone();\n    }\n    if (this.paddingBottom) {\n      cloned.paddingBottom = this.paddingBottom.clone();\n    }\n    if (this.paddingLeft) {\n      cloned.paddingLeft = this.paddingLeft.clone();\n    }\n    if (this.marginTop) {\n      cloned.marginTop = this.marginTop.clone();\n    }\n    if (this.marginRight) {\n      cloned.marginRight = this.marginRight.clone();\n    }\n    if (this.marginBottom) {\n      cloned.marginBottom = this.marginBottom.clone();\n    }\n    if (this.marginLeft) {\n      cloned.marginLeft = this.marginLeft.clone();\n    }\n    cloned.perspectiveOriginX = this.perspectiveOriginX;\n    cloned.perspectiveOriginY = this.perspectiveOriginY;\n    cloned.transformX = this.transformX;\n    cloned.transformY = this.transformY;\n    cloned.alpha = this.alpha;\n    cloned.rotation = this.rotation;\n    cloned.scaleX = this.scaleX;\n    cloned.scaleY = this.scaleY;\n    cloned.skewX = this.skewX;\n    cloned.skewY = this.skewY;\n    if (this.shadow) {\n      cloned.shadow = this.shadow.clone();\n    }\n    if (this.textShadow) {\n      cloned.textShadow = this.textShadow.clone();\n    }\n    cloned.textBorderPosition = this.textBorderPosition;\n    if (this.textBorder) {\n      cloned.textBorder = this.textBorder.clone();\n    }\n    cloned.visibility = this.visibility;\n    if (this.background) {\n      cloned.background = this.background.clone();\n    }\n    cloned.boxSizing = this.boxSizing;\n    cloned.color = this.color.clone();\n    if (this.font) {\n      cloned.font = this.font.clone();\n    }\n    cloned.lineHeight = this.lineHeight;\n    cloned.textAlign = this.textAlign;\n    cloned.verticalAlign = this.verticalAlign;\n\n    if (this.borderTop) {\n      cloned.borderTop = this.borderTop.clone();\n    }\n    if (this.borderRight) {\n      cloned.borderRight = this.borderRight.clone();\n    }\n    if (this.borderBottom) {\n      cloned.borderBottom = this.borderBottom.clone();\n    }\n    if (this.borderLeft) {\n      cloned.borderLeft = this.borderLeft.clone();\n    }\n    if (this.borderTopLeftRadius) {\n      cloned.borderTopLeftRadius = this.borderTopLeftRadius.clone();\n    }\n    if (this.borderTopRightRadius) {\n      cloned.borderTopRightRadius = this.borderTopRightRadius.clone();\n    }\n    if (this.borderBottomRightRadius) {\n      cloned.borderBottomRightRadius = this.borderBottomRightRadius.clone();\n    }\n    if (this.borderBottomLeftRadius) {\n      cloned.borderBottomLeftRadius = this.borderBottomLeftRadius.clone();\n    }\n\n    cloned.overflow = this.overflow;\n    cloned.compositeOperation = this.compositeOperation;\n    cloned.aspectRatio = this.aspectRatio;\n    cloned.filter = this.filter;\n    cloned.cursor = this.cursor;\n    cloned.pointerEvents = this.pointerEvents;\n    return cloned;\n  }\n\n  private fillSnapshotForAnimation(\n    target: XObject,\n    name: string,\n    to: string | number | IAnimatable<any>,\n    result: AnimationProps\n  ) {\n    const key = this.normalize(name);\n    switch (key) {\n      case 'scaleX':\n      case 'scaleY':\n      case 'alpha':\n      case 'rotation':\n      case 'skewX':\n      case 'skewY':\n      case 'aspectRatio':\n        {\n          let numberTo = NaN;\n          if (typeof to === 'number') {\n            numberTo = to;\n          } else if (typeof to === 'string') {\n            numberTo = parseFloat(to);\n          }\n          if (isNaN(numberTo)) {\n            console.warn(`invalid value (${to}) for ${key}`);\n            break;\n          }\n          result[key] = {\n            from: this[key],\n            to: numberTo,\n            type: AnimationValueType.NUMBER\n          };\n        }\n        break;\n\n      case 'paddingRight':\n      case 'paddingLeft':\n      case 'marginRight':\n      case 'marginLeft':\n      case 'transformX':\n      case 'width':\n      case 'minWidth':\n      case 'maxWidth':\n      case 'left':\n      case 'right':\n      case 'perspectiveOriginX': {\n        const from: BaseValue = this[key] || BaseValue.of(0);\n        const animatedValue = Style.calculateAnimationBaseValue(key, from, to, target.getWidth());\n        if (animatedValue) {\n          result[key] = animatedValue;\n        }\n        break;\n      }\n      case 'paddingTop':\n      case 'paddingBottom':\n      case 'marginTop':\n      case 'marginBottom':\n      case 'transformY':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'top':\n      case 'bottom':\n      case 'perspectiveOriginY': {\n        const from: BaseValue = this[key] || BaseValue.of(0);\n        const animatedValue = Style.calculateAnimationBaseValue(key, from, to, target.getHeight());\n        if (animatedValue) {\n          result[key] = animatedValue;\n        }\n        break;\n      }\n      case 'color': {\n        let color: Color | undefined;\n        if (typeof to === 'string') {\n          color = Color.of(to);\n        } else if (to instanceof Color) {\n          color = to;\n        }\n        if (!color) {\n          console.warn(`invalid value (${to}) for ${key}`);\n          break;\n        }\n        result[key] = {\n          from: this[key],\n          to: color,\n          type: AnimationValueType.ANIMATABLE\n        };\n        break;\n      }\n      case 'backgroundColor': {\n        let color: Color | undefined;\n        if (typeof to === 'string') {\n          color = Color.of(to);\n        } else if (to instanceof Color) {\n          color = to;\n        }\n        if (!color) {\n          console.warn(`invalid value (${to}) for ${key}`);\n          break;\n        }\n        result[key] = {\n          from: (this.background && this.background.color) || Color.WHITE,\n          to: color,\n          type: AnimationValueType.ANIMATABLE\n        };\n        break;\n      }\n      case 'padding':\n        this.fillSnapshotForAnimation(target, 'paddingTop', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingRight', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingBottom', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingLeft', to, result);\n        break;\n      case 'margin':\n        this.fillSnapshotForAnimation(target, 'marginTop', to, result);\n        this.fillSnapshotForAnimation(target, 'marginRight', to, result);\n        this.fillSnapshotForAnimation(target, 'marginBottom', to, result);\n        this.fillSnapshotForAnimation(target, 'marginLeft', to, result);\n        break;\n      case 'perspectiveOrigin':\n        this.fillSnapshotForAnimation(target, 'perspectiveOriginX', to, result);\n        this.fillSnapshotForAnimation(target, 'perspectiveOriginY', to, result);\n        break;\n      case 'transform':\n        this.fillSnapshotForAnimation(target, 'transformX', to, result);\n        this.fillSnapshotForAnimation(target, 'transformY', to, result);\n        break;\n      case 'scale':\n        this.fillSnapshotForAnimation(target, 'scaleX', to, result);\n        this.fillSnapshotForAnimation(target, 'scaleY', to, result);\n        break;\n      case 'borderRadius':\n        const borderRadius = Style.parseBorderRadius(to);\n        if (borderRadius) {\n          this.fillSnapshotForAnimation(target, 'borderTopLeftRadius', borderRadius[0], result);\n          this.fillSnapshotForAnimation(target, 'borderTopRightRadius', borderRadius[1], result);\n          this.fillSnapshotForAnimation(target, 'borderBottomRightRadius', borderRadius[2], result);\n          this.fillSnapshotForAnimation(target, 'borderBottomLeftRadius', borderRadius[3], result);\n        }\n        break;\n      case 'borderTopLeftRadius':\n      case 'borderTopRightRadius':\n      case 'borderBottomLeftRadius':\n      case 'borderBottomRightRadius':\n        {\n          let radius: BorderRadius | undefined;\n          if (typeof to === 'string' || typeof to === 'number') {\n            radius = BorderRadius.of(to);\n          } else if (to instanceof BorderRadius) {\n            radius = to;\n          }\n          if (!radius) {\n            console.warn(`invalid value (${to}) for ${key}`);\n            break;\n          }\n\n          const from = this[key] || BorderRadius.of(0);\n          let value1: BaseValue;\n          if (radius.value1.unit === BaseValueUnit.PERCENTAGE) {\n            value1 = from.value1.toPercentage(target.getWidth());\n          } else {\n            value1 = from.value1.toAbsolute(target.getWidth());\n          }\n          let value2: BaseValue;\n          if (radius.value2.unit === BaseValueUnit.PERCENTAGE) {\n            value2 = from.value2.toPercentage(target.getHeight());\n          } else {\n            value2 = from.value2.toAbsolute(target.getHeight());\n          }\n\n          result[key] = {\n            from: new BorderRadius(value1, value2),\n            to: radius,\n            type: AnimationValueType.ANIMATABLE\n          };\n        }\n        break;\n      case 'borderLeft':\n      case 'borderRight':\n      case 'borderTop':\n      case 'borderBottom':\n      case 'textBorder':\n        {\n          let border: Border | undefined;\n          if (typeof to === 'string') {\n            border = Border.of(to);\n          } else if (to instanceof Border) {\n            border = to;\n          }\n          if (!border) {\n            console.warn(`invalid value (${to}) for ${key}`);\n            break;\n          }\n          result[key] = {\n            from: this[key] || Border.DEFAULT,\n            to: border,\n            type: AnimationValueType.ANIMATABLE\n          };\n        }\n        break;\n      case 'border':\n        this.fillSnapshotForAnimation(target, 'borderLeft', to, result);\n        this.fillSnapshotForAnimation(target, 'borderRight', to, result);\n        this.fillSnapshotForAnimation(target, 'borderTop', to, result);\n        this.fillSnapshotForAnimation(target, 'borderBottom', to, result);\n        break;\n      case 'shadow':\n      case 'textShadow':\n        {\n          let shadow: Shadow | undefined;\n          if (typeof to === 'string') {\n            shadow = Shadow.of(to);\n          } else if (to instanceof Shadow) {\n            shadow = to;\n          }\n          if (!shadow) {\n            console.warn(`invalid value (${to}) for ${key}`);\n            break;\n          }\n          result[key] = {\n            from: this[key] || new Shadow(0, 0, 0, Color.WHITE),\n            to: shadow,\n            type: AnimationValueType.ANIMATABLE\n          };\n        }\n        break;\n      default:\n        console.warn('unsupported animation attribute:' + name);\n        break;\n    }\n  }\n\n  private static calculateAnimationBaseValue(\n    key: string,\n    from: BaseValue,\n    to: string | number | IAnimatable<any>,\n    base: number\n  ) {\n    let toBaseValue: BaseValue | undefined;\n    if (typeof to === 'number' || typeof to === 'string') {\n      toBaseValue = BaseValue.of(to);\n    } else if (to instanceof BaseValue) {\n      toBaseValue = to;\n    }\n    if (!toBaseValue) {\n      console.warn(`invalid value (${to}) for ${key}`);\n      return undefined;\n    }\n    if (toBaseValue.unit === BaseValueUnit.PERCENTAGE) {\n      return {\n        from: from.toPercentage(base),\n        to: toBaseValue,\n        type: AnimationValueType.ANIMATABLE\n      };\n    } else {\n      return {\n        from: from.toAbsolute(base),\n        to: toBaseValue,\n        type: AnimationValueType.ANIMATABLE\n      };\n    }\n  }\n\n  private static parseBorderRadius(\n    value: string | number | IAnimatable<any>\n  ): BorderRadius[] | undefined {\n    if (typeof value === 'number') {\n      const borderRadius = new BorderRadius(BaseValue.of(value));\n      return [borderRadius, borderRadius, borderRadius, borderRadius];\n    } else if (isIAnimatable(value)) {\n      return [\n        value as BorderRadius,\n        value as BorderRadius,\n        value as BorderRadius,\n        value as BorderRadius\n      ];\n    } else {\n      const ps = value.toString().split('/');\n      if (ps.length === 1) {\n        const borderRadius = Style.parse4Dirs(ps[0]);\n        if (borderRadius) {\n          return [\n            new BorderRadius(borderRadius[0]),\n            new BorderRadius(borderRadius[1]),\n            new BorderRadius(borderRadius[2]),\n            new BorderRadius(borderRadius[3])\n          ];\n        }\n      } else if (ps.length === 2) {\n        const borderRadius1 = Style.parse4Dirs(ps[0]);\n        const borderRadius2 = Style.parse4Dirs(ps[1]);\n        if (borderRadius1 && borderRadius2) {\n          return [\n            new BorderRadius(borderRadius1[0], borderRadius2[0]),\n            new BorderRadius(borderRadius1[1], borderRadius2[1]),\n            new BorderRadius(borderRadius1[2], borderRadius2[2]),\n            new BorderRadius(borderRadius1[3], borderRadius2[3])\n          ];\n        }\n      }\n      console.warn(`invalid border radius:${value}`);\n      return undefined;\n    }\n  }\n\n  private static parse4Dirs(value: string): BaseValue[] | undefined {\n    const pieces = value.trim().split(/\\s+/);\n    if (pieces.length === 1) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0])\n      ];\n    } else if (pieces.length === 2) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1])\n      ];\n    } else if (pieces.length === 3) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[2]),\n        BaseValue.of(pieces[1])\n      ];\n    } else if (pieces.length === 4) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[2]),\n        BaseValue.of(pieces[3])\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  private normalize(key: string): string {\n    const pieces = key.split(/-/);\n    let normalized = '';\n    for (const piece of pieces) {\n      if (normalized === '') {\n        normalized = piece;\n      } else {\n        normalized += piece.substring(0, 1).toUpperCase() + piece.substring(1);\n      }\n    }\n    return normalized;\n  }\n}\n","export * from './Background';\nexport * from './Border';\nexport * from './Font';\nexport * from './LineHeight';\nexport * from './Shadow';\nexport * from './Style';\n","/**\n * A lookup table contains valid based64 characters.\n */\nconst STANDARD_ENCODE_TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n/**\n * A class that can be used to encode Uint8Array to base64 string.\n */\nexport class Base64 {\n  /**\n   * Encodes a 4 bytes integer to a base64 string.\n   * @param num an integer (4 bytes) to be encoded.\n   * @returns a encoded base64 string.\n   */\n  private static tripletToBase64(num: number) {\n    return (\n      STANDARD_ENCODE_TABLE[(num >> 18) & 0x3f] +\n      STANDARD_ENCODE_TABLE[(num >> 12) & 0x3f] +\n      STANDARD_ENCODE_TABLE[(num >> 6) & 0x3f] +\n      STANDARD_ENCODE_TABLE[num & 0x3f]\n    );\n  }\n\n  /**\n   * Given an array of Uint8Array object and current position, returns the current uint8 value and\n   * move to next position.\n   * @param dataArray An array of Uint8Array object.\n   * @param index Current position, will be moved to next position after calling this function.\n   * @returns The uint8 value of current position.\n   */\n  private static next(dataArray: Uint8Array[], index: { [key: string]: number }): number {\n    if (dataArray[index.i].length > index.j) {\n      return dataArray[index.i][index.j++];\n    } else {\n      // tslint:disable-next-line: no-empty\n      while (dataArray[++index.i].length === 0) {}\n      index.j = 1;\n      return dataArray[index.i][0];\n    }\n  }\n\n  /**\n   * Encodes an array of Uint8Array to a base64 string, this function is usually used to encode\n   * raw image content to a base64 string which can be used to as src of an image object.\n   * @param dataArray An array of Uint8Array.\n   * @returns A encoded based64 string.\n   */\n  public static encode(dataArray: Uint8Array[]): string {\n    const sizes = [];\n    let len = 0;\n    for (const data of dataArray) {\n      len += data.length;\n      sizes.push({ size: data.length, current: 0 });\n    }\n    const index = { i: 0, j: 0 };\n    const extraBytes = len % 3;\n    const parts: string[] = [];\n    const times = Math.floor(len / 3);\n\n    for (let i = 0; i < times; ++i) {\n      parts.push(\n        this.tripletToBase64(\n          ((this.next(dataArray, index) << 16) & 0xff0000) +\n            ((this.next(dataArray, index) << 8) & 0xff00) +\n            (this.next(dataArray, index) & 0xff)\n        )\n      );\n    }\n\n    if (extraBytes === 1) {\n      const tmp = this.next(dataArray, index);\n      parts.push(STANDARD_ENCODE_TABLE[tmp >> 2] + STANDARD_ENCODE_TABLE[(tmp << 4) & 0x3f] + '==');\n    } else if (extraBytes === 2) {\n      const tmp = (this.next(dataArray, index) << 8) + this.next(dataArray, index);\n      parts.push(\n        STANDARD_ENCODE_TABLE[tmp >> 10] +\n          STANDARD_ENCODE_TABLE[(tmp >> 4) & 0x3f] +\n          STANDARD_ENCODE_TABLE[(tmp << 2) & 0x3f] +\n          '='\n      );\n    }\n\n    return parts.join('');\n  }\n}\n","/**\n * Lookup table.\n */\nconst TABLE = new Uint32Array(256);\nfor (let i = 0; i < 256; i++) {\n  let c = i;\n  for (let k = 0; k < 8; k++) {\n    c = (c & 1) !== 0 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\n  }\n  TABLE[i] = c;\n}\n\n/**\n * A class that can be used to compute the CRC-32 of an Uint8Array.\n */\nexport class CRC32 {\n  /**\n   * Calculate the CRC-32 checksum with the specified array of bytes.\n   * @param bytes the byte array to update the checksum with.\n   * @param start the start offset of the data.\n   * @param length the number of bytes to use for the update.\n   * @returns a number whose lowest 4 bytes presents CRC-32 checksum.\n   */\n  public static calculate(\n    bytes: Uint8Array,\n    start: number = 0,\n    length = bytes.length - start\n  ): number {\n    let crc = -1;\n    for (let i = start, l = start + length; i < l; i++) {\n      crc = (crc >>> 8) ^ TABLE[(crc ^ bytes[i]) & 0xff];\n    }\n    return crc ^ -1;\n  }\n}\n","export class ContainerUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Checks a map is empty.\n   * @param map a map to be checked.\n   * @returns True if the map is undefined or empty.\n   */\n  public static isEmpty(map: { [key: string]: any } | undefined): boolean {\n    if (!map) return true;\n    for (const key in map) {\n      if (map.hasOwnProperty(key)) return false;\n    }\n    return true;\n  }\n}\n","/**\n * A class that used to delay a function call, and it always cancel the pending call in case of new call come.\n *\n * Code example:\n *\n * Print a 'hello world' after 100ms.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * ```\n *\n * Print a 'hello world' once after 100ms, the first call will be cancelled.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * ```\n *\n * Print a 'hello world' twice because the second call is after first one was invoked.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * setTimeout(() => {\n *   delay.call(() => {\n *     console.log('hello world');\n *   });\n * }, 200);\n * ```\n */\nexport class Delay {\n  /**\n   * The delay time, unit is ms.\n   */\n  private delayTime: number;\n  /**\n   * A timeout handler used to cancel the timeout for the new calls.\n   */\n  private delayHandler: any = 0;\n  /**\n   * The pending function call.\n   */\n  private func?: () => any;\n  /**\n   * True indicates that current delay calls is paused.\n   */\n  private paused: boolean = false;\n\n  /**\n   * Creates an instance of Delay.\n   * @param delayTime The delay time, unit is ms.\n   */\n  constructor(delayTime: number) {\n    this.delayTime = delayTime;\n  }\n\n  /**\n   * Set a new pending function call, cancel the current one if any and restart a new round of wait.\n   * @param func The new pending function call.\n   */\n  public call(func: () => any) {\n    this.func = func;\n    if (this.paused) {\n      return;\n    }\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.start();\n  }\n\n  /**\n   * Pause the current pending calls.\n   */\n  public pause() {\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.paused = true;\n  }\n\n  /**\n   * Resume the paused pending process.\n   */\n  public resume() {\n    if (this.paused) {\n      this.paused = false;\n      if (this.func) {\n        this.start();\n      }\n    }\n  }\n\n  /**\n   * Cancel the wait process and delete the pending function call if any.\n   */\n  public cancel() {\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.func = undefined;\n    this.paused = false;\n  }\n\n  /**\n   * If the pending function call is set, start the wait process.\n   */\n  private start() {\n    if (this.func) {\n      this.delayHandler = setTimeout(() => {\n        this.delayHandler = 0;\n        if (this.func) {\n          this.func();\n          this.func = undefined;\n        }\n      }, this.delayTime);\n    }\n  }\n}\n","import { Color } from '../base/Color';\nimport { Rect } from '../base/Rect';\nimport { RoundRect } from '../base/RoundRect';\nimport { BitmapTextSheet } from '../components/BitmapText';\nimport { SpriteFrame, SpriteSheet } from '../components/Sprite';\nimport { XObject } from '../components/XObject';\nimport { ResourceRegistry } from '../resource/ResourceRegistry';\nimport { Overflow } from '../style/Style';\n\n/**\n * A class contains static draw util methods.\n */\nexport class DrawUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Draws an element to canvas, it takes 3 steps:\n   *\n   * 1. Draw background (if any).\n   * 1. Draw border and calculate the clip.\n   * 1. Draw content.\n   *\n   * @param element The element to be drawn.\n   * @param ctx The rendering context of target canvas.\n   */\n  public static drawElement(element: XObject, ctx: CanvasRenderingContext2D) {\n    const style = element.style;\n    if (style.compositeOperation) {\n      ctx.globalCompositeOperation = style.compositeOperation;\n    }\n\n    // Step 1, calculate border.\n    const topWidth = style.borderTop ? style.borderTop.width : 0;\n    const rightWidth = style.borderRight ? style.borderRight.width : 0;\n    const bottomWidth = style.borderBottom ? style.borderBottom.width : 0;\n    const leftWidth = style.borderLeft ? style.borderLeft.width : 0;\n    const outerRect = new RoundRect()\n      .applySize(element.rect.width, element.rect.height)\n      .applyRadius(\n        style.borderTopLeftRadius,\n        style.borderTopRightRadius,\n        style.borderBottomLeftRadius,\n        style.borderBottomRightRadius\n      );\n    let innerRect: RoundRect;\n    if (topWidth > 0 || rightWidth > 0 || bottomWidth > 0 || leftWidth > 0) {\n      innerRect = outerRect.applyBorder(topWidth, rightWidth, bottomWidth, leftWidth);\n    } else {\n      innerRect = outerRect;\n    }\n\n    // Step 2, draw shadow.\n    if (style.shadow && style.shadow.isEnable()) {\n      ctx.save();\n      ctx.shadowBlur = style.shadow.blur;\n      ctx.shadowColor = style.shadow.color.toString();\n      ctx.shadowOffsetX = style.shadow.offsetX;\n      ctx.shadowOffsetY = style.shadow.offsetY;\n\n      const x = Math.abs(style.shadow.offsetX) + style.shadow.blur;\n      const y = Math.abs(style.shadow.offsetY) + style.shadow.blur;\n      const shadowRect = new RoundRect(\n        outerRect.x1 - x,\n        outerRect.y1 - y,\n        outerRect.x2 + x,\n        outerRect.y2 + y\n      );\n\n      ctx.beginPath();\n      shadowRect.makePath(ctx, true, true);\n      outerRect.makePath(ctx, false, false);\n      ctx.closePath();\n      ctx.clip();\n\n      ctx.fillStyle = 'black';\n      ctx.beginPath();\n      outerRect.makePath(ctx, true, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n    }\n\n    // Step 3, draw background.\n    ctx.save();\n    element.drawBackground(ctx, outerRect, innerRect);\n    ctx.restore();\n\n    // Step 4, draw border\n    if (topWidth > 0 || rightWidth > 0 || bottomWidth > 0 || leftWidth > 0) {\n      const topColor = style.borderTop ? style.borderTop.color : undefined;\n      const rightColor = style.borderRight ? style.borderRight.color : undefined;\n      const bottomColor = style.borderBottom ? style.borderBottom.color : undefined;\n      const leftColor = style.borderLeft ? style.borderLeft.color : undefined;\n\n      const colors: Color[] = [];\n      if (topColor) {\n        colors.push(topColor);\n      }\n      if (rightColor) {\n        colors.push(rightColor);\n      }\n      if (bottomColor) {\n        colors.push(bottomColor);\n      }\n      if (leftColor) {\n        colors.push(leftColor);\n      }\n      const color = colors[0];\n      let sameColor = true;\n      for (let i = 1; i < colors.length; ++i) {\n        if (!color.equals(colors[i])) {\n          sameColor = false;\n        }\n      }\n\n      if (sameColor) {\n        ctx.beginPath();\n        outerRect.makePath(ctx, true, true);\n        innerRect.makePath(ctx, false, false);\n        ctx.closePath();\n        ctx.fillStyle = color.toString();\n        ctx.fill();\n      } else {\n        if (leftColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x1, outerRect.y1);\n          if (!topColor) {\n            ctx.lineTo(innerRect.x1 + innerRect.leftTopRadiusX, outerRect.y1);\n          }\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftTopRadiusX,\n            innerRect.y1 + innerRect.leftTopRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftBottomRadiusX,\n            innerRect.y2 - innerRect.leftBottomRadiusY\n          );\n          if (!bottomColor) {\n            ctx.lineTo(innerRect.x1 + innerRect.leftBottomRadiusX, outerRect.y2);\n          }\n          ctx.lineTo(outerRect.x1, outerRect.y2);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = leftColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (topColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x2, outerRect.y1);\n          if (!rightColor) {\n            ctx.lineTo(outerRect.x2, outerRect.y1 + outerRect.rightTopRadiusY);\n          }\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightTopRadiusX,\n            innerRect.y1 + innerRect.rightTopRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftTopRadiusX,\n            innerRect.y1 + innerRect.leftTopRadiusY\n          );\n          if (!leftColor) {\n            ctx.lineTo(outerRect.x1, outerRect.y1 + outerRect.leftTopRadiusY);\n          }\n          ctx.lineTo(outerRect.x1, outerRect.y1);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = topColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (rightColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x2, outerRect.y2);\n          if (!bottomColor) {\n            ctx.lineTo(outerRect.x2 - outerRect.rightBottomRadiusX, outerRect.y2);\n          }\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightBottomRadiusX,\n            innerRect.y2 - innerRect.rightBottomRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightTopRadiusX,\n            innerRect.y1 + innerRect.rightTopRadiusY\n          );\n          if (!topColor) {\n            ctx.lineTo(innerRect.x2 - innerRect.rightTopRadiusX, outerRect.y1);\n          }\n          ctx.lineTo(outerRect.x2, outerRect.y1);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = rightColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (bottomColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x1, outerRect.y2);\n          if (!leftColor) {\n            ctx.lineTo(outerRect.x1, outerRect.y2 - outerRect.leftBottomRadiusY);\n          }\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftBottomRadiusX,\n            innerRect.y2 - innerRect.leftBottomRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightBottomRadiusX,\n            innerRect.y2 - innerRect.rightBottomRadiusY\n          );\n          if (!rightColor) {\n            ctx.lineTo(outerRect.x2, outerRect.y2 - outerRect.rightBottomRadiusY);\n          }\n          ctx.lineTo(outerRect.x2, outerRect.y2);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = bottomColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n      }\n    }\n\n    // Step 6, draw content\n    if (element.style.overflow === Overflow.HIDDEN) {\n      ctx.save();\n      innerRect.clip(ctx);\n      element.drawContent(ctx);\n      ctx.restore();\n    } else {\n      element.drawContent(ctx);\n    }\n  }\n\n  /**\n   * Returns the image instance while drawing the frame.\n   * @param frame The current frame.\n   * @param parent The top level configuration.\n   * @returns The image instance for this frame.\n   */\n  public static getFrameImage(\n    frame: SpriteFrame,\n    parent: SpriteSheet | BitmapTextSheet\n  ): HTMLImageElement | undefined {\n    if (frame.image) {\n      return frame.image;\n    } else if (frame.url) {\n      return ResourceRegistry.DefaultInstance.get(frame.url);\n    } else if (parent.image) {\n      return parent.image;\n    } else if (parent.url) {\n      return ResourceRegistry.DefaultInstance.get(parent.url);\n    }\n    return undefined;\n  }\n\n  /**\n   * Calculate the size of each frame.\n   * @param frame The current frame.\n   * @param parent The top level configuration.\n   * @returns The size of current frame.\n   */\n  public static getFrameSize(\n    frame: SpriteFrame,\n    parent: SpriteSheet | BitmapTextSheet\n  ): { width: number; height: number } {\n    const size = { width: 0, height: 0 };\n    if (parent.width !== undefined) {\n      size.width = parent.width;\n    } else if (frame.destWidth !== undefined) {\n      size.width = frame.destWidth + (frame.destX || 0);\n    } else if (frame.srcWidth !== undefined) {\n      size.width = frame.srcWidth;\n    } else {\n      const image = this.getFrameImage(frame, parent);\n      if (image) {\n        size.width = image.width;\n      }\n    }\n    if (parent.height !== undefined) {\n      size.height = parent.height;\n    } else if (frame.destHeight !== undefined) {\n      size.height = frame.destHeight + (frame.destY || 0);\n    } else if (frame.srcHeight !== undefined) {\n      size.height = frame.srcHeight;\n    } else {\n      const image = this.getFrameImage(frame, parent);\n      if (image) {\n        size.height = image.height;\n      }\n    }\n    return size;\n  }\n\n  /**\n   * Draws content of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public static drawFrame(\n    ctx: CanvasRenderingContext2D,\n    rect: Rect,\n    frame: SpriteFrame,\n    parent: SpriteSheet | BitmapTextSheet\n  ) {\n    // Get image\n    const image = this.getFrameImage(frame, parent);\n    if (!image) {\n      return;\n    }\n    const size = this.getFrameSize(frame, parent);\n    const scaleX = rect.width / size.width;\n    const scaleY = rect.height / size.height;\n\n    const destX = frame.destX !== undefined ? frame.destX : 0;\n    const destY = frame.destY !== undefined ? frame.destY : 0;\n    const destWidth = frame.destWidth !== undefined ? frame.destWidth : size.width - destX;\n    const destHeight = frame.destHeight !== undefined ? frame.destHeight : size.height - destY;\n\n    const srcX = frame.srcX !== undefined ? frame.srcX : 0;\n    const srcY = frame.srcY !== undefined ? frame.srcY : 0;\n    const srcWidth = frame.srcWidth !== undefined ? frame.srcWidth : destWidth;\n    const srcHeight = frame.srcHeight !== undefined ? frame.srcHeight : destHeight;\n\n    try {\n      ctx.drawImage(\n        image,\n        srcX,\n        srcY,\n        srcWidth,\n        srcHeight,\n        destX * scaleX + rect.x,\n        destY * scaleY + rect.y,\n        destWidth * scaleX,\n        destHeight * scaleY\n      );\n    } catch (e) {\n      return;\n    }\n  }\n}\n","/**\n * A class contains static enum util methods.\n *\n * Code example:\n *\n * ```typescript\n * enum TestEnum {\n *   V1 = 'v1',\n *   V2 = 'v2'\n * }\n * EnumUtils.fromString(TestEnum, 'v1', TestEnum.V2);  // TestEnum.v1\n * EnumUtils.fromString(TestEnum, 'v', TestEnum.V2);  // TestEnum.v2\n * EnumUtils.fromStringOrUndefined(TestEnum, 'v');  // undefined\n * ```\n */\nexport class EnumUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Convert a string to an enum value of a give type.\n   * @param enumtype an enum type.\n   * @param value the string converted from.\n   * @param defaultValue if the string is not defined in this enum, return this as default value.\n   * @returns an enum value convert from the string or default value if string is not defined in this enum.\n   */\n  public static fromString<T>(enumtype: any, value: string, defaultValue: T): T {\n    for (const name in enumtype) {\n      if (enumtype[name] === value) {\n        return (value as unknown) as T;\n      }\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Convert a string to an enum value of a give type.\n   * @param enumtype an enum type.\n   * @param value the string converted from.\n   * @returns an enum value convert from the string or undefined if string is not defined in this enum.\n   */\n  public static fromStringOrUndefined<T>(enumtype: any, value: string): T | undefined {\n    for (const name in enumtype) {\n      if (enumtype[name] === value) {\n        return (value as unknown) as T;\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * A LatestList class contains the latest N added elements.\n */\nexport class LatestList<T> {\n  readonly capacity: number;\n\n  readonly elements: T[] = [];\n\n  /**\n   * Construct a LatestList object capacity.\n   * @param capacity The capacity of this list.\n   */\n  constructor(capacity: number = 10) {\n    this.capacity = capacity;\n  }\n\n  /**\n   * Adds an element to this list, drop the oldest one if size of this.elements is more than\n   * this.capacity after adding.\n   * @param element The element to be added.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public add(element: T): LatestList<T> {\n    while (this.elements.length >= this.capacity) {\n      this.elements.shift();\n    }\n    this.elements.push(element);\n    return this;\n  }\n}\n","import { XObject } from '../components/XObject';\nimport { Runtime } from '../runtime/Runtime';\nimport { Font } from '../style/Font';\nimport { BoxSizing } from '../style/Style';\n\n/**\n * A class contains static layout util methods.\n */\nexport class LayoutUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() { }\n\n  /**\n   * Update width/height according to parent size and element's style.\n   *\n   * @param element The element needs to update size.\n   * @param parentWidth Width of parent element.\n   * @param parentHeight Height of parent element.\n   */\n  public static updateSize(element: XObject, parentWidth: number, parentHeight: number) {\n    element.rect.height = element.rect.width = 0;\n    if (element.style.width) {\n      element.rect.width = element.style.width.getValue(parentWidth);\n    }\n    if (element.style.minWidth) {\n      element.rect.width = Math.max(element.style.minWidth.getValue(parentWidth), element.rect.width);\n    }\n    if (element.style.maxWidth) {\n      element.rect.width = Math.min(element.style.maxWidth.getValue(parentWidth), element.rect.width);\n    }\n\n    if (element.style.height) {\n      element.rect.height = element.style.height.getValue(parentHeight);\n    }\n    if (element.style.minHeight) {\n      element.rect.height = Math.max(element.style.minHeight.getValue(parentHeight), element.rect.height);\n    }\n    if (element.style.maxHeight) {\n      element.rect.height = Math.min(element.style.maxHeight.getValue(parentHeight), element.rect.height);\n    }\n\n    // Adjusts aspect ratio if any.\n    if (element.style.aspectRatio !== undefined) {\n      const width = element.rect.height * element.style.aspectRatio;\n      if (width >= element.rect.width) {\n        element.rect.width = width;\n      } else {\n        element.rect.height = element.rect.width / element.style.aspectRatio;\n      }\n    }\n\n    // Adds border & padding size for content box.\n    if (element.style.boxSizing === BoxSizing.CONTENT_BOX) {\n      element.rect.width +=\n        (element.style.paddingLeft ? element.style.paddingLeft.getValue(element.rect.width) : 0) +\n        (element.style.paddingRight ? element.style.paddingRight.getValue(element.rect.width) : 0) +\n        (element.style.borderLeft ? element.style.borderLeft.width : 0) +\n        (element.style.borderRight ? element.style.borderRight.width : 0);\n      element.rect.height +=\n        (element.style.paddingTop ? element.style.paddingTop.getValue(element.rect.height) : 0) +\n        (element.style.paddingBottom\n          ? element.style.paddingBottom.getValue(element.rect.height)\n          : 0) +\n        (element.style.borderTop ? element.style.borderTop.width : 0) +\n        (element.style.borderBottom ? element.style.borderBottom.width : 0);\n    }\n  }\n\n  /**\n   * Update width/height according to parent size and element's style.\n   *\n   * @param element The element needs to update size.\n   * @param parentWidth Width of parent element.\n   * @param parentHeight Height of parent element.\n   */\n  public static updatePositionForAbsoluteElement(\n    element: XObject,\n    parentWidth: number,\n    parentHeight: number\n  ) {\n    if (element.style.right) {\n      element.rect.x =\n        parentWidth -\n        element.rect.width -\n        element.style.right.getValue(parentWidth) -\n        (element.style.marginRight ? element.style.marginRight.getValue(parentWidth) : 0);\n    } else if (element.style.left) {\n      element.rect.x =\n        element.style.left.getValue(parentWidth) +\n        (element.style.marginLeft ? element.style.marginLeft.getValue(parentWidth) : 0);\n    } else {\n      element.rect.x = element.style.marginLeft\n        ? element.style.marginLeft.getValue(parentWidth)\n        : 0;\n    }\n\n    if (element.style.bottom) {\n      element.rect.y =\n        parentHeight -\n        element.rect.height -\n        element.style.bottom.getValue(parentHeight) -\n        (element.style.marginBottom ? element.style.marginBottom.getValue(parentHeight) : 0);\n    } else if (element.style.top) {\n      element.rect.y =\n        element.style.top.getValue(parentHeight) +\n        (element.style.marginTop ? element.style.marginTop.getValue(parentHeight) : 0);\n    } else {\n      element.rect.y = element.style.marginTop ? element.style.marginTop.getValue(parentHeight) : 0;\n    }\n  }\n\n  /**\n   * Measures the width of a text with specified font.\n   * @param text the text to be calculated.\n   * @param font the font of the text.\n   * @returns The width of this text with specified font.\n   */\n  public static measureTextWidth(text: string, font: Font): number {\n    if (text.length === 0) {\n      return 0;\n    }\n    const canvas = Runtime.get().newCanvas();\n    const ctx = canvas.getContext('2d');\n    let width = 0;\n    if (ctx) {\n      ctx.save();\n      ctx.font = font.toString();\n      width = ctx.measureText(text).width;\n      ctx.restore();\n    }\n    Runtime.get().releaseCanvas(canvas);\n    return width;\n  }\n}\n","/**\n * A class contains static string util methods.\n */\nexport class StringUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Returns an list of all results matching a string against a regular expression, including capturing groups.\n   * @param str string used to be matched.\n   * @param regex Regular expression used to match the input string.\n   * @returns list of matched results.\n   */\n  public static matchAll(str: string, regex: RegExp): RegExpExecArray[] {\n    const result: RegExpExecArray[] = [];\n    const localCopy = new RegExp(\n      regex,\n      regex.flags.includes('g') ? regex.flags : regex.flags + 'g'\n    );\n    let match = localCopy.exec(str);\n    while (match) {\n      result.push(match);\n      match = localCopy.exec(str);\n    }\n    return result;\n  }\n}\n","/**\n * A class contains static url util methods.\n */\nexport class URLUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() { }\n\n  /**\n   * Checks an url is absolute url or not.\n   * @param url an url to be checked.\n   */\n  public static isAbsolute(url: string): boolean {\n    return url.indexOf('://') > 0 || url.startsWith('//');\n  }\n\n  /**\n   * Returns the domain of a given url, undefined for absolute url.\n   * @param url an url to be checked.\n   */\n  public static getDomain(url: string): string | undefined {\n    let s;\n    if (url.startsWith('//')) {\n      s = 2;\n    } else {\n      s = url.indexOf('://');\n      if (s <= 0) return undefined;\n      s += 3;\n    }\n    let e = url.indexOf(':', s);\n    if (e < 0) {\n      e = url.indexOf('/', s);\n    }\n    if (e < 0) {\n      return url.substring(s);\n    } else {\n      return url.substring(s, e);\n    }\n  }\n\n  /**\n   * Returns the origin of a given url, undefined for absolute url.\n   * @param url an url to be checked.\n   */\n  public static getOrigin(url: string): string | undefined {\n    let s;\n    if (url.startsWith('//')) {\n      s = 2;\n    } else {\n      s = url.indexOf('://');\n      if (s <= 0) return undefined;\n      s += 3;\n    }\n    const e = url.indexOf('/', s);\n    if (e < 0) {\n      return url;\n    } else {\n      return url.substring(0, e);\n    }\n  }\n}\n","export * from './Base64';\nexport * from './ContainerUtils';\nexport * from './CRC32';\nexport * from './Delay';\nexport * from './DrawUtils';\nexport * from './EnumUtils';\nexport * from './LatestList';\nexport * from './LayoutUtils';\nexport * from './StringUtils';\nexport * from './URLUtils';\n"],"sourceRoot":""}